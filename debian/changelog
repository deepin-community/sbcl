sbcl (2:2.1.10-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 02 Nov 2021 11:22:02 +0100

sbcl (2:2.1.9-1) unstable; urgency=medium

  * New upstream release
  * Use clisp on s390x for bootstrapping, since it now builds there

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 28 Sep 2021 12:24:26 +0200

sbcl (2:2.1.8-1) unstable; urgency=medium

  * New upstream release
  * Add Breaks against cl-nibbles << 20210520.gitdad2524-1~, needed for amd64

 -- Sébastien Villemot <sebastien@debian.org>  Mon, 30 Aug 2021 20:26:50 +0200

sbcl (2:2.1.7-1) unstable; urgency=medium

  * New upstream release
  * skip-stack-scan-precise-gencgc.patch: drop patch, applied upstream
  * Bump S-V to 4.6.0
  * On riscv64, s390x and sh4, try to bootstrap with ecl (since clisp is
    not available there)
  * fix-chill-test.patch: new patch, fixes chill.test.sh in the Debian-specific
    context
  * Remove unused lintian override (hardening-no-pie)
  * Add more fields to d/upstream/metadata
  * sbcl.{postinst,prerm}: replace “which” by “command -v”
  * skip-some-autopkgtests.patch: also skip run-sbcl.test.sh, since it does not
    make sense in an autopkgtest context

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 25 Aug 2021 12:09:46 +0200

sbcl (2:2.1.1-2) unstable; urgency=medium

  * skip-stack-scan-precise-gencgc.patch: new patch from upstream, fixes
    FTBFS on arm64

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 03 Feb 2021 21:37:00 +0100

sbcl (2:2.1.1-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Mon, 01 Feb 2021 21:23:49 +0100

sbcl (2:2.1.0-1) unstable; urgency=medium

  * New upstream release
  * Remove --with-sb-linkable-runtime on kfreebsd-*, it is unsupported there

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 02 Jan 2021 11:32:00 +0100

sbcl (2:2.0.11-2) unstable; urgency=medium

  * disable-fcb-threads-test.patch: new patch, disable a test that randomly
    fails on at least i386 and arm64.

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 09 Dec 2020 13:47:57 +0100

sbcl (2:2.0.11-1) unstable; urgency=medium

  * New upstream release
  * Bump to S-V 4.5.1

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 29 Nov 2020 21:27:23 +0100

sbcl (2:2.0.10-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 27 Oct 2020 17:56:51 +0100

sbcl (2:2.0.9-1) unstable; urgency=low

  [ Sébastien Villemot ]
  * New upstream release
  * Remove --with-sb-pthread-futex on kfreebsd-*, this option no longer exists
  * Add strace as a Build-Depends and an autopkgtest Depends, it is needed
    by futex-wait test

  [ Debian Janitor ]
  * Set upstream metadata fields: Repository.

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 17 Oct 2020 19:43:29 +0200

sbcl (2:2.0.6-2) unstable; urgency=medium

  * Update Breaks on cl-cffi, since autopkgtest for <= 1:0.21.0 will fail
    against sbcl >= 2:2.0.6-1

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 12 Jul 2020 10:18:34 +0200

sbcl (2:2.0.6-1) unstable; urgency=medium

  * New upstream release
  * Add --with-sb-linkable-runtime feature on amd64 and i386 CPUs. Thanks
    to Florian Margaine for the suggestion

 -- Sébastien Villemot <sebastien@debian.org>  Thu, 02 Jul 2020 17:28:47 +0200

sbcl (2:2.0.5-1) unstable; urgency=medium

  * New upstream release
  * Bootstrap done on ppc64
  * Bump to debhelper 13
    + in particular, add uninstalled files to debian/not-installed

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 31 May 2020 19:11:12 +0200

sbcl (2:2.0.4-1) unstable; urgency=medium

  * New upstream release
  * Drop patches applied upstream:
    + powerpc-concurrency-fix.patch
    + kfreebsd-linkflags.patch
    + hppa.patch

 -- Sébastien Villemot <sebastien@debian.org>  Mon, 27 Apr 2020 23:22:04 +0200

sbcl (2:2.0.3-1) unstable; urgency=medium

  * New upstream release
  * Drop powerpc-ppc64el-fix-LINKFLAGS.patch, no longer needed
  * kfreebsd-linkflags.patch: new patch by John Paul Adrian Glaubitz,
    fixes FTBFS on kfreebsd-amd64 (Closes: #955338)
  * Try to build with clisp by default on archs for which sbcl has not
    yet been bootstrapped. Thanks to John Paul Adrian Glaubitz
    (Closes: #954031)
  * hppa.patch: new patch, fixes architecture detection on hppa
  * d/rules: fix architecture detection on ppc64 (Closes: #939453)

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 01 Apr 2020 18:51:36 +0200

sbcl (2:2.0.2-2) unstable; urgency=medium

  * powerpc-ppc64el-fix-LINKFLAGS.patch: new patch, fixes FTBFS on ppc64el
    and powerpc. Thanks to John Paul Adrian Glaubitz. (Closes: #953847)

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 14 Mar 2020 09:47:16 +0100

sbcl (2:2.0.2-1) unstable; urgency=medium

  * New upstream release
  * debian/rules: simplify using debhelper 12.8’s execute_* rules
  * skip-some-autopkgtests.patch: new patch, needed for autopkgtest

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 08 Mar 2020 12:29:44 +0100

sbcl (2:2.0.1-3) unstable; urgency=medium

  * Disable a test in timer.impure that randomly fails. (Closes: #919806)
  * Fail package build if testsuite fails on arm64.

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 05 Feb 2020 14:15:59 +0100

sbcl (2:2.0.1-2) unstable; urgency=medium

  * Add Breaks relationships for versions of cl-asdf and cl-cffi that are
    broken by the removal of stuff from *FEATURES*

 -- Sébastien Villemot <sebastien@debian.org>  Thu, 30 Jan 2020 21:40:17 +0100

sbcl (2:2.0.1-1) unstable; urgency=medium

  * New upstream release
  * Bump S-V to 4.5.0
  * Add an autopkgtest that runs the testsuite

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 28 Jan 2020 15:07:45 +0100

sbcl (2:2.0.0-1) unstable; urgency=medium

  * New upstream version 2.0.0

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 31 Dec 2019 16:59:11 +0100

sbcl (2:1.5.9-1) unstable; urgency=medium

  * New upstream version 1.5.9

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 30 Nov 2019 16:48:05 +0100

sbcl (2:1.5.8-1) unstable; urgency=medium

  * New upstream version 1.5.8

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 26 Oct 2019 15:29:14 +0200

sbcl (2:1.5.7-1) unstable; urgency=medium

  * New upstream release
  * d/copyright: reflect upstream changes
  * alpha.patch: drop patch, applied upstream (Really closes: #939541)
  * Bump to S-V 4.4.1

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 12 Oct 2019 17:05:11 +0200

sbcl (2:1.5.6-2) unstable; urgency=medium

  * Replace texlive-generic-recommended by texlive-plain-generic in
    Build-Depends (Closes: #939807)
  * Make sbcl arch:any (Closes: #939452)
  * alpha.patch: new patch, fixes an issue on alpha (Closes: #939541)

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 14 Sep 2019 16:38:38 +0200

sbcl (2:1.5.6-1) unstable; urgency=medium

  * New upstream release
  * Trim trailing whitespace.
  * Use secure URI in debian/watch.
  * Set upstream metadata fields: Archive.

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 01 Sep 2019 10:39:00 +0200

sbcl (2:1.5.5-2) unstable; urgency=medium

  * armhf-is-not-v5.patch: add back the -marm flag. (Really closes: #931795)

 -- Sébastien Villemot <sebastien@debian.org>  Mon, 12 Aug 2019 16:48:44 +0200

sbcl (2:1.5.5-1) unstable; urgency=medium

  * New upstream release
  * armhf-is-not-v5.patch: new patch, remove ARM-specific GCC flags.
    In particular, this fixes the FTBFS with gcc-9. (Closes: #931795)
  * Bump to S-V 4.4.0

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 11 Aug 2019 22:31:57 +0200

sbcl (2:1.5.4-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 06 Jul 2019 15:28:07 +0200

sbcl (2:1.5.3-1) experimental; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 29 May 2019 19:09:43 +0200

sbcl (2:1.5.2-1) experimental; urgency=low

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 30 Apr 2019 16:49:41 +0200

sbcl (2:1.5.1-1) experimental; urgency=low

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 06 Apr 2019 16:31:57 +0200

sbcl (2:1.5.0-1) experimental; urgency=low

  * New upstream release
  * Drop patches applied upstream
    + coerce-float.patch
    + deduplicate-initargs.patch
    + tree-equal-eql.patch
  * Remove kfreebsd-i386 from the list of supported archs. Bootstrapping
    efforts failed with a bus error (both with clisp and with old sbcl
    binary)

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 19 Mar 2019 11:03:53 +0100

sbcl (2:1.4.16-2) unstable; urgency=medium

  * Backport bugfixes from 1.5.0
    + coerce-float.patch
    + deduplicate-initargs.patch
    + tree-equal-eql.patch

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 26 Feb 2019 10:08:52 +0100

sbcl (2:1.4.16-1) unstable; urgency=medium

  * New upstream release
  * Replace calls to dpkg-maintscript-helper in maintainer scripts by
    debian/sbcl.maintscript

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 02 Feb 2019 09:50:02 +0100

sbcl (2:1.4.15-1) unstable; urgency=medium

  * New upstream release
  * Bump to debhelper compat level 12
  * Bump to S-V 4.3.0

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 30 Dec 2018 21:47:13 +0100

sbcl (2:1.4.14-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Fri, 30 Nov 2018 11:24:33 +0100

sbcl (2:1.4.13-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 28 Oct 2018 17:43:51 +0100

sbcl (2:1.4.12-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 07 Oct 2018 17:12:44 +0200

sbcl (2:1.4.11-1) unstable; urgency=medium

  * New upstream release
  * Bump S-V to 4.2.1

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 08 Sep 2018 10:16:48 +0200

sbcl (2:1.4.10-1) unstable; urgency=medium

  * New upstream release
  * Add Rules-Requires-Root: no
  * Bump to S-V 4.2.0

 -- Sébastien Villemot <sebastien@debian.org>  Thu, 02 Aug 2018 11:46:20 +0200

sbcl (2:1.4.9-1) unstable; urgency=medium

  * New upstream release
  * Make test failures fatal on amd64 and i386
  * Add build-features.lisp-expr to debian/clean

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 01 Jul 2018 16:19:25 +0200

sbcl (2:1.4.8-1) unstable; urgency=medium

  * New upstream release

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 02 Jun 2018 10:39:07 +0200

sbcl (2:1.4.7-1) unstable; urgency=medium

  * New upstream release.
  * armhf-sb-rotate-byte.patch: drop patch, applied upstream.

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 01 May 2018 20:58:06 +0200

sbcl (2:1.4.6-2) unstable; urgency=medium

  * armhf-sb-rotate-byte.patch: new patch, fixes FTBFS on armhf.
  * Use stage2 compiler to generate the FASL version number.

 -- Sébastien Villemot <sebastien@debian.org>  Mon, 09 Apr 2018 16:57:46 +0200

sbcl (2:1.4.6-1) unstable; urgency=medium

  * New upstream release.
  * Set Maintainer to debian-common-lisp@l.d.o.
  * Bump to Standards-Version 4.1.4.
  * In d/rules, use --no-sysinit and --no-userinit when calling sbcl, to avoid
    interference from the environment.
  * Reinstate powerpc-concurrency-fix.patch, actually still needed.
  * Reinstate kfreebsd-pthread-futex.patch, now that kfreebsd-* buildds are
    back.
  * Drop dont-split-doc.patch, no longer needed.

 -- Sébastien Villemot <sebastien@debian.org>  Sat, 07 Apr 2018 22:39:31 +0200

sbcl (2:1.4.5-1) unstable; urgency=medium

  * New upstream release.
  * Drop kfreebsd-pthread-futex.patch, since kfreebsd-* buildds are gone.
  * Drop powerpc-concurrency-fix.patch, no longer needed.

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 28 Feb 2018 18:30:49 +0100

sbcl (2:1.4.4-1) unstable; urgency=medium

  * New upstream release.
  * Vcs-* fields now point to salsa.

 -- Sébastien Villemot <sebastien@debian.org>  Thu, 01 Feb 2018 10:56:57 +0100

sbcl (2:1.4.3-1) unstable; urgency=medium

  * New upstream release.
  * d/copyright: reflect upstream changes.
  * Bump to debhelper compat level 11.
  * Drop build-dependency on dh-lisp.
  * Bump Standards-Version to 4.1.3.

 -- Sébastien Villemot <sebastien@debian.org>  Sun, 21 Jan 2018 17:42:03 +0100

sbcl (2:1.4.2-1) unstable; urgency=medium

  * New upstream release.
  * Regenerate version.lisp-expr (with ".debian" suffix) from d/rules.
    As a consequence, drop set-debian-version.patch.
  * No longer delete /usr/lib/sbcl/sbcl.core in postinst's abort-* and prerm.
  * Remove useless sbcl-{doc,source}.dirs.
  * Simplify debian/rules using dh.
    Incidentally, inject flags from dpkg-buildflags. Also remove locales cruft.
  * Ship sbcl-internals manual in info format.
  * Bump Standards-Version to 4.1.2.
  * Rewrite debian/copyright from scratch using machine-readable format 1.0.
  * Fix test failures at build time:
    + add "ed" to Build-Depends, needed by some tests.
    + new testsuite-homedir.patch, needed because some tests expect HOME to be
      meaningful (which is not guaranteed when building Debian packages).
  * Use which (instead of full path) to detect presence of update-binfmts in
    postinst/prerm, to make lintian happy.
  * Add lintian override for hardening-no-pie.

 -- Sébastien Villemot <sebastien@debian.org>  Tue, 12 Dec 2017 15:50:59 +0100

sbcl (2:1.4.1-1) unstable; urgency=medium

  * New upstream release.
  * d/watch: bump to file format version 4.
  * Remove obsolete Breaks/Replaces against old versions of packages.
  * Remove useless ${shlibs:Depends} for arch:all packages.
  * Use secure URL for Vcs-Git.
  * Fix Vcs-Browser (Closes: #873168)
  * Remove armel from supported architectures, since SBCL requires ARM v5.
  * Mark sbcl-{doc,source} as M-A foreign.
  * Bump to debhelper compat level 10.
  * Remove d/upstream/signing-key.asc, because upstream does not provide a
    detached signature of the tarball (only signed hashsums).
  * Add a couple of files to debian/clean.
  * d/rules: replace DEB_BUILD_ARCH by DEB_HOST_ARCH, which is the correct
    value when cross-compiling.
  * Rename debian/docs into debian/sbcl.docs for clarity.
  * No longer install obsolete install-clc.lisp.
  * Rename debian/{prerm,postinst} to debian/sbcl.{prerm,postinst} for clarity.
  * No longer ship /etc/sbcl.rc (not loaded at runtime, contains obsolete CLC
    stuff).
  * Install an empty system-wide init file in /etc/sbclrc. (Closes: #608741)
  * Add support for nodoc and nocheck flags of DEB_BUILD_OPTIONS.
  * Bump Standards-Version to 4.1.1.
  * Add myself to Uploaders.
  * Do not leave debian/stage1/ unreadable (patch from Ubuntu).
  * Register sbcl.info into doc-base.

 -- Sébastien Villemot <sebastien@debian.org>  Wed, 01 Nov 2017 10:49:12 +0100

sbcl (2:1.3.14-2) unstable; urgency=medium

  * Upload to unstable

 -- Christoph Egger <christoph@debian.org>  Thu, 26 Jan 2017 11:40:42 +0100

sbcl (2:1.3.14-1) experimental; urgency=medium

  * New upstream version
    changes in sbcl-1.3.14 relative to sbcl-1.3.13:
      * minor incompatible change: the SB-PCL walker no longer recognizes
        macros expanding into a DECLARE expression. This is not a language change,
        since ANSI forbids such usage (X3J13 issue DECLARE-MACROS:FLUSH).
      * enhancement: for several macros such as MULTIPLE-VALUE-{BIND,SETQ}, COND,
        DO{,*,LIST}, {RESTART,HANDLER}-{BIND,CASE}, *CASE, conditions signaled
        during macroexpansion point to the form that caused the problem more
        accurately.
      * enhancement: the "--noinform" command-line option inhibits output from
        save-lisp-and-die in addition to removing the startup banner.
      * bug fix: PROCESS-KILL failed to return errno if the system call failed
      * optimization: slightly more comprehensive treatment of the keyword
        arguments to MAKE-ARRAY in compiler transformations.

 -- Christoph Egger <christoph@debian.org>  Thu, 26 Jan 2017 11:08:14 +0100

sbcl (2:1.3.13-2) unstable; urgency=medium

  * Replace pie patch by upstream one
  * upload to unstable

 -- Christoph Egger <christoph@debian.org>  Tue, 03 Jan 2017 01:26:56 +0100

sbcl (2:1.3.13-1) experimental; urgency=medium

  * New upstream release
    Uploading to experimental first due to the freeze
    changes in sbcl-1.3.13 relative to sbcl-1.3.12:
    * enhancement: SET triggers package locks on undefined variables.
      (lp#1645152)
    * enhancement: new Windows specific option to run-program, :escape-arguments
      (lp#1503496)
    * enhancement: recompiling a MAKE-INSTANCE form with an initarg :INITARG
      CONSTANT where CONSTANT names a constant variable picks up the new value
      of CONSTANT in case it has been redefined. (lp#1644944)
    * optimization: faster TYPEP on undefined at compile-time types and upcoming
      class definitions. (lp#1082967)
    * optimization: memory consumption of each STANDARD-OBJECT instance is
      reduced by 2 words if the compact-instance-header feature is enabled.
    * optimization: CONDITION instances are quicker to allocate.
    * optimization: unoptimized calls to FILL on specialized vectors are now
      just as fast as T vectors.
    * bug fix: get-timezone returns corret DST on 64-bit Windows. (lp#1641058)
    * bug fix: cross reference information in fasls is no longer incompatible
      between different cores (lp#1648186)
    changes in sbcl-1.3.12 relative to sbcl-1.3.11:
    * enhancement: on x86-64, compiled functions loaded from fasl files
      can not be moved, but can be freed, by GC. Additionally, COMPILE will
      produce immobile code if SB-C::*COMPILE-TO-MEMORY-SPACE* is set to
      :IMMOBILE. (Caution: the flag is experimental and subject to change.)
      The benefits are better physical separation of code from data,
      and potentially easier examination of live images by external tools.
    * enhancement: the docstring for SAVE-LISP-AND-DIE has been amended to
      say that the :ROOT-STRUCTURES parameter is not meaningless on gencgc,
      depending on the platform.
    * bug fix: calling a named function (e.g. a DEFUN) concurrently with
      redefining that same function could lead to execution of random bytes.
    * bug fix: yes-or-no-p accepts formatter functions (lp#1639490)
    * bug fix: better handling of exceptions on macOS.


 -- Christoph Egger <christoph@debian.org>  Mon, 02 Jan 2017 21:29:33 +0100

sbcl (2:1.3.11-1) unstable; urgency=medium

  * New upstream release
    changes in sbcl-1.3.11 relative to sbcl-1.3.10:
    * minor incompatible change: SB-EXT:*INTEXP-MAXIMUM-EXPONENT* is removed.
    * enhancement: TRACE ... :REPORT {TRACE,NIL} now work as advertised in the
      documentation string (based on patch by Patrick Stein)
    * enhancement: support unboxed signed-word structure slots on x86, x86-64
      and ARM64. (lp#377616)
    * optimization: faster logical bit-array operations on multidimensional
      arrays.
    * optimization: better GC performance in the presence of many threads.
      (patch by Ilya Perminov, lp#1339924)
    * optimization: multiple-value-call is optimized with multiple argument
      forms, not just one. (lp#753803)
    * bug fix: MAKE-ALIEN-STRING returns the number of allocated bytes as a
      second value as advertised (reported by Johann 'Myrkraverk' Oskarsson)
    * bug fix: when TO-READTABLE is supplied to COPY-READTABLE, it will
      contain only the macros in FROM-READTABLE and no others. (lp#1631506)
    * enhancement: gencgc has been modified for x86-64 on Linux and macOS
      to a support mark-and-sweep as well as the traditional copying strategy.
      It is conceivable that some applications might be adversely affected.
      Please see ':immobile-space' in 'base-target-features.lisp-expr'
      for further details, and possible reasons to disable this feature.
    * enhancement: x86-64 supports shrinking the fixed overhead in a structure
      from 2 words to 1 word, reducing memory consumption in applications
      which create many small structures.
  * [powerpc-concurrency-fix.patch] Re-add. Seems to still (again) be
    needed. Fixes powerpc build

 -- Christoph Egger <christoph@debian.org>  Sun, 06 Nov 2016 13:32:55 +0100

sbcl (2:1.3.10-2) unstable; urgency=medium

  * [Disable-PIE] Fix typo for i386 and add similar fixes for the other
    debian architectures (Closes: #837576) this time for real.

 -- Christoph Egger <christoph@debian.org>  Tue, 25 Oct 2016 22:42:01 +0200

sbcl (2:1.3.10-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.3.10 relative to sbcl-1.3.9:
    * enhancement: more compact low-level error signaling code
    * enhancement: more compact encoding of cross-reference information
    * optimization: faster out of line fixnum-float comparisons.
    * optimization: filling a known simple-vector with a constant value
      is about as fast in unoptimized code as in code compiled with (SPEED 3),
      and the x86-64 implementation is able to use SSE instructions.
    * bug fix: correctly handle the case of a non-local exit within a function
      terminating the extent of dynamic-extent functions and variables in the
      presence of multiple-values (lp#1563127)
    * bug fix: restore builds on the latest OSX with the latest Xcode
      (lp#1470996)
    changes in sbcl-1.3.9 relative to sbcl-1.3.8:
    * minor incompatible change: NAMESTRING prefers to return a BASE-STRING
      instead of (ARRAY CHARACTER (*)) when possible.
    * enhancement: cached make-instance/allocate-instance constructors can now
      get garbage collected.
    * optimization: better performance for some unoptimized operations on
      complex numbers.
    * bug fix: using the options :LOCAL-NICKNAMES and :LOCK in the same
      DEFPACKAGE form no longer signals a bogus error
  * Import patch from Steve Beattie <steve.beattie@canonical.com> to fix
    building when -fPIE is default (Closes: #837576)


 -- Christoph Egger <christoph@debian.org>  Tue, 25 Oct 2016 17:11:56 +0200

sbcl (2:1.3.8-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.3.8 relative to sbcl-1.3.7:
    * minor incompatible change: the system now understands that the CONDITION
      type is disjoint with many other system types.
    * minor incompatible change: argument types in condition report functions
      are now declared (in combination with the above change, this can result in
      early detection of erroneous code).
    * enhancement: simple arrays of any rank can be stack-allocated
      on platforms supporting stack allocation of vectors.
    * optimization: improved type derivation for FIND, POSITION, COUNT, SEARCH,
      MISMATCH and other array and sequence functions.
    * optimization: ALLOCATE-INSTANCE is now as fast as MAKE-INSTANCE.
    * optimization: more efficient CHANGE-CLASS.
    * bug fix: versions of getresuid() and getresgid() in SB-POSIX no longer
      cause memory faults, and should work properly (lp#1603806, reported by
      Kieran Grant)
    * bug fix: handle ENOENT from getprotobyname() (lp#1596043, reported by
      Stephen Hassard)
  * Remove obsolete patches
  * Disable PowerPC patch, should be fixed upstream

 -- Christoph Egger <christoph@debian.org>  Thu, 11 Aug 2016 12:52:40 +0200

sbcl (2:1.3.7-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.3.7 relative to sbcl-1.3.6:
    * bug fix: preserve the name of the destructive function for the destroyed
      constant and important result warnings, even when declared NOTINLINE.
    * optimization: faster operations on list-sets.
    * optimization: better type derivation of set functions.
      (lp#1592152)
    * optimization: load-time TLS-INDEX assignment, and other
      microoptimizations, on x86.
    * optimizations in:
      * APPEND;
      * ECASE/ETYPECASE;
      * ARRAY-DIMENSIONS;
      * ARRAY-TOTAL-SIZE;
      * REMOVE, REMOVE-DUPLICATES, DELETE and DELETE-DUPLICATES on lists.
    changes in sbcl-1.3.6 relative to sbcl-1.3.5:
    * bug fix: do not insert conditional newlines in print-unreadable-object
      (lp#1398290). This reverses a change made in lp#488979 which reversed
      a fix advertised in release 0.8.14 to pass the GCL ANSI Test Suite.
    * bug fix: constant negative rotations of 32-bit quantites are compiled
      correctly on x86-64 and arm.  (lp#1586614, reported by Guillaume Le
      Vaillant)
    changes in sbcl-1.3.5 relative to sbcl-1.3.4:
    * enhancement: the platform's strtod() is exposed as SB-POSIX:STRTOD
    * enhancement: speed up debug info creation for highly nested functions.
      (lp#1563355)
    * enhancement: the interleaved structure slot optimization from
      release 1.2.6 has been ported to all architectures.
    * enhancement: support run-program I/O redirection into lisp streams on
      Windows.
    * bug fix: better wording in missed optimization note. (lp#1003265)
    * bug fix: interpreted (CAS SVREF) was broken
    * bug fix: support CLISP as build host for ARM (lp#1568256, thanks to Tomas
      Hlavaty)
    changes in sbcl-1.3.4 relative to sbcl-1.3.3:
    * enhancement: who-sets and who-references work on DEFGLOBAL. (lp#1552997)
    * enhancement: CONSTANTP understands backquote.
      e.g. (CONSTANTP '`(0 (,CHAR-CODE-LIMIT))) => T
    * optimization: improvements to sequence functions: CONCATENATE, SUBSTITUTE,
      REVERSE.
    * bug fix: SB-EVAL does not signal an error for (THE KEYWORD :FOO)
    * bug fix: a DEFTYPE name that is redefined into a DEFSTRUCT name
      is less likely to cause confusion in the compiler.
    * bug fix: DOCUMENTATION works as intended for classes with non-standard
      metaclasses
    * bug fix: (TYPEP <extended-sequence> <extended-sequence-class>) no longer
      returns NIL in certain situations
    * bug fix: MAKE-SEQUENCE, MAP, CONCATENATE and MERGE accept class objects as
      result-type
    * bug fix: MAKE-SEQUENCE, MAP, CONCATENATE and MERGE expand DEFTYPEs in
      result-type

 -- Christoph Egger <christoph@debian.org>  Tue, 05 Jul 2016 17:05:19 +0200

sbcl (2:1.3.3-1) unstable; urgency=medium

  * Patch texinfo manual for new texinfo (Closes: #815205). Thanks to
    Norbert Preining for the patch
  * New upstream release
    changes in sbcl-1.3.3 relative to sbcl-1.3.2:
    * enhancement: warn about argument mismatch for functions passed as
      arguments to other functions (e.g. REDUCE, MAP) at compile-time.
    * optimization: functions accepting other functions (e.g. REDUCE, FIND) can
      now be constant-folded if all function arguments are declared as foldable.
    * optimization: improved logical operations on integers of unknown type.
    * bug fix: exception handling no longer leaks memory on OS X. (lp#326238)
    changes in sbcl-1.3.2 relative to sbcl-1.3.1:
    * enhancement: {READ,WRITE}-SEQUENCE are much faster for some combinations
      of short sequences and stream types
    * enhancement: MAKE-LIST's result can be stack-allocated on x86-64
    * bug fix: WRITE-SEQUENCE no longer fails to write lists containing integers
      to bivalent streams
    * bug fix: LOGTEST (and hence ODDP) no longer conses when given fixnum
      arguments and small bit positions.  (lp#1277690)
    * bug fix: READ-FROM-STRING compiler-macro does not permute its arguments
    * bug fix: DEFUN of a function name that collides with a system-generated
      structure accessor does not confuse the runtime. (lp#540063)
    * bug fix: heap corruption from miscompiled RESTART-BIND. (lp#1530390)

 -- Christoph Egger <christoph@debian.org>  Tue, 15 Mar 2016 16:54:17 +0100

sbcl (2:1.3.1-1) unstable; urgency=medium

  * New upstream release
    changes in sbcl-1.3.1 relative to sbcl-1.3.0:
    * enhancement: SB-THREAD support for ARM64.
    * enhancement: compiling an out-of-line DEFSTRUCT constructor call
      will warn if a defaulted value is incompatible with its slot type.
    * enhancement: a local INLINE declaration on a structure constructor
      will work as intended, subject to any other factors that inhibit
      inlining, even if the DEFSTRUCT was not itself within a global
      INLINE proclamation for the named constructor
    * enhancement: SB-EXT:DYNAMIC-SPACE-SIZE is now defined for cheneygc.
    * enhancement: x86[-64] platforms support SB-EXT:CAS on structure slots
      of type SB-EXT:WORD
    * enhancement: the interleaved structure slot optimization from
      release 1.2.6 has been ported to 32-bit x86, Sparc, PowerPC, ARM64.
    * enhancement: SB-THREAD:JOIN-THREAD signals a proper error when an attempt
      is made to join the current thread
    * bug fix: NTH-VALUE does not cause stack overflow. (lp#1511419)
    * bug fix: structure constructor type checking is better. (lp#1508735)
    * bug fix: supplied-p variables for unused optional or keyword variables no
      longer confuse SB-DI:PARSE-COMPILED-DEBUG-FUN-LAMBDA-LIST (and thus the
      backtrace machinery) (lp#1498644)
    * bug fix: Backtrace correctly handles undefined-function frames on MIPS.
    * bug fix: WITH-FLOAT-TRAPS-MASKED correctly clears accrued traps on MIPS
      (fixes issues with floating-point type derivation in the compiler).
    * bug fix: FLOAT-NAN-P and FLOAT-TRAPPING-NAN-P now work correctly on MIPS
      and HPPA.
    * bug fix: MIPS context register access now masks to 32 bits (fixing issues
      parsing negative-fixnum values for internal-error arguments and escaped
      debug variables on 64-bit CPUs).
    * bug fix: (SETF SAP-REF-DOUBLE) with constant offset on big-endian MIPS
      now works correctly.
    * bug fix: Callback parameter (argument) handling on MIPS is now vastly
      more correct.
    * bug fix: %DECREMENT-SEMAPHORE adjusts the remaining timeout after a
      spurious wakeup

 -- Christoph Egger <christoph@debian.org>  Sat, 02 Jan 2016 13:05:20 +0100

sbcl (2:1.3.0-1) unstable; urgency=medium

  * New upstream release
    changes in sbcl-1.3.0 relative to sbcl-1.2.16:
      * minor incompatible change: the environment passed to a macro/setf/deftype
        expander is not always an object of type SB-KERNEL:LEXENV.
        It can be nil, as is permissible by the standard.
      * enhancement: ported to ARM64 Linux.
      * enhancement: a new interpreter is included which has many benefits
        over sb-eval. It is disabled by default. See src/interpreter/README
        for instructions to enable it, and further details.
      * bug fix: calling COMPILE when SB-EXT:*EVALUATOR-MODE* was :INTERPRET
        would fail to perform "normal semantic processing such as macro expansion"
        as stipulated by X3J13 issue LOAD-TIME-EVAL.
      * bug fix: SB-UNICODE:CONFUSABLE-P no longer treats "<" and the empty
        string as confusable.  (lp#1504739)
      * bug fix: (ASSERT (COMPUTE-IT ...)) would expand incorrectly
        if COMPUTE-IT was a local macro that shadowed a global function.
      * bug fix: SB-POSIX:CFSETISPEED and SB-POSIX:CFSETOSPEED now work properly
        on platforms that use only the minimum specified set of fields in struct
        termios (verified on Linux, still known not to work on FreeBSD and NetBSD,
        very probably others).  (partial fix for lp#1500951)
    changes in sbcl-1.2.16 relative to sbcl-1.2.15:
      * enhancement: by default, timers with a repeat interval do not "catch up"
        by repeatedly calling their function after a clock discontinuity such as a
        suspend and resume cycle
      * bug fix: correctly restore multiple values on the stack in the presence of
        alien calls. (lp#1489590)
      * bug fix: MAKE-STRING-OUTPUT-STREAM enforces that :ELEMENT-TYPE
        is a subtype of CHARACTER.
      * bug fix: an EQL method specializer no longer causes garbage retention
        if there are no extant methods using the specializer. (lp#492851)
  * Enable arm64 supported now

 -- Christoph Egger <christoph@debian.org>  Tue, 10 Nov 2015 23:41:45 +0100

sbcl (2:1.2.15-2) unstable; urgency=medium

  * Fix arch=all only build

 -- Christoph Egger <christoph@debian.org>  Fri, 11 Sep 2015 18:32:47 +0200

sbcl (2:1.2.15-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.2.15 relative to sbcl-1.2.14:
      * new feature: DEPRECATION declaration for functions, variables and types
        causes {EARLY,LATE,FINAL}-DEPRECATION-WARNING to be signaled when subject
        of the declaration is used. Integrated with DESCRIBE, DOCUMENTATION and
        SB-CLTL2:{VARIABLE,FUNCTION}-INFORMATION. Documented in the "Deprecation"
        section of the manual.
      * enhancement: ASDF updated to 3.1.5. (lp#1476867)
      * enhancement: definitions within PROGN get proper source locations when
        compiled (needs latest Slime to take advantage of this). (lp#1473147)
      * enhancement: source locations for DEFCLASS slots now point directly to the
        slot definitions, not the whole DEFCLASS form.
      * bug fix: better source location in the presence of quoted forms.
        (lp#1370561)
      * bug fix: better source locations inside backqoute. (lp#1361502)
      * bug fix: HANDLER-BIND requires that the handler-function be
        a function designator at the time of binding establishment. (lp#1480679)
      * bug fix: inlined functions surrounded by nested macrolets are properly
        inlined. (lp#309123)

 -- Christoph Egger <christoph@debian.org>  Fri, 11 Sep 2015 16:37:23 +0200

sbcl (2:1.2.14-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.2.14 relative to sbcl-1.2.13:
      * minor incompatible change: The name of a compiled anonymous lambda
        as returned by the third value of FUNCTION-LAMBDA-EXPRESSION can have
        a lambda-list-like list following the introductory LAMBDA that is not
        in general a syntactically valid lambda list. Specifically, it won't
        retain default values, supplied-p variables, or &KEY or &AUX bindings.
      * enhancement: DESTRUCTURING-BIND has been totally reimplemented from
        scratch to address a handful of performance and correctness issues.
        Some minor behavioral differences exist regarding order of evaluation
        of default forms for unsupplied &OPTIONAL and &KEY arguments
        when nested destructuring patterns are involved.
        (lp#707556, lp#707573, lp#707578, lp#708051)
      * enhancement: DEFCONSTANT and DEFSTRUCT respect package locks. (lp#1186238,
        lp#1036716)
      * enhancement: sb-unicode:normalize-string has a new optional argument,
        FILTER, a callback which controls which decomposed characters are
        collected. Useful for stripping away diacritics more efficiently.
      * bug fix: (TYPE-OF ARRAY) for a non-simple array is subject to change
        after a call of ADJUST-ARRAY. (lp#1333731)
      * bug fix: Dynamic-extent allocation with a loop between allocating a value
        and the start of its environment no longer discards the allocated data
        when the loop is taken. (lp#1472785)
      * bug fix: Variable-reference elimination no longer generates incorrect code
        under certain circumstances. (lp#1446891)
      * bug fix: variables with EQL types are no longer treated as constants by
        VOPs, which caused problems with closures being allocated for such
        variables, but they remained unused. (lp#1390149)
      * bug fix: Windows installer generates registry key name
        correctly. (lp#1476447)
  * Use caninical Vcs URLs

 -- Christoph Egger <christoph@debian.org>  Sat, 01 Aug 2015 16:04:48 +0200

sbcl (2:1.2.13-1) unstable; urgency=medium

  * New upstream Version
    changes in sbcl-1.2.13 relative to sbcl-1.2.12:
     * incompatible change: on success, TRY-SEMAPHORE and WAIT-ON-SEMAPHORE
       return the new count
     * enhancement: WAIT-ON-SEMAPHORE accepts a decrement parameter
     * enhancement: JOIN-THREAD allows distinguishing timeout vs. abort in all
       situations
     * enhancement: On Windows DBG_PRINTEXCEPTION_C is handled and its message
       is printed. (lp#1437947)
     * bug-fix: TRUENAME works properly on broken symlinks presented as
       directories. (lp#1458164)
     * bug fix: Inlined DPB and DEPOSIT-FIELD don't interfere with left-to-right
       order of argument evaluation. (lp#1458190)
     * bug fix: (SETF (LDB (BYTE 1 2 JUNK) X) 0) is rightly rejected.
     * bug fix: DEFSETF lambda lists should not permit argument destructuring.
     * bug fix: calls to (SETF SLOT-VALUE) on a missing slot would in certain
       situations incorrectly return the result of a SLOT-MISSING method
       instead of always returning the new value. (lp#1460381)
     * bug fix: a DEFMACRO occurring not at toplevel and capturing parts of
       its lexical environment (thus being a closure) caused expressions
       involving the macro name to cause corruption in the pretty-printer
       due to faulty introspection of the lambda list of a closure.
     * bug fix: out of line MAP/MAP-INTO check that the results produced by the
       function are of the matching sequence type. (lp#1459581)
     * bug fix: pretty-printing of '(LET `((,X ,Y)) :B) is handled correctly.

  * Breaks "old" cl-asdf (Closes: #787909)
  * Build-Conflicts on locales-all (Closes: #786601)

 -- Christoph Egger <christoph@debian.org>  Mon, 29 Jun 2015 10:57:58 +0200

sbcl (2:1.2.12-1) unstable; urgency=medium

  * New upstream version
    changes in sbcl-1.2.12 relative to sbcl-1.2.11:
      * minor incompatible change: the SB-C::*POLICY* variable is no longer
        a list. Code which manipulated it as such (including but not limited
        to non-bundled releases of ASDF) will need to be revised.
      * enhancement: The input stream for COMPILE-FILE implements
        STREAM-LINE-COLUMN.
      * enhancement: EVAL errors that occur by way of LOAD report the starting
        line and column number of the erring toplevel form. (lp#565247)
      * optimization: better MAP and MAP-INTO on known vector result types.
      * bug fix: Read/modify/write macros accessing a place which is a
        composition of CAR+CDR operations, such as (SHIFTF (CADR X) (ELT V 0)),
        do not access subforms more than once. (lp#1450968)
      * bug fix: short form of DEFSETF no longer allows trailing junk.
      * bug fix: DEFINE-MODIFY-MACRO respects the provisions of CLHS 5.1.3
        regarding argument evaluation order. (lp#1452539)
      * bug fix: POP works as specified in CLHS if the setter for its
        argument has a side-effect on the existing CAR value. (lp#1454021)
      * bug fix: Reading "#()" with a positive numeric argument signals a
        reader error. As specified, reading "#1()" has undefined consequences,
        so correct portable code should be indifferent to this. (lp#1252100)
      * bug fix: Malformed reader conditionals such as "(#-no-such-feature)"
        and "(#+sbcl)" no longer parse as NIL. (lp#1454400)

 -- Christoph Egger <christoph@debian.org>  Fri, 05 Jun 2015 13:43:29 +0200

sbcl (2:1.2.11-2) unstable; urgency=medium

  * Fix build on kfreebsd

 -- Christoph Egger <christoph@debian.org>  Sun, 03 May 2015 12:09:34 +0200

sbcl (2:1.2.11-1) unstable; urgency=medium

  * New Upstream Version
    Remove Adding-curly-braces-around-subgraphs-to-make-things-.patch -- fixed upstream
    Cleanup fixed upstream (Closes: #734967)

    changes in sbcl-1.2.11 relative to sbcl-1.2.10:
      * enhancement: SET-PPRINT-DISPATCH will warn when given an expression in
        which any part is unrecognizable as a legal type-specifier.
        The dispatch table will be altered, but the new entry is disabled.
        Subsequent type-defining forms will cause pprint-dispatch tables to
        re-examine whether any disabled entries should be enabled. (lp#1429520)
      * enhancement: Loading code containing calls to a deprecated function will,
        under most circumstances, signal warnings similar to compiling such code.
        The usual caveat holds about not detecting calls through a computed name,
        as in (funcall (intern "DEPRECATED-FUN" "SB-EXT")).
      * enhancement: (SB-EXT:COMPILE-FILE-LINE) is a new macro that expands
        to a constant (VALUES integer integer) indicating the source line/column
        from which it was read, intended for logging Lisp runtime errors in
        a style similar to that afforded by the C preprocessor __LINE__ macro.
        Similarly (SB-EXT:COMPILE-FILE-POSITION) returns a position in characters.
      * enhancement: improved source locations for VOPs, alien types and
        declarations.
      * bug fix: functions in :FINAL deprecation have the correct docstring.
        No visible change, as no such functions presently exist. (lp#1439151)
      * bug fix: (SETF (FDEFINITION this) (FDEFINITION OTHER)) signals an error
        if OTHER names either a macro or special-operator. (lp#1439921)
    changes in sbcl-1.2.10 relative to sbcl-1.2.9:
      * minor incompatible change: all SOCKINT::WIN32-* functions have been
        deprecated with EARLY deprecation state
      * minor incompatible change: performing introspection via the system-internal
        SB-INT:INFO function could expose that :TYPE :TRANSLATOR is not necessarily
        a function, as it always was before. (Affects swank-fancy-inspector)
      * enhancement: The value of SXHASH on bit-vectors of length equal to the
        word size now depends on the vector's contents instead of being constant;
        its value on bit-vectors of length divisible by the word size now depends
        also on the contents of the vector's last word.
      * bug-fix: sb-bsd-sockets on win32 uses proper C function declarations.
        (lp#1426667)
      * bug fix: A new dead code elimination phase removes dead code loops
        that confuse stack analysis. (lp#1255782, lp#308914)
      * bug fix: A toplevel form which was simple enough to bypass the main
        compiler in COMPILE-FILE, and which contained an empty SETQ or PROGN
        would produce an invalid fasl file. (lp#1427050)
      * bug fix: The compiler no longer signals an internal error when
        encountering invalid FUNCTION forms like (function 1)
      * bug fix: express proper dependencies in the ASDF contrib, to support
        systems where make runs in parallel.  (lp#1434768; thanks to Nikhil
        Benesch)
    changes in sbcl-1.2.9 relative to sbcl-1.2.8:
      * minor incompatible change and bug fix: unboxed numeric constants
        on x86oids are arranged in memory differently, and the disassembler
        does not show them separately in DISASSEMBLE, but does
        if DISASSEMBLE-CODE-COMPONENT is used. (lp#1421987)
      * optimization: The compiler's treatment of type specifiers makes
        it slightly faster and more memory-efficient. Portable code
        should be indifferent to this change, however, users of
        SB-INTROSPECT:FUNCTION-TYPE might notice that (MEMBER T NIL)
        and (MEMBER NIL T) are both internally collapsed to the former,
        so that the latter can never be obtained as part of an FTYPE.
      * optimization: a TYPEP call in which the second argument is not a
        QUOTE form but nevertheless recognized as a compile-time constant
        might open-code the test. One scenario for this involves backquote,
        such as (TYPEP x `(my-type ,some-arg)). Code which relied upon
        deferring until runtime should declare (NOTINLINE TYPEP).
        [Due to the sematic constraints of DEFTYPE etc in in CLHS 3.2.2.3,
        code requiring delayed evaluation could be unportable though.]
      * enhancement: unused variables at the top-level are now reported.
        (lp#492200)
      * bug fix: DEFCLASS handles cyclic {super,meta}class relations better
        (lp#1418883)
      * bug fix: compiler no longer signals an error when compiling certain
        function calls. (lp#1416704, lp#404441, lp#1417822, lp#1234919)
      * bug fix: compiler doesn't stumble on a LOGIOR transform. (lp#1389433)
      * bug fix: more robust debugger and backtraces. (lp#1413850, lp#1099500,
        lp#1412881, lp#945261, lp#1419205, lp#1409402)
      * bug fix: files larger than 4GB can now be compiled.
      * bug fix: x86 truncated results from 64-bit foreign functions to 32 bits.
      * bug fix: file-position didn't work on large files on win32. (lp#1271545)
      * bug fix: callbacks from foreign threads can work without enabling
        sb-safepoint.
      * bug fix: sb-introspect:function-lambda-list works properly on interpeted
        macros. (lp#1387404)
      * bug fix: ADJUST-ARRAY properly handles non-adjustable arrays. (lp#886418)
      * bug fix: compiler no longer fails to dump a multidimensional array
        constant involving a circular reference to itself
      * bug fix: conditional and nested DX allocation no longer confuse the
        compiler in STACK analysis. (lp#1044465)
      * bug fix: sb-rotate-byte constant folding bug fixed. (lp#1423682)

 -- Christoph Egger <christoph@debian.org>  Sun, 03 May 2015 12:09:34 +0200

sbcl (2:1.2.8-1) experimental; urgency=medium

  * New upstream version
    changes in sbcl-1.2.8 relative to sbcl-1.2.7:
      * enhancement: better error and warning messages. (lp#1314767, lp#736383)
      * enhancement: backtrace for invalid argument count produces the exact
        supplied arguments including the extra ones, on x86, x86-64 and ARM.
      * enhancement: a STYLE-WARNING is signaled for DEFSTRUCT accessors which
        are used before the structure is defined; similarly for the predicate.
      * optimization: FORMAT NIL with only ~a and string arguments is transformed
        into CONCATENATE.
      * optimization: POSITION and FIND when inlined into code that is compiled
        with qualities of safety < 2 and speed > space will no longer signal
        an error on circular lists, but will potentially loop forever if given
        no :END constraint. As was always the case, calls that are not inlined
        are safe regardless of lexical policy.
      * bug fix: CLOS methods compiled with (OPTIMIZE (DEBUG 0))
        no longer cause debugger failure when printing a backtrace
      * bug fix: more resilience to deleted code. (lp#1308328, lp#1390544)
      * bug fix: the CLHS example of MAKE-LOAD-FORM involving TREE-WITH-PARENT
        did not work, and now it does.
    changes in sbcl-1.2.7 relative to sbcl-1.2.6:
      * optimization: returning constant values refers to preboxed constants
        more reliably. (lp#1398785)
      * enhancement: a STYLE-WARNING is produced if a compiler-macro is defined
        for a function after at least one ordinary (not inlined) call to that
        function was compiled, indicating a likely compilation order problem.
        Likewise a warning ensues if a call is compiled to a function
        that is subsequently proclaimed INLINE.
      * enhancement: always lose() when something goes wrong while saving a core
        (instead of just printing an error on stderr in some situations).
      * enhancement: frames in the debugger are now restartable by default.
      * bug fix: restore error handling on Windows x86.
      * bug fix: MAKE-SEQUENCE detects type errors in its :INITIAL-ELEMENT
        at compile-time when possible. (lp#330299)
      * bug fix: parsing of malformed type specifiers no longer results
        in a memory-fault-error.
      * bug fix: LOOP properly destructures nested lists in WITH.
      * bug fix: MACROEXPANDing the redefinition of an alien structure type no
        longer signals the wrong error.
      * bug fix: PROGV doesn't get confused by forced DEBUG 3 (lp#1405456).
    changes in sbcl-1.2.6 relative to sbcl-1.2.5:
      * enhancement: SERVE-EVENTS uses the poll() system call in lieu of
        select() if the OS has the former. Previously poll() was used
        only if waiting on exactly one file descriptor.
      * enhancement: efficiency of access to untagged structure slots is improved
        on x86-64, and the order of slots in memory is exactly as specified by
        defstruct, simplifying use of structures as arguments to foreign calls.
      * bug fix: SB-DEBUG:ARG now works in all TRACE options which evaluate forms.
       (lp#1357826)
      * bug fix: GC memory corruption during internal memory handling.
      * bug fix: duplicate effective-slot-definition objects as compared
        by EQ on name could be present in CLASS-SLOTS of a class whose
        metaclass was structure-class or condition-class. (lp#1049423)
      * bug fix: HANDLER-BIND with empty bindings works again; regression in
        1.2.5. (lp#1388707)
      * bug fix: ATOMIC-INCF works on structure slots in interpreted code.
        (lp#1381867)
      * bug fix: MAKE-ARRAY properly handles character types like (eql #\a) and
        (member #\a #\c). (lp#1392068)
      * bug fix: READ sometimes accidentally preserved a whitespace character
        after a token when it should not have. (lp#327790)
    changes in sbcl-1.2.5 relative to sbcl-1.2.4:
      * enhancement: sb-bsd-sockets now has basic support for IPv6
      * enhancement: An sb-unicode package has been added, containing
        many functions related to handling Unicode text
      * enhancement: The reader now normalizes symbols to Normalization
        Form KC (NFKC). This behavior can be disabled with
        SB-EXT:READTABLE-NORMALIZATION
      * enhancement: a style-warning is signaled if OPTIMIZE declarations
        multiply specify a quality with differing values. (lp#310267)
      * bug fix: conservatively pointed to pages wipe out unused dwords so
        that they cannot act as false roots in turn.
      * bug fix: the walker's handling of lexical variable and symbol-macro
        bindings is improved (lp#375326, lp#1368305)
      * bug fix: HANDLER-{BIND,CASE} no longer drop into ldb when a clause
        contains an undefined condition type; regression in 1.1.19 (lp#1378939)
      * bug fix: in interpreted code, inequality predicates did not type-check
        arguments that weren't examined, and a 1-argument use of MIN or MAX
        accepted a complex number. (lp#1373702)
      * bug fix: APROPOS and APROPOS-LIST handle inherited symbols correctly.
        (lp#1364413, thanks to Zach Beane)


 -- Christoph Egger <christoph@debian.org>  Mon, 16 Feb 2015 22:37:44 +0100

sbcl (2:1.2.4-2) unstable; urgency=medium

  * Add upstream patch to fix sb-concurrency on powerpc

 -- Christoph Egger <christoph@debian.org>  Mon, 20 Oct 2014 23:29:42 +0200

sbcl (2:1.2.4-1) unstable; urgency=medium

  * Update to 1.2.4 upstream version
    * enhancement: the sequence functions MAP, CONCATENATE and MERGE now call
      the new generic functions SEQUENCE:MAP, SEQUENCE:CONCATENATE and
      SEQUENCE:MERGE respectively when the specified result type designates an
      extended sequence.
    * bug fix: Wrong binding order of supplied-p parameters in macro lambda
      lists.  (lp#721135)
    * bug fix: VALIDATE-SUPERCLASS returns T when the superclass is the
      universal superclass (lp#1332983)
    * bug fix: reading an uninterned symbol whose print name has the
      syntax of an integer signals an error. (lp#310062)
    * bug fix: the walker is less likely to be confused when walking LET* forms
      with special bindings and use of those bindings and others of the same
      name.
    * bug fix: a rare bug affecting 32-bit platforms resulting in a
      fatal condition with the message "Globaldb rehash failure" has been fixed.

 -- Christoph Egger <christoph@debian.org>  Mon, 06 Oct 2014 20:23:00 +0200

sbcl (2:1.2.3-1) unstable; urgency=medium

  * New upstream version
   * enhancement: DOCUMENTATION works on instances of
     FUNCALLABLE-STANDARD-CLASS
   * enhancement: ASSERT reports arguments of calls to lexical functions in
     additional to global functions.
   * enhancement: ASDF updated to 3.1.3
   * enhancement: UIOP can be loaded without ASDF.
   * bug fix: some methods on CHANGE-CLASS did not finalize the new class
     before accessing its class-precedence list.
   * bug fix: CHANGE-CLASS no longer fails on unbound slots in the source
     object.
   * bug fix: CHANGE-CLASS signals an appropriate error when the destination
     class is a FORWARD-REFERENCED-CLASS.
   * bug fix: CHANGE-CLASS no longer signals bogus TYPE-ERRORs for slots for
     which initargs have been supplied.
   * bug fix: saving cores on ARM was broken since the introduction of GENCGC.
     (lp#1349795)
   * bug fix: macroexpanding a backquoted expression involving ",."
     outside of the compiler failed. (lp#1354623)

 -- Christoph Egger <christoph@debian.org>  Fri, 29 Aug 2014 11:38:19 -0700

sbcl (2:1.2.2-1) unstable; urgency=medium

  * New upstream version
      * incompatible change: the #\` ("backquote") reader macro was reimplemented
        to support robust pretty-printing. Reading a form involving #\` produces
        an invocation of the QUASIQUOTE ordinary macro which may contain subforms
        that are not lists. Code that unportably attempts operations on
        un-evaluated forms resulting therefrom, e.g.
          (SUBST a b (read-from-string "`(x (,y))"))
        might generate incorrect results and/or errors.
      * enhancement: support for GNU/kFreeBSD x86.
      * enhancement: ATOMIC-INCF and ATOMIC-DECF can operate on (CAR x), (CDR x)
        and DEFGLOBAL variables of type fixnum.
      * enhancement: arithmetic constant reduction is now performed on defconstant
        constants too. (lp#1337069).
      * bug fix: certain ftype proclamations containing &optional t &rest t no
        longer cause subsequent definitions to signal bogus style-warnings.
      * bug fix: #\Bell and #\Bel now read to different characters. (lp#1319452).
      * bug fix: CAS SYMBOL-VALUE on locally special variables didn't work.
        (lp#1098355)
  * Add patch for newer graphviz (Closes: #755331)

 -- Christoph Egger <christoph@debian.org>  Fri, 15 Aug 2014 17:24:32 +0200

sbcl (2:1.2.1-1) UNRELEASED; urgency=medium

  * New upstream version
    changes in sbcl-1.2.1 relative to sbcl-1.2.0:
    * enhancement: GENCGC is enabled on ARM.
    * enhancement: better error reporting for invalid calls to local functions.
    * enhancement: support for GNU/kFreeBSD distributions.  (lp#1079954, thanks
      to Christoph Egger)
    * enhancement: experimental support for threads on NetBSD/x86-64.  (thanks
      to Robert Swindells)
    * enhancement: support for DragonFly BSD.  (lp#1292845, thanks to Vasily
      Postnicov)
    * bug fix: TYPE-OF must not return AND/OR/NOT expressions.
      (lp#1317308)
    * bug fix: accessing NIL arrays stopped producing errors. (lp#1311421)
    * bug fix: DISASSEMBLE no longer prints unwanted stuff. (lp#1251861)
    * bug fix: compiling SVREF on unknown types no longer produces scary errors.
      (lp#1258716)
    * bug fix: assorted LOOP fixes and enhancements. (lp#645534, lp#1322923,
      lp#700538, lp#613876, lp#695286, lp#798388)
    * bug fix: silence compiler notes from the SEARCH transform. (lp#1071310)
    * bug fix: array type intersection handles T and unknown element types
      correctly. (lp#1258716)
    * bug fix: fix a corner case in array type unparsing that would result in
      misleading translations from our internal type representation.
    * bug fix: array-rank now sees through union and intersection types.
      (lp#1310574)
    * bug fix: when DECLARE expressions are in the wrong place, be careful not
      to attempt to evaluate the subforms.  (lp#573747; thanks to Roman
      Marynchak)
    * bug fix: misplaced and missing declarations in DEFTRANSFORM. (lp#1066451)
    * bug fix: FBOUNDP returned NIL for a class of incorrect function names
      instead of signaling an error. (lp#1095483)
    * bug fix: fix a compile-time AVER in regalloc: lifetime analysis
      used to (rarely) introduce duplicate conflict markers in a single
      TN/block pair. (lp#1327008)
  * Remove armel again as sbcl only supports armv5+
  *

 -- Christoph Egger <christoph@debian.org>  Fri, 15 Aug 2014 17:24:32 +0200

sbcl (2:1.2.0-1) unstable; urgency=medium

  * New upstream release
      changes in sbcl-1.2.0 relative to sbcl-1.1.18:
      * bug fix: read-time-eval backquote context mixup. (lp#1321047)
      * enhancement: when SAVE-LISP-AND-DIE fails due multiple threads, the
        report of the signaled conditions lists currently running threads.
      * enhancement: ported to ARM linux.
      * enhancement: sb-gmp contrib has been updated. (lp#1305266)
      * enhancement: new contrib sb-mpfr by Stephan Frank.
      * bug fix: MAKE-SEQUENCE works with sequence types defined via DEFTYPE
        (lp#1315846, thanks to Mark Cox)
      * bug fix: SET-[DISPATCH-]MACRO-CHARACTER should coerce a symbolic
        function-designator to a function only as needed. (lp#1012335)
      * bug fix: remove references to asdf-install from the manual.  (lp#1207544,
        thanks to Thomas Hlavaty)
      * bug fix: handle --without-xxx options to make.sh more carefully.
        (lp#1246665, thanks to Richard M Kreuter)
      * bug fix: prevent maybe-delete-exit from doing semantically broken things
        with local exits. (lp#309099, lp#518099, lp#533930)
      * bug fix: attempts to subclass BUILT-IN-CLASSes signal errors, as required
        by AMOP.  (lp#861004)

 -- Christoph Egger <christoph@debian.org>  Sat, 07 Jun 2014 23:27:25 +0200

sbcl (2:1.1.18-1) unstable; urgency=medium

  * New upstream release
      changes in sbcl-1.1.18 relative to sbcl-1.1.17:
        * optimization: COERCE is now more effecient for more ca
          known at compile-time.
          (lp#1309815)
        * bug fix: correctly inherit condition initforms. (lp#13
        * bug fix: properly pprint literal functions inside nest
          (lp#1300716)
        * bug fix: more-correctly handle array-type unity (broke
          compilation problems since 1.1.13.x due to smarter TYP
          reported by jasom in #lisp).
      changes in sbcl-1.1.17 relative to sbcl-1.1.16:
        * enhancement: printing backtraces respects
          SB-DEBUG:*DEBUG-PRINT-VARIABLE-ALIST* when printing call a
          (lp#1261646)
        * optimization: defstruct out-of-line accessor are now as fa
          (lp#1264924)
        * bug fix: INVOKE-RESTART-INTERACTIVELY no longer refuses to
          instances with a test-function (reported by Vivitron in #s
        * bug fix: STREAM-ERROR-POSITION-INFO fails in fewer situati
        * bug fix: Change COND error message (lp#1254511)
        * bug fix: LOAD is no longer confused when called on a direc
          (lp#1077996)
        * bug fix: MAKE-CONDITION reports names of missing condition
          properly (lp#1199223)
        * bug fix: restore building with clang. (lp#1293643)
        * bug fix: restore building on SPARC (broken since 1.1.15).
        * bug fix: improved FreeBSD support.
        * bug fix: PPC floating point conversion corrupted stack.
      changes in sbcl-1.1.16 relative to sbcl-1.1.15:
        * minor incompatible change: improve read/print consistency
          Win32, by using the circumflex character #\^ as the escape
          (lp#673625)
        * enhancement: SB-EXT:DEFINE-LOAD-TIME-GLOBAL. (lp#1253688)
        * enhancement: Loading fasls with symbols from an undefined
          the name of the symbol in the error message.
        * bug fix: problems when redefining classes and doing TYPEP
          concurrently. (lp#1272742)
        * bug fixes to the x86-64 XCHG instruction:
          ** it was misencoded when used with RAX, R8-R15 registers.
             Eric Marsden)
          ** it was misencoded when used to exchange EAX with itself
          ** the disassembler wrongly printed XCHG RAX, R8 and the c
             32- and 16-bit variations as NOP.
        * bug fix: the disassembler outputs source annotations in th
          and no longer randomly drops some of them. (lp#1249205)
        * bug fix: fix commutative-arg-swap from introducing undumpa
          into code, prevent code with errors from being compiled. (
        * bug fix: pathnames with :back in their directory component
          resolved.
        * bug fix: the deterministic profiler now uses ENCAPSULATE f
          wrap functions around. (lp#309086)


 -- Christoph Egger <christoph@debian.org>  Sat, 10 May 2014 20:19:40 +0200

sbcl (2:1.1.15-1) unstable; urgency=medium

  * New upstream release
    changes in sbcl-1.1.15 relative to sbcl-1.1.14:
    * new feature: the iterative spilling/coloring register allocator developed
      by Alexandra Barchunova during Google Summer of Code 2013 is now merged
      in.  By default, it only activates for functions that optimize with
      (speed 3) and (> speed compilation-speed), but setting
      sb-regalloc:*register-allocation-method* to :iterative forces its
      execution.  The previous behaviour can be obtained by instead setting that
      variable to :greedy.  Thanks again to Google for their support, and, more
      crucially, to Alexandra Barchunova for her hard work.
    * optimization: make-array with known element-type and unknown dimensions is
      much faster.
    * optimization: make-array with unknown element-type is faster as well.
      (lp#1004501)
    * enhancement: sb-ext:save-lisp-and-die on Windows now accepts
      :application-type argument, which can be :console or :gui. :gui allows
      having GUI applications without an automatically appearing console window.
    * enhancement: reduced conservativism on GENCGC platforms:
      conservative roots must be valid-looking tagged pointers or point
      within a code object, not merely point to within the allocated part
      of a page, in order to pin a page.
    * enhancement: support for "Mac Roman" external format.
    * enhancement: encapsulation of named generic functions now happens without
      altering the identity of the function bound to the name.
    * bug fix: Windows applications without the console window no longer misbehave.
      (patch by Wilfredo Velazquez, lp#1256034).
    * bug fix: modular arithmetic optimizations do not stumble on dead branches
      with bad constants. (reported by Douglas Katzman)
    * bug fix: CLISP can be used again as a cross-compilation host.
      (Thanks to Vasily Postnicov, lp#1261451)
    * bug fix: run-program crashed with :directory nil. (lp#1265077)

 -- Christoph Egger <christoph@debian.org>  Tue, 18 Feb 2014 21:17:03 +0100

sbcl (2:1.1.14-2) unstable; urgency=medium

  * Import cl-asdf 3.0.3. This should fix loading systems that are
    installed via dpkg

 -- Christoph Egger <christoph@debian.org>  Mon, 23 Dec 2013 16:57:50 +0100

sbcl (2:1.1.14-1) unstable; urgency=low

  * New upstream release:
    changes in sbcl-1.1.14 relative to sbcl-1.1.13:
      * optimization: complicated TYPEP tests are less opaque to the type
        propagation pass. (lp#1229340)
      * optimization: [N]BUTLAST perform a single pass over the list. (lp#1245697)
      * optimization: EQUALP on structures with raw slots (double-float/complex)
        no longer conses and is faster.
      * optimization: RESTART-CASE expands to more compact code.
        Thanks to Jan Moringen. (lp#1249055)
      * enhancement: Top-level defmethod without defgeneric no longer causes
        undefined-function warnings in subsequent forms. (lp#503095)
      * enhancement: Better error messages for system errors on Windows.
      * enhancement: run-sbcl.sh is usefully handled by rlwrap.  Thanks to William
        Cushing. (lp#1249183)
      * enhancement: new function SB-EXT:ASSERT-VERSION->= accepts a version
        specification (multiple integer arguments) and signals a continuable error
        if the current SBCL version is lower (older) than the specification.
        (lp#674372)
      * enhancement: better ARRAY-RANK result derivation. (lp#1252108)
      * bug fix: EQUALP now compares correctly structures with raw slots larger
        than a single word.
      * bug fix: contribs couldn't be built on Windows with MinGW.
      * bug fix: Better pathname handling on Windows. (lp#922117)
      * bug fix: OPEN reports a more meaningful error when an existing file is
        opened for output with :if-exists :new-version.  Thanks to Philip
        Munksgaard. (lp#455381)
      * bug fix: DEFSTRUCTs with NIL as a slot name no longer cause strange
        CLOS-related errors.  (lp#633911)

 -- Christoph Egger <christoph@debian.org>  Sat, 07 Dec 2013 16:47:29 +0100

sbcl (2:1.1.13-1) unstable; urgency=low

  * New upstream release:
    changes in sbcl-1.1.13 relative to sbcl-1.1.12:
      * optimization: better distribution of SXHASH over small conses of related
        values.  (lp#309443)
      * other improvements to SXHASH:
        ** use the whole of the positive-fixnum range for SXHASH of fixnums
      * enhancement: The error message when calling an undefined alien function
        includes the name of the function on x86-64.
      * enhancement: sb-ext:run-program now supports :environment on Windows.
      * enhancement: ASDF is no longer required to load contribs at runtime.
        (lp#1132254)
      * enhancement: when called with a symbol, FIND-RESTART no longer calls
        COMPUTE-RESTARTS, making it faster and cons less (lp#769615)
      * enhancement: FIND-RESTART and COMPUTE-RESTARTS handle huge restart
        clusters better in some cases
      * enhancement: SOME/ANY/other quantification higher-order functions no
        longer cons. (lp#1070635)
      * bug fix: forward references to classes in fasls can now be loaded.
        (lp#746132)
      * bug fix: don't warn on a interpreted->compiled function redefinition
        from the same location.  (patch by Douglas Katzman, lp#1042405)
      * bug fix: Create vectors of proper internal length when reading literal
        vectors from FASLs. (Reported by Jan Moringen)
      * bug fix: COMPILE can now succefully compile setf functions.
        (Reported by Douglas Katzman)
      * bug fix: run-program performs more correct escaping of arguments on
        Windows. (lp#1239242)
      * bug fix: function-lambda-expression on generic functions returns the
        actual name.
      * bug fix: (the [type] [constant]) now warns when [constant] matches
        [type] except for the number of values.  (Reported by Nathan Trapuzzano
        on sbcl-help)
      * bug fix: signal errors in required cases of slot-definition initialization
        protocol.  (lp#309072)
      * bug fix: run-sbcl.sh works better in the presence of symlinks on OS X.
        (thanks to Stelian Ionescu, lp#1242643)
      * bug fix: when given a restart object, FIND-RESTART checks whether the
        restart is active and, when a condition is supplied, whether the restart
        is associated to a different condition (lp#774410)


 -- Christoph Egger <christoph@debian.org>  Tue, 05 Nov 2013 18:32:04 +0100

sbcl (2:1.1.12-1) unstable; urgency=low

  * new upstream release
    * enhancement: Add sb-bsd-sockets:socket-shutdown, for calling
      shutdown(3). (thanks to Jan Moringen, lp#1207483)
    * enhancement: document extensible sequences.  (thanks to Jan Moringen,
      lp#994528)
    * optimization: EQUAL and EQUALP transforms are smarter.
      (thanks to Elias Martenson, lp#1220084)
    * optimization: CHAR-EQUAL is faster for constant and base-char arguments.
    * bug fix: probe-file now can access symlinks to pipes and sockets in
      /proc/pid/fd on Linux. (reported by Eric Schulte)
    * bug fix: SBCL can now be built on Solaris x86-64.
    * bug fix: Floating point exceptions do not persist on Solaris anymore.
    * bug fix: (setf . a) is pprinted correctly (reported by Douglas Katzman).
    * bug fix: handle compiler-error in LOAD when it's not run from inside EVAL.
      (lp#1219601)
    * bug fix: SB-GMP:MPZ-POW no longer segfaults given a non-bignum base.
      (thanks to Stephan Frank)
    * bug fix: space allocation of result bignums in SB-GMP is more accurate.
      (thanks to Stephan Frank, lp#1206191)
    * bug fix: sb-safepoint can now reliably handle signal interruptions of
      foreign code. (lp#1133018)
    * bug fix: the compiler-macro for MAKE-INSTANCE when emitting "fallback"
      constructors no longer fails to merge actual and default initargs
      (thanks to Jan Moringen, lp#1179858)
    * bug fix: the compiler-macro for MAKE-INSTANCE when emitting "fallback"
      constructors handles non-KEYWORD initialization arguments more correctly.
    * bug fix: loading the SB-SIMPLE-STREAMS contributed module no longer
      clobbers FILE-NAMESTRING.  (thanks to Anton Kovalenko, lp#884603)
    * bug fix: class definitions with CPLs inconsistent with their metaclasses
      are less likely to destroy the object system's integrity.  (lp#309076)
    * bug fix: restart clause parsing in RESTART-CASE is more in line with the
      standard.  (lp#1203585, thanks to Jan Moringen)
    * bug fix: silence a note from RESTART-CASE under high-SPEED optimization
      settings.  (lp#1023721)
    * bug fix: getting the order of arguments to
      SB-MOP:SET-FUNCALLABLE-INSTANCE-FUNCTION wrong produces a sensible error
      rather than a failed AVER.  (reported by Paul Nathan)
    * bug fix: Parsing of &optional/&key/&rest arguments now never overwrites
      arguments during copying on x86 and x86-64; it may still happen on other
      platforms when there are more fixed arguments than stack slots.
      (reported by Jan Moringen)


 -- Christoph Egger <christoph@debian.org>  Tue, 22 Oct 2013 21:55:31 +0200

sbcl (2:1.1.11-1) unstable; urgency=low

  * New upstream Release
    * enhancement: support building the manual under texinfo version 5.
      (lp#1189146)
    * enhancement: Windows builds no longer display the "Kitten of Death" message.
      A warning is instead appended to the regular banner, and may be muted with
      --noinform.  (lp#728247)
    * enhancement: support building under new linker handling of syscalls under
      NetBSD.  (thanks to Robert Swindells)
    * bug fix: undefined function errors are now properly reported on PPC and MIPS.
      (regression since 1.1.9)
    * bug fix: (funcall (function X junk)) didn't causes an error when X had a
      compiler macro.  (thanks to Douglas Katzman).
    * bug fix: signal a warning when defining a setf-function when a
      setf-expander is already present.  (thanks to Douglas Katzman).
    * bug fix: improved threading on PPC.
    * bug fix: ROOM works again on Windows.  (lp#1206456)
    * bug fix: Streams were flushed even when there was one byte still left in
      the buffer. (lp#910213)
    * bug fix: OPEN handles correctly when :if-exists and :if-does-not-exist are
      either NIL or :ERROR.  (reported by Jan Moringen)

 -- Christoph Egger <christoph@debian.org>  Wed, 28 Aug 2013 20:09:14 +0200

sbcl (2:1.1.10-1) unstable; urgency=low

  * New upstream version
  * Upload to unstable again

 -- Christoph Egger <christoph@debian.org>  Sun, 11 Aug 2013 17:29:52 +0200

sbcl (2:1.1.6-2) experimental; urgency=low

  * Import upstream patch 66ee4992 to fix compilation on svref of a symbol macro

 -- Christoph Egger <christoph@debian.org>  Fri, 05 Apr 2013 09:22:30 +0200

sbcl (2:1.1.6-1) experimental; urgency=low

  * New upstream version
    * enhancement: the continuable error when defknown-ing over extant
      fndb entries can be ignored by passing :overwrite-fndb-silently t
      as a keyword argument to sb-c:defknown (after attributes). Useful
      to allow defknown to be re-loaded. Use with :allow-other-keys t
      for backward compatibility.
    * optimization: compiler is much faster in compiling SVREF and (SETF SVREF)
      forms.
    * bug fix: Prevent a make-array transform from modifying source forms
      causing problems for inlined code. Thanks to Bart Botta.
      (regression since 1.0.42.11-bis)
    * bug fix: clear-output calls the correct gray stream routine,
      sb-gray:stream-clear-output. (lp#1153257)
    * bug fix: an error is signalled for an invalid format modifier: ~<~@>.
      (lp#1153148)
    * bug fix: Better error messages for package operations (lp#1154776)
    * bug fix: delete-package on a nonexistent package should signal a cerror.
      (regression since 1.0.37.44).
    * bug fix: accessing &MORE (stack allocated &REST) arguments checks bounds.
      (lp#1154946, lp#1072112)
    * bug fix: compiling make-array no longer signals an error when the
      element-type is an uknown type, a warning is issued instead.
      Thanks to James Kalenius (lp#1156095)
    * bug fix: SEARCH on generic (non-VECTOR non-LIST) sequence types no longer
      produces wrong results for some inputs.  (Thanks to Jan Moringen.)
      (lp#1153312)
    * minor incompatible change: SB-SPROF:WITH-PROFILING no longer loops
      by default.
    * new feature: package local nicknames. See manual for details.
    * new feature: SB-EXT:MAP-DIRECTORY provides a powerful interface for
      directory traversal: it is the backend used by SBCL for CL:DIRECTORY.
    * enhancement: easier to use restarts for resolving name-conflicts
      resulting from IMPORT, EXPORT, or USE-PACKAGE.
    * enhancement: variant DEFPACKAGE forms now signal a full error with
      restarts provided for resolving the situation. (lp#891351)
    * enhancement: by setting SB-EXT:*ON-PACKAGE-VARIANCE* appropriately variant
      DEFPACKAGE forms can now signal a full error with restarts provided for
      resolving the situation. See manual for details. (lp#891351)
    * enhancement: make-random-state now uses CryptGenRandom as a seed on Windows.
      (Thanks to Anton Kovalenko.) (lp#1102748)
    * enhancement: backtrace improvements
      ** secondary CLOS dispatch functions have better debug names (lp#503081)
      ** easier to read method names in backtraces. See
         SB-DEBUG:*METHOD-FRAME-STYLE*.
      ** SB-DEBUG:PRINT-BACKTRACE and SB-DEBUG:LIST-BACKTRACE are available as
         forwards-compatible replacements for SB-DEBUG:BACKTRACE and
         SB-DEBUG:BACKTRACE-AS-LIST.
      ** SB-DEBUG:*SHOW-ENTRY-POINT-DETAILS** has been deprecated, as the same
         information is available in less intrusive form as frame annotations.
    * enhancement: SB-POSIX now provides MAP-ANON.
    * enhancement: test-suite results are colorized, failures in red, unexpected
      success in green. Works on Windows and on terminals with ANSI escape code
      support. Can be disabled with --no-color.
    * optimization: SB-CONCURRENCY:QUEUE implementation is more efficient.
      (thanks to James M. Lawrence)
    * bug fix: no more unused variable style warnings from RESTART-CASE
      macroexpansion (lp#1113859)
    * bug fix: no more unused variable style warnings when loading
      sb-bsd-sockets.asd (lp#1114681)
    * bug fix: deleting a package removes it from implementation-package
      lists of other packages.
    * bug fix: SB-SPROF:WITH-PROFILING is now usable in the Slime REPL on Darwin.
      This does not fix the occasional "interrupt already pending" issue, though.
    * bug fix: (setf (documentation 'x 'function)) and
      (setf (documentation #'x t)) set documentation in different places.
      (regression since 1.0.43.63)
    * bug fix: build on newer glibc. (lp#1095036)

 -- Christoph Egger <christoph@debian.org>  Fri, 29 Mar 2013 22:50:47 +0100

sbcl (2:1.1.4-1) experimental; urgency=low

  * New upstream release
   * optimization: LOOP expressions using "of-type character" have slightly
     more efficient expansions.
   * bug fix: very long (or infinite) constant lists in DOLIST do not result
     in very long compile times or heap exhaustion anymore. (lp#1095488)
   * bug fix: `#3(1) is read as #(1 1 1), not as #(1). (lp#1095918)
   * bug fix: adjust-array ignored :initial-element for simple-vectors.
     (lp#1096359)
   * bug fix: optimizations to MAKE-INSTANCE with literal list initargs no
     longer cause infinite loops (on circular data) or violate eqlity
     constraints.  (lp#1099708)
   * bug fix: FIRST was not being open coded. (regression from 1.1.0)

 -- Christoph Egger <christoph@debian.org>  Wed, 30 Jan 2013 13:30:43 -0800

sbcl (2:1.1.3-1) experimental; urgency=low

  * New upstream release
    changes in sbcl-1.1.3 relative to sbcl-1.1.2:
     * enhancement: warnings about bad locale settings, LANG, LC_CTYPE, etc.
       (lp#727625)
     * enhancement: support for C-c to interrupt the foreground thread
       on Windows.  (Thanks to Anton Kovalenko.)
     * enhancement: STDCALL alien callbacks. (Thanks to Anton Kovalenko.)
     * enhancement: Safepoint builds on POSIX platforms can now optionally be
       built without pseudo-atomic sequences and their run-time overhead.
     * enhancement: Threads created outside of Lisp can enter Lisp through
       alien callbacks and appear as Lisp threads for the duration of that
       function invocation.  On safepoint builds only.
     * enhancement: Miscellaneous improvements to namestrings and underlying
       calls to OS functions for file system access on Windows.  (Thanks to
       Anton Kovalenko.)
     * enhancement: The MSI installer support for Windows now uses Windows
       Installer XML at least version 3.5 and includes various usability
       improvements.  (Thanks to Dmitry Kalyanov and Anton Kovalenko.)
     * enhancement: The sb-bsd-sockets contrib now supports non-blocking-mode
       on Windows.  (Thanks to Anton Kovalenko.)
     * enhancement: The Windows backend now supports the x86-64 platform.
       (Thanks to Anton Kovalenko.)
     * bug fix: fasls are now once again directly executable (on platforms
       supporting shebang lines, with a suitably-installed sbcl).
     * bug fix: make.sh --help no longer runs clean.sh. (lp#937001)
     * bug fix: Fix CAS access to slots of direct instances of structure classes
       in the presence of subclasses sharing the same conc-name.
     * bug fix: Logical pathname namestrings on Windows have been changed to
       be lower-case, to minimize differences between POSIX and Windows.


 -- Christoph Egger <christoph@debian.org>  Tue, 01 Jan 2013 19:43:22 -0800

sbcl (2:1.1.2-1) experimental; urgency=low

  * New upstream release:
    changes in sbcl-1.1.2 relative to sbcl-1.1.1:
    * notice: System requirements for SBCL on Microsoft Windows: Windows NT 5.1
      or newer (Windows XP, Server 2003) is required.  Support for Windows 2000
      (NT 5.0) is no longer being maintained.
    * notice: Starting with this version, SBCL on Windows no longer supports
      building with disabled thread support.
    * enhancement: frlocks have been added to SB-CONCURRENCY contrib module.
    * enhancement: New feature sb-dynamic-core allows the runtime to be
      rebuilt or relocated without requiring changes to the core file on
      all linkage table platforms.  Required on Windows.  (Thanks to Anton
      Kovalenko.)
    * enhancement: Console I/O streams use UCS-2. (Thanks to Anton Kovalenko.)
    * enhancement: I/O on Windows unnamed pipes is interruptible
      asynchronously using interrupt-thread, timers when running on Windows NT
      version 6.1 or newer (Windows 7, Server 2008 R2).  (Thanks to Anton
      Kovalenko.)
    * enhancement: Support for the experimental safepoint-based stop-the-world
      protocol on the PowerPC platform.
    * bug fix: Non-blocking reads from the Windows console were not necessarily
      non-blocking. Thanks to Anton Kovalenko. (lp#308923)
    * bug fix: stability of threads on Windows has been improved upon through
      an updated stop-the-world protocol (thanks to Anton Kovalenko).
  * Drop 4th version digit

 -- Christoph Egger <christoph@debian.org>  Fri, 07 Dec 2012 15:04:10 -0800

sbcl (2:1.1.1.0-3) experimental; urgency=low

  * Point SRC pathname translator to the install location of sbcl-source
    and not the random directory sbcl happens to be built in (Closes: #652372)

 -- Christoph Egger <christoph@debian.org>  Fri, 07 Dec 2012 14:09:34 -0800

sbcl (2:1.1.1.0-2) experimental; urgency=low

  * Fix features for non-arch-all builds (Closes: #693682)

 -- Christoph Egger <christoph@debian.org>  Wed, 28 Nov 2012 18:53:38 -0800

sbcl (2:1.1.1.0-1) experimental; urgency=low

  * New upstream release
  * changes in sbcl-1.1.1 relative to sbcl-1.1.0:
    * enhancement: WITH-COMPILATION-UNIT no longer grabs the world-lock.
      (COMPILE and COMPILE-FILE still do.)
    * optimization: the SPARC backend now supports the precise generational
      (GENCGC) garbage collection.  Enabled by default on Solaris/SPARC and
      Linux/SPARC.  Thanks to Raymond Toy (via CMUCL).
    * enhancement: add experimental support for the SB-THREAD feature and the
      timer facility on Windows.  Thanks to Dmitry Kalyanov and Anton Kovalenko.
      Threads are enabled by default, and this version of SBCL is considered
      to be the last and final release to officially support building with
      threads disabled.
    * optimization: The compiler no longer rotates loops in some cases where
      this transformation actually lead to worse code being generated.
    * bug fix: SB-CLTL2:MACROEXPAND-ALL correctly handles shadowing of
      symbol-macros by lexical bindings.
    * bug fix: stack allocation was prevented by high DEBUG declaration in
      several cases.
    * bug fix: SB-EXT:GC-LOGFILE signaled an error when no logfile was set.
      (thanks to SANO Masatoshi)
    * bug fix: PARSE-NATIVE-NAMESTRING performed non-native parsing when
      :JUNK-ALLOWED was true.
    * bug fix: type derivation inferred overly conservative types for
      unions of array types. (lp#1050768)
  * changes in sbcl-1.1.0 relative to sbcl-1.0.58:
    * enhancement: New variable, sb-ext:*disassemble-annotate* for controlling
      source annotation of DISASSEMBLE output. Defaults to T.
    * enhancement: TIMEOUT arguments added to WITH-MUTEX and
      WITH-RECURSIVE-LOCK, and WAIT-P argument added to WITH-RECURSIVE-LOCK.
    * enhancement: SB-EXT:ATOMIC-PUSH and SB-EXT:ATOMIC-POP allow atomic
      operations on list heads.
    * enhancement: Optional features (not enabled by default) allow the
      use of signals for inter-thread synchronization to be reduced on certain
      supported platforms (currently Linux, Solaris, and FreeBSD on x86 and
      x86-64).  Set (and :sb-thread :sb-safepoint :sb-thruption :sb-wtimer)
      to test these experimental features.  Known remaining bugs include minor
      thread safety issues, less timely freeing of memory by GC, and certain
      (not yet optimally low) runtime overhead.  Thanks to Anton Kovalenko.
    * optimization: CL:SORT and CL:STABLE-SORT of lists are faster and use fewer
      comparisons, particularly on almost-sorted inputs.
    * bug fix: Reading floats with large exponents no longer takes too much time
      before reporting that the exponent is too large.
    * bug fix: SB-BSD-SOCKETS:SOCKET-RECEIVE with a UDP socket now works
      correctly when the received datagram is larger than the provided buffer.
      (lp#1023438, thanks to Robert Uhl)
    * bug fix: SB-EXT:GET-CAS-EXPANSION returned a bogus read-form when given
      a SYMBOL-VALUE form with a constant symbol argument.
    * bug fix: SB-EXT:GET-CAS-EXPANSION signaled an error when a macro expanding
      into a DEFCAS defined place was used as the place.
    * bug fix: FIND and POSITION signaled a type-error when non-bits where
      looked for from bit-vectors.
    * bug fix: a race condition around thread creation could (in SBCL 1.0.57)
      lead to internal errors or crashes (lp#1058799).
    * documentation: a section on random number generation has been added to the
      manual. (lp#656839)

 -- Christoph Egger <christoph@debian.org>  Fri, 16 Nov 2012 19:10:02 -0800

sbcl (2:1.0.58.0-1) experimental; urgency=low

  * changes in sbcl-1.0.58 relative to sbcl-1.0.57:
    * enhancement: implicit generic function warnings now specify the package
      in which the new generic function is being created.
    * enhancement: SB-EXT:ATOMIC-UPDATE makes it easy to perform non-destructive
      updates of CAS-able places (similar to Clojure's swap!).
    * enhancement: run-program no longer decodes and re-encodes environment when
      :environment argument is not provided. (lp#985904)
    * enhancement: errors during compiler-macro expansion no longer cause
      runtime errors, only a compile-time warning, otherwise behaving as if
      the compiler macro had declined to expand.
    * optimization: On x86-64, code alignment of block headers is done with
      multi-byte NOPs now instead of repetitions of the single-byte NOP.
    * optimization: MAP-INTO is substantially faster when the target sequence is
      of unknown type; mapping into lists is no longer O(N^2). (thanks to James
      M. Lawrence)
    * optimization: the compiler no longer heap-conses to check exits in cases
      where the exit function is dynamic extent, or when it can prove the exit
      function cannot escape.
    * optimization: SB-SEQUENCE:DOSEQUENCE is faster on vectors of unknown
      element type, and vectors that aren't SIMPLE-ARRAYs.
    * optimization: CL:SORT and CL:STABLE-SORT are more efficient in execution
      speed (around 1/3 the time in some cases), and a little better in terms of
      comparison calls. (Thanks to Takeru Ohta)
    * bug fix: On SPARC, a limitation on the number of code constants emittable
      by the compiler has been lifted, allowing certain long functions to
      compiled and assembled which had previously been unsupported; fixes
      cl-bench on this ISA (lp#1008996).
    * bug fix: potential for infinite recursion during compilation of CLOS slot
      typechecks when dependency graph had loops. (lp#1001799)
    * bug fix: error forms reported with some program-errors were not escaped
      properly.
    * bug fix: functions from EVAL are now on more equal footing with functions
      from COMPILE. (lp#1000783, lp#851170, lp#922408)
    * bug fix: ENSURE-GENERIC-METHOD-COMBINATION accepts method combination
      objects as its :METHOD-COMBINATION argument, not just lists designating
      method combinations. (lp#936513)
    * bug fix: run-program no longer unconditionally uses /tmp/ for temporary
      files. (lp#968837).
    * bug fix: restore build on solaris/sparc. (lp#1008506)
    * bug fix: an issue with LDB in the PowerPC backend has been resolved;
      this fixes an issue found with cl-postgres (thanks to Tomas Hlavaty).
    * bug fix: compiler-macro lambda-lists specifying non-keyword symbols
      as keyword arguments no longer accidentally match unevaluated symbols
      against them.
    * bug fix: FORMAT used to loop infinitely in some cases when a COLINC
      parameter was zero, now it signals an error. (lp#905817, fixed since
      1.0.56.19)
    * bug fix: run-program with :pty t no longer makes the pty as the process's
      controling terminal.
  * Add back PowerPC Support (Closes: XXX)
  * Add some rules aiding bootstrapping

 -- Christoph Egger <christoph@debian.org>  Tue, 07 Aug 2012 23:45:09 +0200

sbcl (2:1.0.57.0-2) unstable; urgency=low

  * Depend on netbase as it provides /etc/protocols

 -- Christoph Egger <christoph@debian.org>  Sat, 16 Jun 2012 00:00:53 +0200

sbcl (2:1.0.57.0-1) unstable; urgency=low

  * New upstream version

 -- Christoph Egger <christoph@debian.org>  Tue, 22 May 2012 19:26:00 +0200

sbcl (2:1.0.56.0-1) unstable; urgency=low

  * New upstream release
    * bug fix: fix copy-structure.  When copying from stack to heap, garbage
      could end up in the heap making GC unhappy.
      (Thanks to James Knight, lp#911027)
    * enhancements
      * SBCL can now be built using Clang.
      * ASDF has been updated 2.20.
    * bug fix: compiler errors when weakening hairy integer types. (lp#913232)
    * bug fix: don't complain about a too-hairy lexical environment for inlining
      when the function has never been requested for inlining.  (lp#963530)

 -- Christoph Egger <christoph@debian.org>  Sat, 14 Apr 2012 13:58:18 +0200

sbcl (2:1.0.55.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Mon, 09 Jan 2012 21:50:33 +0100

sbcl (2:1.0.54.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Tue, 06 Dec 2011 21:50:24 +0100

sbcl (2:1.0.53.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Mon, 07 Nov 2011 01:34:47 +0100

sbcl (2:1.0.52.0-2) unstable; urgency=low

  * Enable gzip compression
  * Do not recreate version file

 -- Christoph Egger <christoph@debian.org>  Sun, 30 Oct 2011 14:06:44 +0100

sbcl (2:1.0.52.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Mon, 10 Oct 2011 21:29:28 +0200

sbcl (2:1.0.51.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Mon, 22 Aug 2011 16:02:00 +0200

sbcl (1:1.0.50.0-1) unstable; urgency=low

  * New upstream release

 -- Christoph Egger <christoph@debian.org>  Tue, 12 Jul 2011 22:47:18 +0200

sbcl (1:1.0.49.0-1) unstable; urgency=low

  * New upstream release
  * Update Policy version from .1 to .2 -- no changes

 -- Christoph Egger <christoph@debian.org>  Mon, 06 Jun 2011 12:13:37 +0200

sbcl (1:1.0.48.0-2) unstable; urgency=low

  * Fix build error on kfreebsd-amd64 due to changed signal handling in
    glibc -- previously we got a SIGBUS now we get a SIGSEGV

 -- Christoph Egger <christoph@debian.org>  Mon, 16 May 2011 00:33:29 +0200

sbcl (1:1.0.48.0-1) unstable; urgency=low

  * New upstream release
  * Explain missing asdf (Closes: ##623633)
  * Fix missing '/' in doc-base registration

 -- Christoph Egger <christoph@debian.org>  Wed, 11 May 2011 00:05:37 +0200

sbcl (1:1.0.47.0-2) unstable; urgency=low

  * Fix core file location, dh-lisp update (Closes: #620011)

 -- Christoph Egger <christoph@debian.org>  Tue, 29 Mar 2011 20:18:38 +0200

sbcl (1:1.0.47.0-1) unstable; urgency=low

  * New upstream Version

 -- Christoph Egger <christoph@debian.org>  Mon, 28 Mar 2011 19:13:40 +0200

sbcl (1:1.0.46.0-2) unstable; urgency=low

  * Fix sbcl-doc
    * Install sbcl.html into html subdirectory
    * Change link in html/index.html to point to the new file, not to the
      directory removed in 1.0.39-2 (Closes: #589022)
  * add vcs browser field

 -- Christoph Egger <christoph@debian.org>  Wed, 23 Feb 2011 19:40:45 +0100

sbcl (1:1.0.46.0-1) unstable; urgency=low

  * New upstream version

 -- Christoph Egger <christoph@debian.org>  Mon, 21 Feb 2011 16:36:44 +0100

sbcl (1:1.0.45.0-1) experimental; urgency=low

  * New Upstream Version
  * Rework install target
  * Add kfreebsd support
  * Move to format 3.0 (quilt)
  * Runn the tests

 -- Christoph Egger <christoph@debian.org>  Wed, 29 Dec 2010 15:21:28 +0100

sbcl (1:1.0.43.0-1) experimental; urgency=low

  * New upstream Version

 -- Christoph Egger <christoph@debian.org>  Fri, 01 Oct 2010 18:05:45 +0200

sbcl (1:1.0.42.0-1) experimental; urgency=low

  * Import new upstream. Major changes:
    * build changes
       * Cross-compilation host is now specified to make.sh using
         command-line argument --xc-host=<command> instead of a
         positional argument. (thanks to Daniel Herring)
       * Install location can be specified to make.sh using
         command-line argument --prefix=<path>. (thanks to Daniel
         Herring)
      * optimization: The default implementation of
        COMPUTE-DISCRIMINATING-FUNCTION does much less wasted work.
      * enhancement: Explicit memory barrier operations are now
        available for use by multithreaded code.  See documentation
        for details.
      * enhancement: Experimental support for threading on Linux/PPC.
      * bug fix: RENAME-PACKAGE returns the package.  (Thanks to Eric
        Marsden)
      * bug fix: EXPT signals an error if first argument is a zero and
        second argument is a floating point zero. (thanks to Roman
        Marynchak)
      * bug fix: DEFTYPE signals an error for non-list lambda-lists.
        (thanks to Roman Marynchak)
      * bug fix: make ASDF-INSTALL compatible with the now-included
        ASDF2.  (reported by Phil Hargett; patch from Jim Wise)
      * optimization: validity of observed keyword initargs to
        MAKE-INSTANCE is cached, leading to many fewer expensive calls
        to COMPUTE-APPLICABLE-METHODS.
      * optimization: in the (unoptimized) general method for
        MAKE-INSTANCE on a CLASS argument, search for and call an
        appropriate optimized ctor function if it exists.
      * bug fix: WRITE always returns the correct value.
  * Bump standards version 3.9.0 → 3.9.1, no changes

 -- Christoph Egger <christoph@debian.org>  Wed, 15 Sep 2010 11:59:35 +0200

sbcl (1:1.0.40.0-2) unstable; urgency=low

  * Breaking too old cl-asdf (Closes: #573408)
  * Line-Break longer relationship lines

 -- Christoph Egger <christoph@debian.org>  Sat, 17 Jul 2010 11:22:25 +0200

sbcl (1:1.0.40.0-1) unstable; urgency=low

  * Import new upstream. Major changes:
    * bug fix: readdir now works on :inode64 darwin builds
    * bug fix: Name conflicts between symbols passed as arguments to a single
      call to IMPORT no longer add multiple symbols with the same name to the
      package (detectable via DO-SYMBOLS).
    * bug fix: support building without the dlshim on darwin x86 and x86-64.
    * bug fix: TRACE :ENCAPSULATE NIL now works on ppc/linux.
  * target experimental for now

 -- Christoph Egger <christoph@debian.org>  Sun, 04 Jul 2010 00:13:31 +0200

sbcl (1:1.0.39.0-2) unstable; urgency=medium

  * Build one monolitic html file -- avoiding too long file names
    (Closes: #587440)
  * Upgrade to standards version 3.9.0
    * Replace Confilcts: with Breaks where appropriate
  * urgency=medium due to rc bug fix

 -- Christoph Egger <christoph@debian.org>  Thu, 01 Jul 2010 19:12:33 +0200

sbcl (1:1.0.39.0-1) unstable; urgency=low

  * Import new upstream. Major changes:
    + bug fix: Backtrace from undefined function on x86 and x86-64 now show
      the calling frame.
    + bug fix: linkage-table entries on PPC now no longer overflow their
      space allocation (potentially causing crashes if they are written out
      of order).
    + bug fix: Scrub control stack after scavenging in gencgc on non-x86oid
      platforms, preventing the GC from seeing stale pointers on the control
      stack in subsequent GCs (which would, and does, break invariants).
    + bug fix: 32-bit unicode external formats now work on big-endian systems.
    + bug fix: Literal characters with code points greater than about 32767
      now work on PPC UNICODE builds.
    + bug fix: Any noise left by SSE operations (sqrt and conversions) in the
      high order bits are explicitly cleared out. In some contrived situations,
      this could lead to wrong results in mixed real/complex float arithmetic.
    + bug fix: Fix function/macro redefinition warnings when building with
      clisp.  (lp#576787, thanks to Josh Elsasser)
    + new platform: experimental support for ppc/openbsd (thanks to Josh
      Elsasser).
    + bug fix: Floating-point traps now work on ppc/linux.
    + incompatible change: Thread names are now restricted to SIMPLE-STRINGs
      like for any other thread-related datastructure, MUTEX, etc. (lp#547095)
    + deprecation: the SB-QUEUE contrib was merged into the SB-CONCURRENCY
      contrib module. New code should depend on SB-CONCURRENCY, not SB-QUEUE.
    + deprecation: SB-THEAD:GET-MUTEX was deprecated in favor of
      SB-THREAD:GRAB-MUTEX.
    + new contributed module: SB-CONCURRENCY is a new contrib; it's supposed to
      contain additional data structures and tools for concurrent programming;
      at the moment it contains a lock-free queue, and a lock-free mailbox
      implementation.
    + new feature: added SB-THREAD:GRAB-MUTEX; it's like the now deprecated
      GET-MUTEX but takes &key rather than &optional parameters.  Also added
      :TIMEOUT argument to GRAB-MUTEX on non-sb-lutex platforms like Linux and
      BSD.
    + new feature: added SB-THREAD:TRY-SEMAPHORE, a non-blocking variant of
      SB-THREAD:WAIT-ON-SEMAPHORE.
    + new feature: SB-EXT:ATOMIC-DECF has been added as a companion to
      SB-EXT:ATOMIC-INCF.
    + new feature: a CANCEL-DEADLINE is associated with DEADLINE-TIMEOUT
      conditions to defer the deadline for forever.
    + enhancement: *STANDARD-OUTPUT*, *STANDARD-INPUT*, and *ERROR-OUTPUT* are
      now bivalent.
    + enhancement: errors from NO-APPLICABLE-METHOD and
      NO-PRIMARY-METHOD now have a RETRY restart available to retry the
      generic function call.
    + enhancement: SB-BSD-SOCKET improvements
      + sockets and socket streams now have a more informative printed
        representation based on the corresponding SOCKET-NAME and
        SOCKET-PEERNAME.
      +  SOCKET-MAKE-STREAM once more supports the :AUTO-CLOSE option.
         (lp#540413)
      + SOCKET-CLOSE now accepts :ABORT argument, which is passed on to
        CL:CLOSE when appropriate, and no longer disassociates the stream
        from the socket if close failed. (lp#543951)
    + improvements to the instrumenting profiler
      + new feature: report per-function GC overhead. (thanks to John Fremlin)
      + optimization: counters no longer use locks for the overflow mode.
      + bug fix: whenever a profiling counter wrapped into overflow mode, it
        incurred an off-by-one miscount.
    + enhancement: improved MAKE-HASH-TABLE documentation (lp#543473)
    + enhancement: improved DEFMETHOD pretty-printing.
    + enhancement: perform range reduction when arguments are too large for
      x87's transcendentals (instead of returning 0). (lp#327192)
    + enhancement: eliminate some spurious TYPE-WARNINGs. Should help with
      some of CL-PPCRE's macros. (lp#570079)
    + enhancement: our machine code is slightly less hostile to valgrind on
      x86-64.
    + enhancement: up-to-date versions of NetBSD-current are supported.  (Thanks
      to Robert Swindells and Aleksej Saushev)
    + bug fix: correct restart text for the continuable error in MAKE-PACKAGE.
    + bug fix: a rare case of startup-time page table corruption.
    + bug fix: a semaphore with multiple waiters and some of them unwinding due
      to timeouts could be left in an inconsistent state.
    + bug fix: fix typo in "Reporting Bugs" section of the manual (lp#520366)
    + bug fix: misoptimization of multiplication by one in
      (SB-C::FLOAT-ACCURACY 0) policies.
    + bug fix: miscounts in SB-PROFILE.
    + bug fix: Fix lost wakeup bug between SB-THREAD:CONDITION-WAIT and
      CONDITION-NOTIFY on Linux. See threads "lost wakeup in condition-wait /
      condition-notify" (Feb 2010) and "Condition-Wait, Deadline handler, waking
      up itself" (March 2010) for further details.
    + bug fix: allow forward FIND and POSITION on lists to elide checking :END
      against length of the list if the element is found before the specified
      END is reached. (thanks to Alec Berryman, lp#554385)
    + bug fix: errors signalled during package graph modification no longer
      block FIND-SYMBOL and FIND-PACKAGE in other threads. (lp#511072)
    + bug fix: SB-POSIX build was broken when SBCL was compiled without the
      :SB-DOC feature. (lp#552564)
    + bug fix: SB-INTROSPECT build issues on GENGC/PPC. (lp#490490)
    + bug fix: more robust runtime executable path detection. (lp#375549)
    + bug fix: GCD always returns positive values. (lp#413680)
    + bug fix: Converting division to multiplication by reciprocal handles
      denormals.
    + bug fix: We were too eager in eliding range reduction tests on x87.
      The maximal magnitude is 2^63, not 2^64.
    + bug fix: Transforms for TRUNCATE don't die when the result is completely
      ignored anymore.
    + bug fix: Maybe restore buildability on Alpha.
    + bug fix: READ-BYTE isn't inline anymore, fixing weird streams failures.
      (lp#569404)
    + bug fix: RANDOM-STATE can be printed readably again.
    + bug fix: Unreadable objects were sometimes printed like #<\nFoo>.
    + bug fix: Using EQL with non-constant values of constant type (e.g. EQL
      types) could result in type mismatches during compilation.
    + enhancement: Backtrace from THROW to uncaught tag on x86oids now shows
      stack frame thrown from.
    + enhancement: WITH-COMPILATION-UNIT :POLICY allows restricting changes to
      compiler optimization qualities inside dynamic extent of its body.
    + enhancement: LOAD-LOGICAL-PATHNAME-TRANSLATIONS can be used to load
      translations from SYS:SITE;<HOST>.TRANSLATIONS.NEWEST (thanks to Michael
      Weber)
    + optimization: SLOT-VALUE and (SETF SLOT-VALUE) take advantage of
      constraint propgation, allowing better compilation eg. when used to
      access structures with WITH-SLOTS. (lp#520366)
    + optimization: the compiler is now more aware of the type of the underlying
      storage vector for multidimensional simple arrays resulting in better code
      for accessing such arrays.
    + optimization: passing NIL as the environment argument to TYPEP no longer
      inhibits optimizing it. (lp#309788)
    + optimization: more efficient register usage when handling single-float
      arguments on x86-64. (thanks to Lutz Euler)
    + optimization: ADJUST-ARRAY and STABLE-SORT on vectors no longer use
      pre-allocated temporary vectors. (lp#496249)
    + bug fix: Fix compiler error involving MAKE-ARRAY and IF forms
      in :INITIAL-CONTENTS. (lp#523612)
    + bug fix: FUNCTION-LAMBDA-EXPRESSION lost declarations from interpreted
      functions. (lp#524707)
    + bug fix: bogus style warnings from certain (SETF SLOT-VALUE) and
      WITH-SLOTS usages during compilation.
    + bug fix: SB-C::CLASS-INFO now prints correctly. (lp#514762)
    + enhancement: Can now build with ud2 instead of int3 as trap instruction on
      all x86oid platforms with :UD2-BREAKPOINTS target feature.
    + bug fix: Breakpoints now work when using ud2 instead of int3 as trap
      instruction (tested on x86oid linux with ud2-breakpoints).
    + bug fix: slam.sh now works on win32.
    + bug fix: better differences of numeric types. (lp#309124)
    + bug fix: arrays declared intersection and union types can have their
      upgraded element type derived. (lp#316078)
    + bug fix: SB-SPROF allocation profiling for all threads failed to profile
      threads started during profiling. (lp#472499)
    + bug fix: SB-INTROSPECT test failure when building without SB-EVAL feature.
      (lp#535658)
    + bug fix: SB-CLTL2:DECLARATION-INFORMATION did not take
      SB-EXT:RESTRICT-COMPILER-POLICY into account. (lp#313337)
    + bug fix: Comma inside a backquoted array or structure resulted in nonsense
      values instead of signaling an error. (lp#309093)
    + bug fix: Spurious unused variable warning in a DEFSTRUCT edge case.
      (lp#528807)
    + bug fix: More consistent warnings and notes for ignored DYNAMIC-EXTENT
      declarations (lp#497321)
    + bug fix: FIND and POSITION on lists did not check sequence bounds properly
      and failed to detect circular lists (lp#452008)
    + bug fix: leakage from ~/.asdf-install into the ASDf-INSTALL contrib build
      (lp#538974)
    + bug fix: LOOP OF-TYPE VECTOR compile-time error. (lp#540186)
    + bug fix: SIGNAL SB-SYS:INTERACTIVE-INTERRUPT before entering the debugger
      due to it, so that handlers can run.
    + bug fix: reparsing undefined types if they have become defined since
      parsing. (lp#309128)
    + bug fix: missing &REST type in a proclamation for a function with both
      &REST and &KEY in lambda-list caused miscompilation (lp#458354)
    + bug fix: WHO-CALLS information for source-transformed and compiler-macro
      expanded calls (lp#542174)
    + bug fix: more accurate WHO-MACROEXPANDS information; point into rather
      than just at toplevel form.
    + new feature: SB-EXT:TYPEXPAND-1, SB-EXT:TYPEXPAND, and
      SB-EXT:TYPEXPAND-ALL behave exactly like their MACROEXPAND counterparts
      but work on type specifiers.
    + new feature: SB-EXT:DEFINED-TYPE-NAME-P returns whether a symbol is known
      to name a type specifier.
    + new feature: SB-EXT:VALID-TYPE-SPECIFIER-P returns whether a given type
      specifier is valid where "valid" basically means "would be accepted as
      second argument of TYPEP".
    + new feature: SB-INTROSPECT:FUNCTION-TYPE takes a function-designator and
      returns the function's declared, or derived FTYPE.
    + new feature: SB-POSIX now supports accessing the d_ino member of
      dirent structures.  (Thanks to Philipp Marek and Pierre THEIRRY)
    + new feature: The function SB-EXT:SEED-RANDOM-STATE has been added to
      provide for seeding a RANDOM-STATE object with user-provided data or
      from the operating system's PRNG.  Also, (MAKE-RANDOM-STATE T) will
      attempt to initialize the returned state from the operating system's
      PRNG where possible.  (Thanks to Fare Rideau; launchpad bug lp#310116)
    + bug fix: Fix SB-SIMPLE-STREAMS:READ-VECTOR to correctly set the
      FILE-POSITION of the stream being read from.  (launchpad bug lp#491087)
    + bug fix: Fix grammar and style issues for the docstrings of
      printer-related variables and functions.  (Thanks to mon_key; launchpad
      bug lp#518696)
    + bug fix: Fix compilation on chenygc platforms. Thanks to Larry Valkama and
      Bruce O'Neel.
    + bug fix: SB-THREAD:CONDITION-WAIT sometimes signaled a deadline twice
      in a row even though a handler defered the deadline long into the
      future. (lp#512914)
    + bug fix: A deadline handler was run without interrupts enabled for a
      deadline signaled within SB-THREAD:CONDITION-WAIT. That could result
      in infinitely spinning, non-killable threads.
    + bug fix: Backtrace from internal-errors on x86-64 os x was truncated
      before reaching the erring stack frame.
    + bug fix: Fix type derivation for EXPT when raising a fixnum to a
      real power.  (launchpad bug lp#525949)
    + bug fix: Fix SB-EXT:GENERATION-* accessors for generations > 0 on
      GENCGC platforms.  (launchpad bug lp#529014)
    + bug fix: More robust checks for invalid DEFMETHOD argument specializers.
      (launchpad bug lp#525916)
    + bug fix: Fix building on Darwin when sysctl is not in the user's PATH.
      (Thanks to Robert Goldman)
    + optimization: ROUND with a single single-float or double-float argument
      is properly inlined when possible.
    + optimization: Slightly better code is generated for integer<->float
      conversions and for single-float<->double-float conversions on x86-64.
    + optimization: SB-ROTATE-BYTE:ROTATE-BYTE now generates more efficient
      code for 32-bit and 64-bit rotations on x86-64.
    + bug fix: The install script changes the ownership of directories as well
      as files for contrib modules using asdf.  (thanks to Eugene Ossintsev;
      launchpad bug lp#508485)
    + bug fix: TRUNCATE with a single single-float or double-float argument is
      properly inlined when possible.  (launchpad bug lp#489388)
    + bug fix: Passing a rotation count of zero to SB-ROTATE-BYTE:ROTATE-BYTE
      no longer causes a compiler error on x86 and ppc.
    + bug fix: GET-MACRO-CHARACTER bogusly computed its second return value
      always relative to *READTABLE* rather than the passed argument.
  * Add myself to uploaders
  * Update standards version (no change)
  * Upgrade to debian source 1.0

 -- Christoph Egger <christoph@debian.org>  Sat, 26 Jun 2010 20:19:08 +0200

sbcl (1:1.0.34.0-1.1) unstable; urgency=low

  * Non-maintainer upload.
  * Add texlive-font-utils to Build-Depends: (Closes: #562305)
    - Thanks to Ilya Barygin and Jari Aalto.

 -- tony mancill <tmancill@debian.org>  Thu, 06 May 2010 21:27:45 -0700

sbcl (1:1.0.34.0-1) unstable; urgency=low

  * Import new upstream. Major changes:
     + minor incompatible change: threading support is now enabled by default
       on x86[-64] Linux.
     + enhancement: SB-INTROSPECT:DEFTYPE-LAMBDA-LIST now also works on most
       builtin types.
     + enhancement: Errors during compile-time-too processing (i.e. EVAL-WHEN)
       are now caught and reported just like errors during macroexpansion.
     + enhancement: SB-POSIX now provides access to tcdrain(), tcflow(),
       tcflush(), tcgetsid(), and tcsendbreak(). (thanks to Jerry James)
     + enhancement: ASDF systems can now depends on SB-QUEUE.
     + fixes and improvements related to Unicode and external formats:
       +* bug fix: error handling and restart usage in the ucs-2 external format
          has been improved.
       +* there is now an implementation of the ucs-4 external format.
       +* the utf-16 and utf-32 external formats are supported.
     + bug fix: SB-POSIX wrapper for putenv no longer tries to put lisp strings
       in the environment. setenv() and unsetenv() are also provided.
       (reported by Fare Rideau; launchpad bug lp#460455)
     + bug fix: LOAD of both .fasl and .FASL type files now forces fasl-style
       loading. This ensures sensible errors for .FASL files from other
       implementations on case-insensitive filesystems. (reported by Willem
       Broekema; launchpad bug lp#489417)
     + bug fix: #p"\\\\" can now be read without error on Win32.  (reported by
       Willem Broekema; launchpad bug lp#489698).
     + bug fix: some minor code rearrangements to reenable warning-free building
       from CMUCL (reported by xme@gmx.net; launchpad bug lp#491104)
     + bug fix: PRINT-OBJECT for clos instances respects the right margin when
       pretty printing
     + bug fix: FIND-PACKAGE & DEFPACKAGE were not thread safe. (reported by
       Attila Lendvai)
     + optimization: faster FIND and POSITION on strings of unknown element
       type in high SPEED policies. (thanks to Karol Swietlicki)
     + optimization: faster CONCATENATE 'STRING in low SPEED policies
       (reported by David Vázquez)
     + improvement: better error signalling for bogus parameter specializer
       names in DEFMETHOD forms (reported by Pluijzer)
     + bug fix: DELETE-FILE once again works on logical pathnames (regression
       since 1.0.30.49)
     + bug fix: LOGICAL-PATHNAME signals a TYPE-ERROR if pathspec is
       specified incorrectly.
     + bug fix: redefinition of a class via DEFCLASS without :DEFAULT-INITARGS
       removes previous default initargs (reported by Lars Rune Nøstdal and
       Samium Gromoff)
     + bug fix: correct WHO-CALLS information for inlined lambdas with complex
       lambda-lists. (reported by Peter Seibel)
     + bug fix: SAVE-LISP-AND-DIE option :SAVE-RUNTIME-OPTIONS did not work
       correctly when starting from an executable core without saved runtime
       options (reported by Faré Rideau, thanks to Zach Beane)
     + bug fix: (SETF SLOT-VALUE) signalled a warning which should have been
       an optimization note instead. (reported by Martin Cracauer)
     + bug fix: WITH-SLOTS did not work with THE forms.
       (thanks to David Tolpin)
     + bug fix: Have RUN-PROGRAM with :INPUT T only run the subprocess in a
       new process group if it doesn't need to share stdin with the sbcl
       process. (thanks to Leslie Polzer)
     + bug fix: SATISFIES could be misoptimized to refer to a local function.
       (reported by Stanislaw Halik)
     + improvement: support O_LARGEFILE access to files larger than 2GB on
       x86-64/linux.  (thanks to Daniel Janus; launchpad bug #453080)
     + new feature: SB-INTROSPECT:WHO-SPECIALIZES-DIRECTLY to get a list of
       definitions for methods specializing on the passed class itself.
     + new feature: SB-INTROSPECT:WHO-SPECIALIZES-GENERALLY to get a list of
       definitions for methods specializing on the passed class itself, or on
       subclasses of it.
     + new build flag: :sb-xref-for-internals; SBCL will collect xref
       information about itself during the build (e.g. for M-? in Slime),
       if this flag is enabled in customize-target-features.lisp. This
       will increase the core size by about 5-6mb, though, so it's mostly
       interesting to SBCL developers.
     + new feature: various GENCGC tuning parameters have been experimentally
       documented and exported from SB-EXT. See documentation for details.
     + fixes and improvements related to Unicode and external formats:
       ++ the Unicode character database has been upgraded to the
          Unicode 5.2 standard, giving names and properties to a number of new
          characters, and providing a few extra characters with case
          transformations.
       ++ improvement: restarts for providing replacement input/output on
          coding errors for fd-stream external formats.
       ++ improvement: where :<encoding> is a keyword corresponding to an
          external format the system supports, it is now possible to specify
          (:<encoding> :replacement <character>) as an external format which
          will automatically substitute <character> on encoding or decoding
          errors for streams and for STRING-TO-OCTETS and its inverse.
          (launchpad bug #317072)
       ++ improvement: the file streams underlying the standard streams
          (such as +STANDARD-INPUT*, *TERMINAL-IO*) are opened with an
          external format which uses the replacement mechanism to handle
          encoding errors, preventing various infinite error chains and
          unrecoverable I/O confusion.
       ++ minor incompatible change: the utf-8 external format now correctly
          refuses to encode Lisp characters in the surrogate range (char-codes
          between #xd800 and #xdfff).
       ++ fix a typo preventing conversion of strings into octet vectors
          in the latin-2 encoding.  (reported by Attila Lendvai; launchpad bug
          #471689)
       ++ fix a bug in the octet multibyte handling of decoding errors and the
          USE-VALUE restart.  (launchpad bug #314939)
       ++ fix the bug underlying the expected failure in the FORCE-END-OF-FILE
          restart on fd-stream decoding errors.
       ++ fix a bug in the ATTEMPT-RESYNC fd-stream decoding restart when the
          error is near the end of file.
       ++ fix a double-error case in unibyte octet conversions, when the first
          use of USE-VALUE is ignored.
       ++ fix bugs in handling of undefined code points in unibyte encodings.
       ++ fix LISTEN (and consequent hangs in READ-CHAR-NO-HANG) on bivalent
          streams after an UNREAD-CHAR.
     + enhancement: SB-INTROSPECT:ALLOCATION-INFORMATION also reports if the
       object is allocated in a boxed region of dynamic space.
     + enhancement: SB-POSIX:FORK now signals an error if an attempt to
       fork with multiple Lisp threads running is made, instead of going
       ahead with unpredictable consequences. (reported by Leslie Polzer)
     + bug fix: uses of slot accessors on specialized method parameters within
       the bodies of SLOT-VALUE-USING-CLASS methods no longer triggers a type
       error while finalizing the class.  This fix may cause classes with slot
       accessors to be finalized later than previously.
       (reported by Lars Rune Nøstdal; launchpad bug #473699)
     + bug fix: restore buildability on the MIPS platform.  (regression from
       1.0.30.38, reported by Samium Gromoff)
     + bug fix: inspecting closures is less likely to fail with a type error.
     + bug fix: no timer starvation when setting the system clock back.
       (launchpad bug #460283)
     + bug fix: WITH-STANDARD-IO-SYNTAX now binds *PRINT-PPRINT-DISPATCH*
       to the standard pprint dispatch table as specified by CLHS.
     + bug fix: give CLISP a hint about a type declaration to enable it to
       build the cross-compiler without warnings.  (thanks to Josh Elasser;
       launchpad bug #396597)
     + bug fix: correctly dump literal objects in defaulting forms of arglists.
       (reported by Attila Lendvai; launchpad bug #310132)
     + bug fix: distinguish in type specifiers between arrays that might be
       complex and arrays that are definitely complex.  (launchpad bug #309129)
     + bug fix: SUBTYPEP knows that the SYMBOL type is not SUBTYPEP the KEYWORD
       type.  (reported by Levente Mészáros; launchpad bug #485972)
     + bug fix: setting the value of a symbol-macro within a method in the
       presence of type declarations works properly again.  (reported by Iban
       Hatchondo; launchpad bug #485019)
  * Removed the usage of dh_undocumented
  * We also dropped the alpha architecture (Closes: #545847)
    and powerpc (Closes: #517374)
  * Removed unneeded Section from sbcl-source

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 30 Dec 2009 22:47:25 +0100

sbcl (1:1.0.31.0-2) unstable; urgency=low

  * should have changed to lisp section
  * fixed a typo in src/compiler/alpha/move.lisp should allow to build
    on alpha again
  * Drop non-PC architectures due to lack of time. (Closes: #526967)

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 03 Nov 2009 17:35:26 +0100

sbcl (1:1.0.31.0-1) unstable; urgency=low

  * New upstream release. Major changes:
    + improvement: stack allocation is should now be possible in all nested
      inlining cases: failure to stack allocate when equivalent code is manually
      open coded is now considered a bug.
    + improvements related to Unicode:
      +* the Unicode character database has been upgraded to the
         Unicode 5.1 standard, giving names and properties to a number of new
         characters, and providing a few extra characters with case
         transformations.
      +* the system now recognizes and produces names for Unicode Hangul
         syllable characters.
      +* the EBCDIC-US external-format is now supported for octet operations
         (as well as for stream operations).
    + new feature: experimental :EMIT-CFASL parameter to COMPILE-FILE can
      be used to output toplevel compile-time effects into a separate .CFASL
      file.
    + optimization: COERCE to VECTOR, STRING, SIMPLE-STRING and recognizable
      one-dimenstional subtypes of ARRAY is upto 70% faster when the coercion is
      actually needed.
    + optimization: TRUNCATE on known single- and double-floats is upto 25%
      faster.
    + optimization: division of floating point numbers by constants uses
      multiplication by reciprocal when an exact reciprocal exists.
    + optimization: multiplication of single- and double-floats floats by
      constant two has been optimized.
    + optimization: ARRAY-IN-BOUNDS-P is resolved at compile-time when
      sufficient type information is available. (thanks to Leslie Polzer)
    + optimization: SLOT-VALUE and (SETF SLOT-VALUE) with constant slot names on
      known structure objects are as efficient as defstruct generated accessors.
    + optimization: unused vector creation can now be optimized away.
    + improvement: ASDF systems can now depends on SB-INTROSPECT.
    + improvement: a STYLE-WARNING is signalled when a generic function
      clobbers an earlier FTYPE proclamation.
    + improvement: the compiler is able to track the effective type of
      generic function across method addition and removal even in the
      absence of an explicit DEFGENERIC.
    + improvement: DESCRIBE now reports on symbols naming undefined
      but assumed or declared function as well.
    + improvement: recompilation of systems using SB-GROVEL now works
      (thanks to Leslie Polzer)
    + improvements to SB-CLTL2 (thanks to Larry D'Anna):
      +* functions DECLARATION-INFORMATION, PARSE-MACRO, and ENCLOSE have been
         documented.
      +* AUGMENT-ENVIRONMENT and DEFINE-DECLARATION have been implemented.
      +* DECLARATION-INFORMATION now supports declaration name DECLARATION as
         well as user defined declaration names.
      +* VARIABLE-INFORMATION is now aware of alien variables.
    + improvement: improved address space layout on OpenBSD (thanks to Josh
      Elsasser)
    + improvement: pretty-printing of various Lisp forms has been improved
      (thanks to Tobias Rittweiler)
    + bug fix: calls to DECODE-FLOAT and INTEGER-DECODE-FLOAT whose value was
      unused were deleted in safe code. (reported by John Fremlin)
    + bug fix: a failing AVER compiling certain MAKE-ARRAY forms. (reported
      by James Wright)
    + bug fix: some out-of-line array predicates were missing (reported by
      Stelian Ionescu)
    + bug fix: a failing AVER in CONVERT-MV-CALL has been fixed. (thanks to
      Larry D'Anna)
    + bug fix: a failing AVER in %ALLOCATE-CLOSURES conversion has been fixed
      (thanks to Larry D'Anna)
    + bug fix: SLEEP supports times over 100 million seconds on long on OpenBSD
      as well. (reported by Josh Elsasser)
    + bug fix: DELETE-FILE on streams no longer closes the stream with :ABORT T,
      leading to possible attempts to delete the same file twice. See docstring
      on DELETE-FILE for details. (reported by John Fremlin)
    + bug fix: DELETE-FILE once again deletes the file named by the pathname
      designator argument, rather than its truename.  (reported by Luis
      Oliveira)
    + bug fix: the low-level debugger had 32-bit assumptions and was missing
      information about some array types. (thanks to Luis Oliveira)
    + bug fix: moderately complex combinations of inline expansions could
      be miscompiled if the result was declared to be dynamic extent.
    + bug fix: on x86, SAP-REF of sizes greater than 8 bits with offsets of the
      form (+ <variable> <integer>) were miscompiled under certain
      circumstances.
    + bug fix: in some cases no compiler note about failure to stack allocate
      was emitted, even if the objects were in fact heap allocated.
    + bug fix: minor violation of "otherwise inaccessible" rule for stack
      allocation could cause objects users might reasonably expect to
      be heap allocated to be stack allocated.
    + bug fix: DESCRIBE signalled an error for generic functions under
      certain circumstances. (thanks to Leslie Polzer)
    + bug fix: Fixed spelling of an error message.
     + minor incompatible change: SB-THREAD:JOIN-THREAD-ERROR-THREAD and
       SB-THREAD:INTERRUPT-THREAD-ERROR-THREAD have been deprecated in favor
       of SB-THREAD:THREAD-ERROR-THREAD.
     + new contrib module: SB-QUEUE provides thread-safe lockless FIFO queues.
     + new feature: docstrings for local and anonymous functions are no longer
       discarded. (thanks to Leslie Polzer)
     + new feature: SB-THREAD:SYMBOL-VALUE-IN-THREAD provides access to symbol
       values in other threads.
     + new feature: SB-INTROSPECT:ALLOCATION-INFORMATION provides information
       about object allocation.
     + optimization: division of a real float by a complex float is
       implemented with a specialised code sequence.
     + optimization: MAKE-INSTANCE with non-constant class-argument but
       constant keywords is an order of magnitude faster.
     + optimization: MAKE-INSTANCE with constant keyword arguments is x2-4
       faster in the presence of :AROUND or non-standard primary
       INITIALIZE-INSTANCE methods, and similarly for non-standard metaclass
       classes as long as there are no methods additional on MAKE-INSTANCE.
     + optimization: more efficient type-checks for FIXNUMs when the value
       is known to be a signed word on x86 and x86-64.
     + optimization: compiler now optimizes (EXPT -1 INTEGER),
       (EXPT -1.0 INTEGER), and (EXPT -1.0d0 INTEGER) into an ODDP test.
       (thanks to Stas Boukarev and Paul Khuong)
     + optimization: compiler is smarter about delegating argument type checks
       to callees.
     + optimization: several character functions are now compiled somewhat more
       efficiently. (reported by Lynn Quam)
     + optimization: the compiler now derives simple types for LOAD-VALUE-FORMs.
     + improvement: less unsafe constant folding in floating point arithmetic,
       especially for mixed complex/real -float operations.
     + optimization: constant double and single floats are stored in native
       unboxed format on x86[-64].
     + optimization: smarter code for arithmetic operations with constant
       floats, complex floats, or integers on x86[-64].
     + optimization: smarter code for conjugate/multiplication of float
       complexes and abs/negate of floats on x86-64.
     + optimization: more efficient complex float and real float operations on
       x86-64.
     + improvement: complex float division is slightly more stable.
     + improvement: DESCRIBE output has been reworked to be easier to read and
       contains more pertinent information.
     + improvement: failure to provide requested stack allocation compiler notes
       provided in all cases (requested stack allocation not happening without a
       note being issued is now considered a bug.)
     + bug fix: SB-POSIX exports the documented types and functions
       FILE-DESCRIPTOR and FILENAME, and also the corresponding -DESCRIPTOR
       types. (reported by "abhi")
     + bug fix: on 64 bit platforms FILL worked incorrectly on arrays with
       upgraded element type (COMPLEX SINGLE-FLOAT), regression from 1.0.28.55.
       (thanks to Paul Khuong)
     + bug fix: looping around HANDLER-CASE could silently consume stack space
       on each iteration. (reported by "foobar")
     + bug fix: better error signalling when calls to functions seeking elements
       from lists (eg. ADJOIN) are compiled with both :TEST and :TEST-NOT.
       (reported by Tobias Rittweiler)
     + bug fix: regressions in DIRECTORY from 1.0.28.61: pattern matching of
       directory components now works as it used to. (various prolems reported
       by Michael Becker, Gabriel Dos Reis, Cyrus Harmon,
       and Harald Hanche-Olsen)
     + bug fix: :PTY option in RUN-PROGRAM was broken with stream arguments.
       (reported by Elliot Slaughter, thanks to Stas Boukarev)
     + bug fix: bogus undefined variable warnings from fopcompiled references to
       global variables. (thanks to Lars Rune Nøstdal)
     + bug fix: foreign function names should now appear in backtraces on
       FC6 as well. (reported by Tomasz Skutnik and Tobias Rautenkranz)
     + bug fix: SETF compiler macro documentation strings are not discarded
       anymore.
     + bug fix: GENTEMP is now unaffected by pretty printer dispatch table.
       (thanks to Alex Plotnick)
     + bug fix: SLEEP accepts large integer arguments, truncating them to
       SIGNED-WORD on the assumption that sleeping for 68 years is sufficient
       for anyone. (reported by Leslie Polzer, thanks to Stas Boukarev)
     + bug fix: compiler notes for expensive slot type checks could be emitted
       at runtime MAKE-INSTANCE calls. (reported by Samium Gromoff)
  * Updated Standards-Version no real changes
  * force  sb-ext:*runtime-pathname* to #P"/usr/bin/sbcl" in contrib
  * ignore script-not-executable lintian errors as fasl files now
    generate a false positive
  * stop lintian complaining about the empty directory
  * remove asdf LICENSE file from package, it is already in the docs
  * also shut linitian up about the clc directory

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 01 Sep 2009 14:26:14 +0100

sbcl (1:1.0.29.11-1) unstable; urgency=low

  * Go to 1.0.29.11 on advice of sbcl-devel.
  * new upstream release.  Major changes:

     + minor incompatible change: under weak type checking policy integer
       types are weakened less aggressively.
     + minor incompatible change: SAVE-LISP-AND-DIE :TOPLEVEL function is now
       allowed to return, which causes SBCL to quit with exit status 0. Previously
       if the function returned with a small integer return value, that value
       was accidentally reused as the exit status.
     + new feature: SB-EXT:DEFINE-HASH-TABLE-TEST allows defining new arguments
       to MAKE-HASH-TABLE :TEST, and MAKE-HASH-TABLE has been extended with
       :HASH-FUNCTION argument. Refer to user manual for details.
     + new feature: SB-EXT:DEFGLOBAL macro allows defining global non-special
       variables.
     + new feature: SB-EXT:GET-TIME-OF-DAY provides access to seconds and
       microseconds since the Unix epoch on all platforms.
     + new feature: SB-EXT:ALWAYS-BOUND proclamation inhibits MAKUNBOUND, and
       allows the compiler to safely elide boundedness checks for special
       variables.
     + new feature: SB-EXT:GLOBAL proclamation inhibits SPECIAL proclamations for
       the symbol, prohibits both lexical and dynamic binding. This is mainly an
       efficiency measure for threaded platforms, but also valueable in
       expressing intent.
     + optimization: the compiler uses a specialized version of FILL when the
       element type is know in more cases, making eg. (UNSIGNED-BYTE 8) case
       almost 90% faster.
     + optimization: accesses to potentially non-simple arrays where element type
       is known are 50% faster.
     + optimization: compiler now generates faster array typechecking code.
     + optimization: ARRAY-DIMENSION is now faster for multidimensional and
       non-simple arrays.
     + optimization: multidimensional array accesses in the absence of type
       information regarding array rank are approximately 10% faster due to
       open coding of ARRAY-RANK.
     + optimization: result of (FILL (MAKE-ARRAY ...) ...) and (REPLACE
       (MAKE-ARRAY ...) ...) can be stack allocated if the result of MAKE-ARRAY
       form can be.
     + optimization: result of call to VECTOR can now be stack allocated.
     + optimization: MAKE-ARRAY with :INITIAL-CONTENTS is now vastly faster
       as long as the resulting array is one-dimensional and has a known
       element type. In particular, :INITIAL-CONTENTS (LIST ...) where the
       length of the list matches the known length of the vector does not
       allocate the list as an intermediate step. Ditto for VECTOR and simple
       backquoted forms.
     + optimization: MAKE-ARRAY can now stack allocate in the presence of
       :INITIAL-CONTENTS and :INITIAL-ELEMENT as long as the result has a
       known element type, and is known to be simple and one dimensional.
     + improvement: SBCL now emits a compiler note where stack allocation was
       requested but could not be provided (not in all cases, unfortunately)
     + improvement: better MACHINE-VERSION responses. (thanks to Josh Elsasser)
     + improvement: pretty-printing loop has been implemented properly. (thanks
       to Tobias Rittweiler)
     + documentation: CLOS slot typechecing policy has been documented.
     + bug fix: FILE-AUTHOR no longer signals an error on Windows.
     + bug fix: SB-SPROF could be foiled by foreign code not have a frame
       pointer, leading to memory faults. (thanks to Bart Botta)
     + bug fix: better floating point exception handling on x86/OpenBSD.
       (thanks to Josh Elsasser)
     + bug fix: exit status from QUIT when called under --script was lost
       (reported by Hubert Kauker)
     + bug fix: MAKE-ARRAY for non-zero :INITIAL-ELEMENT always used the
       same implementation of FILL to initialize the array, even if a more
       efficient one was available (reported by Stas Boukarev, thanks to
       Paul Khuong)
     + bug fix: potential miscompilation of array stack allocation on x86 and
       x86-64. (reported by Time Tossavainen)
     + bug fix: some forms of AND, OR, and COND resulted in expansions that could
       result in their subforms being treated as top level forms. (reported by
       James Knight)
     + bug fix: On x86/x86-64 alien functions declared to return integers shorter
       than a machine register could leave garbage in the high bits of the
       result register (bug 316325).
     + bug fix: disable address space randomization Linux/x86-64 as well,
       not just x86-64. (reported by Ken Olum)
     + bug fix: Attempting to DEREF an (ALIEN (* T)) would produce a WARNING and
       generate incorrect code.
     + bug fix: #201; type inference for CONS and ARRAY types could derive
       wrong results in the presence of eg. RPLACA or ADJUST-ARRAY.
     + bug fix: special variables with a proclaimed specific subtype of FUNCTION
       could not be assigned to or bound with PROGV. (reported by Lorenz
       Mösenlechner)
     + bug fix: the value of CL:- in the inspector was the previous expression
       evaluated rather than the expression being evaluated.
     + bug fix: constants can no longer be locally declared special.
     + bug fix: signals delivered to threads started from foreign land (read:
       directly by pthread_create, not by MAKE-THREAD) are redirected to a Lisp
       thread by blocking all signals and resignalling.
     + bug fix: SHARED-INITIALIZE initialized unbound :ALLOCATION :CLASS slots
       from :INITFORM, if any.
     + a number of bugs in cross-compilation have been fixed, with the ultimate
       result that building under (at least) clisp should be much more reliable.
     + minor incompatible changes: echo-streams now propagate unread-char to the
       underlying input stream, and no longer permit unreading more than one
       character.
     + improvement: on x86/x86-64 Lisp call frames now have the same layout as C
       frames, allowing for instance more reliable backtraces.
     + improvement: the debugger REPL can now reference lexical variables
       by name directly for code compiled with (DEBUG 3).
     + improvement: errors from malformed declarations now have better source
       paths associated with them. (thanks to Tobias Rittweiler)
     + optimization: faster local calls on x86/x86-64
     + bug fix: some error messages for out-of-bound array indexes confused the
       index and the bound. (thanks to Stas Boukarev)
     + bug fix: pretty printing malformed DEFPACKAGE forms (thanks to Sidney
       Markowitz)
     + bug fix: running regressions tests in shells without OSTYPE set now works.
       (reported by Harald Hanche-Olsen)
     + bug fix: more robust static space exhaustion signalling from
       MAKE-STATIC-VECTOR (thanks to Daniel Lowe)
     + bug fix: (SETF DOCUMENTATION) for anonymous function now throws the
       docstring away instead of storing it under names such as (LAMBDA (X)).
       (reported by Leslie Polzer)
     + bug fix: timers could go off in the wrong order, be delayed indefinitely
       (thanks to Ole Arndt for the patch)
     + bug fix: RESTART-FRAME and RETURN-FROM-FRAME stack corruption
     + bug fix: the discriminating function for PRINT-OBJECT no longer preserves
       potentially-invalid effective methods in its cache.
     + bug fix: SB-INTROSPECT:FIND-DEFINITION-SOURCE now works with funcallable
       instances as well (thanks to Paul Khuong)
     + bug fix: using RUN-PROGRAM does not interfere with SB-POSIX:WAIT,
       SB-POSIX:WAITPID and their C equivalents.

  * Limit dynamic space size for contrib rebuilds. May thanks for Peter
    Volkov and Nikodmus Siivola (Closes: #474402)
  * We need a newer common-lisp-controller

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 19 Jun 2009 06:30:56 +0200

sbcl (1:1.0.27.0-1) unstable; urgency=low

  * New upstream release.
    Major changes:
    changes in sbcl-1.0.27 relative to 1.0.26:
      * improvement: the system either recovers from stack exhaustion or dies
        properly as opposed to leaving the user uncertain of whether the handler
        trampled on some random memory next to the stack or having to rely on
        --lose-on-corruption (which is still a good idea to use in production
        because stack exhaustion can happen in signal handlers which will likely
        lead to hangs.)
      * bug fix: fix gc related interrupt handling bug on ppc (regression from
        1.0.25.37, reported by Harald Hanche-Olsen)
      * bug fix: fix ERROR leaking memory (reported by David Thompson)

    changes in sbcl-1.0.26 relative to 1.0.25:
      * incompatible change: an interruption (be it a function passed to
        INTERRUPT-THREAD or a timer function) runs in an environment where
        interrupts can be enabled. The interruption can use
        WITH-INTERRUPTS or WITHOUT-INTERRUPTS as it sees fit. Use
        WITHOUT-INTERRUPTS to avoid nesting of interruptions and
        potentially running out of stack. Keep in mind that in the absence
        of WITHOUT-INTERRUPTS some potentially blocking operation such as
        acquiring a lock can enable interrupts.
      * incompatible change: GC-OFF and GC-ON are removed, as they were
        always unsafe. Use WITHOUT-GCING instead.
      * new feature: runtime option --disable-ldb
      * new feature: runtime option --lose-on-corruption to die at the
        slightest hint of possibly non-recoverable errors: running out of
        memory, stack, alien stack, binding stack, encountering a memory
        fault, etc. In the absence of --lose-on-corruption a warning is
        printed to stderr.
      * enhancement: detect binding stack exhaustion
      * enhancement: detect alien stack exhaustion on x86/x86-64
      * improvement: generally more stable and reliable interrupt handling
      * improvement: there is a per thread interruption queue,
        interruptions are executed in order of arrival
      * improvement: a repeating timer reschedules itself when the it has
        finished, but expiration times are spaced equally. If an
        expiration time is in the past it will trigger after a short grace
        period that may give a chance to other things to run.
      * optimization: slightly faster gc on multithreaded builds
      * optimization: faster WITHOUT-GCING
      * bug fix: when JOIN-THREAD signals an error, do it when not holding
        important locks so that the debugger/handler doesn't produce
        recursive errors or deadlock.
      * bug fix: real-time signals are not used anymore, so no more
        hanging when the system wide real-time signal queue gets full.
      * bug fix: INTERRUPT-THREAD on a dying thread could produce memory
        fault.
      * bug fix: finalizers, gc hooks never run in a WITHOUT-INTERRUPTS
      * bug fix: fix random memory faults related to interrupts on alpha
      * bug fix: fix random memory faults related to interrupts on sparc
      * bug fix: fix deadlocks related to starting threads
      * bug fix: fix deadlines on locks on futex platforms
      * bug fix: restore errno in signal handlers
      * bug fix: fix deadlocks related to hash tables
      * bug fix: fix deadlocks in pcl
  * imported new upstream version
  * now using debhelper version 7
  * updated standard version without any real changes
  * use dh_prep instead of dh_clean -k

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 19 Apr 2009 15:44:17 +0200

sbcl (1:1.0.25.0-1) unstable; urgency=low

  * add ${misc:Depends} for all targets
  * replace gs-gpl with ghostscript
  * updated standard version without any real changes
  * Fixed the section for the doc-base files
  * reindented changelog
  * fixed groff problem "a space character is not allowed in an escape
    name" by random typing
  * removed full path from update-binfmts
  * New upstream, old uploader. (Closes: #514884, #436024)
    Major changes:

        changes in sbcl-1.0.25 relative to 1.0.24:
          + incompatible change: SB-INTROSPECT:FUNCTION-ARGLIST is
	    deprecated, to be removed later. Please use
	    SB-INTROSPECT:FUNCTION-LAMBDA-LIST instead.
          + new feature: SB-INTROSPECT:DEFTYPE-LAMBDA-LIST allows
	    retrieval of DEFTYPE lambda lists. (thanks to Tobias
	    Rittweiler)
          + enhancement: MUTEX-VALUE is to be superseded by MUTEX-OWNER
	    that has a better name and does not return values so stale on
	    multiprocessor systems.  Also, HOLDING-MUTEX-P was added for
	    about the only sane usage of MUTEX-OWNER.
          + improvement: unithread builds keep track of MUTEX-VALUE.
          + improvement: reading from a TWO-WAY-STREAM does not touch the
	    output stream anymore making it thread safe to have a
	    concurrent reader and a writer, for instance, in a pipe.
          + improvement: GET-SETF-EXPANDER avoids adding bindings for
	    constant arguments, making compiler-macros for SETF-functions
	    able to inspect their constant arguments.
          + improvement: COMPILE-FILE reports times with millisecond
	    accuracy (thanks to Luis Oliveira)
          + optimization: CHAR-CODE type derivation has been improved,
	    making TYPEP elimination on subtypes of CHARACTER work
	    better. (reported by Tobias Rittweiler, patch by Paul Khuong)
          + bug fix: setting alien structure fields of type struct by
	    value now computes the right offset for the memory copy.
          + bug fix: compilation problem involving inlined calls to aliens
	    with result type VOID. (reported by Ken Olum)
          + bug fix: #235a; sequential inline expasion in different
	    policies no longer reuses the functional from the previous
	    expansion site.
          + bug fix: DEFTYPE no longer breaks on bodies consisting of a
	    single unquoted symbol. Regression from 1.0.22.8. (reported by
	    Ariel Badichi)
          + bug fix: named ENUMs in multiply-referenced alien record types
	    no longer cause an implied type redefinition.  Regression from
	    1.0.21.29.
          + bug fix: sign-extension of small signed return values now
	    works with C code compiled with gcc 4.3 or newer. (reported by
	    Liam Healy)

        changes in sbcl-1.0.24 relative to 1.0.23:

          + new feature: ARRAY-STORAGE-VECTOR provides access to the
	    underlying data vector of a multidimensional SIMPLE-ARRAY.
          + new feature: the system now signals a continuable error if
	    standard readtable modification is attempted. (thanks to
	    Tobias Rittweiler)
          + new feature: DIRECTORY has been extended with a non-standard
	    keyword argument :RESOLVE-SYMLINKS. (thanks to TC-Rucho)
          + enhancement: SB-BSD-SOCKETS:MAKE-SOCKET-STREAM keyword
	    argument handling has been robustified and documented
	    better. (thanks to Robert Goldman)
          + optimization: faster generic arithmetic dispatch on x86 and
	    x86-64.  + optimization: FORMAT ~D and ~F are now approximately
	    5% faster.
          + tradeoff: constant FORMAT control strings are now compiled
	    unless SPACE > SPEED (previously only when SPEED > SPACE.)
          + bug fix: Red Hat Enterprise 3 mmap randomization
	    workaround. (thanks to Thomas Burdick)
          + bug fix: DEFCLASS and ENSURE-CLASS-USING-CLASS are now
	    expected to be thread safe.
          + bug fix: lexical type declarations are now correctly reported
	    by SB-CLTL2. (reported by Larry D'Anna)
          + bug fix: STRING-TO-OCTETS did not handle :START properly when
	    using UTF-8 as external format. (thanks to Luis Oliveira)
          + bug fix: errors from invalid fill-pointer values to (SETF
	    FILL-POINTER) are signalled correctly. (thanks to Stas
	    Boukarev)
          + bug fix: SET-MACRO-CHARACTER accepts NIL as the readtable
	    designator. (thanks to Tobias Rittweiler)
          + bug fix: SET-DISPATCH-MACRO-CHARACTER accepts NIL as the
	    readtable designator, and returns T instead of the
	    function. (thanks to Tobias Rittweiler)
          + bug fix: direct superclasses of STANDARD-CLASS and
	    FUNCALLABLE-STANDARD-CLASS now default to STANDARD-OBJECT and
	    FUNCALLABLE-STANDARD-OBJECT as required by AMOP.
          + bug fix: compiling a call to SLOT-VALUE with a constant
	    slot-name when no class with the named slot yet exists no
	    longer causes a compile-time style-warning.
          + bug fix: :ALLOCATION :CLASS slots are type-checked properly in
	    safe code. (reported by Didier Verna)
          + bug fix: #430; nested structure constructors can stack
	    allocate.  + bug fix: on some 64-bit platforms dynamic space
	    size was truncated to #xffff0000 bytes. (reported by Benjamin
	    Lambert)
          + bug fix: setting *READ-SUPPRESS* to T no longer renders the
	    default REPL unusable. (reported by Daniel Herring)
          + bug fix: return values of READ-SEQUENCE did not take :START
	    into account on file streams, regressions since
	    1.0.12.22. (reported by Thomas Russ, patch by Paul Khuong)
          + bug fix: using SET or (SETF SYMBOL-VALUE) to change the value
	    of a method specializer used to confuse permuation vector
	    optimization.
          + bug fix: system inserted bogus implicit type declarations for
	    local special variables in DEFMETHOD bodies.
          + bug fix: #354; duplicated frames in backtraces due to
	    non-tail-call-optimized XEPs to functions with return type NIL
	    have been elimited.
          + bug fix: #357; MAKE-INSTANCE/SHARED-INITIALIZE now initializes
	    structure object slots according to DEFSTRUCT initforms, and
	    DEFSTRUCT forms :INCLUDEind structure classes defined using
	    DEFCLASS :METACLASS STRUCTURE-CLASS now inherit their
	    initforms.  (reported by Bruno Haible and Stephen Wilson)
          + bug fix: #395; fill-pointer output streams used now support
	    element-type BASE-CHAR as well.
          + bug fix: compiler error when attempting to derive return value
	    of ARRAY-ELEMENT-TYPE when the array type was a union of
	    intersection types.
          + bug fix: address-spaces overlapped on OpenBSD. (thanks to Josh
	    Elsasser)
          + bug fix: Mac OS X binaries should now be portable between
	    Leopard and Tiger.

        changes in sbcl-1.0.23 relative to 1.0.22:

          + enhancement: when disassembling method functions, disassembly
	    for the associated fast function is also produced.
          + enhancement: system stores DEFTYPE lambda-lists, so DESCRIBE
	    can report them.
          + optimization: printing with *PRINT-PRETTY* true is now more
	    efficient as long as the object being printed doesn't require
	    special handling by the pretty printer.
          + bug fix: slot symbol-macros from WITH-SLOTS inside DEFMETHOD
	    bodies now interact correctly with type declarations.
          + partial bug fix: PCL detects infinite recursion during wrapper
	    validation. (thanks to Attila Lendvai)
          + bug fix: #426; nested function calls are inlined properly.
	    Previously if FOO was an inline function, in calls of the form
	    (FOO (FOO ...)) the outer call was not inlined.
          + bug fix: long long arguments passed in registers to alien
	    functions on PowerPC Linux and NetBSD are now handled
	    correctly when preceded by SYSTEM-AREA-POINTERs. (reported by
	    Josh Elsasser)

        changes in sbcl-1.0.22 relative to 1.0.21:

          + minor incompatible change: LOAD-SHARED-OBJECT no longer by
	    default looks for the shared object in the current directory,
	    but passes the native namestring of the designated pathname to
	    the operation system's shared object loading function as-it.
          + minor incompatible change: --disable-debugger toplevel option
	    now takes effect before processing of initialization files and
	    --eval or --load options.
          + new feature: new commandline argument: --script, which
	    supports shebang lines. See documentation for details. (based
	    on work by Kevin Reid)
          + new feature: SAVE-LISP-AND-DIE can save current values of
	    --dynamic-space-size and --control-stack-size in the
	    executable core, causing it to skip normal runtime option
	    processing. See documentation for details. (thanks to Zach
	    Beane)
          + enhancement: inoccous calls to EVAL or generic functions
	    dispatching on subclasses of eg. STREAM no longer cause
	    compiler notes to appear.
          + enhancement: the system no longer resignals errors from --load
	    and --eval toplevel arguments as SIMPLE-ERRORS, which caused
	    restarts associated with the original error to be
	    lost. (thanks to Ariel Badichi)
          + enhancement: :DONT-SAVE keyword argument has been added to
	    LOAD-SHARED-OBJECT for controlling interaction with
	    SAVE-LISP-AND-DIE, and UNLOAD-SHARED-OBJECT can be used to
	    undo the effects of an earlier LOAD-SHARED-OBJECT call.
          + bug fix: ADJUST-ARRAY on multidimensional arrays used bogusly
	    give them a fill pointer unless :DISPLACED-TO or
	    :INITIAL-CONTENTS were provided. (reported by Cedric St-Jean)
          + bug fix: circularity handling in the reader did not treat raw
	    structure slots correctly. (reported by Cedric St-Jean)
          + bug fix: SERVE-EVENT occasionally signaled an error about
	    bogus file descriptors when there were none.
          + bug fix: DEFINE-COMPILER-MACRO support of destructuring
	    lambda-lists was broken. (reporteed by Willem Broekema)
          + bug fix: SB-EXT:NATIVE-NAMESTRING on Windows did not work on
	    pathnames without a directory.
          + bug fix: COMPILE-FILE did not warn about undefined variable
	    references at toplevel, and LOAD of the resulting fasl did not
	    signal an error.
          + bug fix: functions with non-required arguments used to end up
	    with (SB-C::&OPTIONAL-DISPATCH ...) as their name.
          + bug fix: redefining a function with non-required arguments
	    didn't update the system's knowledge about its call signature
	    properly.
          + bug fix: fixed #431; incompatible alien record type
	    redefinitions are detected and handled. (reported by Neil
	    Haven)
          + bug fix: using RESTRICT-COMPILER-POLICY with DEBUG 3 could
	    cause PROGV miscompilation. (reported by Matthias Benkard,
	    patch by Juho Snellman)
          + bug fix: on x86 and x86-64 backtraces were sometimes truncated
	    after alien stack frames.
          + bug fix: strings passed to mk{s,d}temp lacked null termination

        changes in sbcl-1.0.21 relative to 1.0.20:

          + new feature: the compiler is able to track the effective type
	    of a generic function across method addition and removal.
          + new feature: SB-EXT:ATOMIC-INCF allows atomic incrementation
	    of appropriately typed structure slots without locking.
          + new feature: SB-EXT:CALL-WITH-TIMING provides access to timing
	    information like those gathered by TIME using a
	    programming-friendly interface.
          + new feature: TIME reports time taken even if the form performs
	    a non-local transfer of control.
          + enhancement: reduced conservativism on GENCGC platforms: on
	    average 45% less pages pinned (measured from SBCL self build).
          + bug fix: SB-EXT:COMPARE-AND-SWAP on SYMBOL-VALUE can no longer
	    mutate constant symbols or violate declaimed type of the
	    symbol.
          + bug fix: SB-THREAD:SIGNAL-SEMAPHORE could fail to wakeup
	    threads sleeping on the semaphore in heavily contested
	    semaphores.
          + bug fix: semaphores and condition variables were not interrupt
	    safe.
          + bug fix: SB-THREAD:CONDITION-WAIT doesn't allow waits on
	    mutexes owned by other threads anymore.
          + bug fix: FIND on lists called KEY outside the specified
	    subsequence. (reported by budden)
          + bug fix: LOG doesn't use single-float intermediate results
	    when given mixed integer and double-float arguments, leading
	    to better precision. (reported by Bob Felts)
          + bug fix: LOG with base zero returned values of inconsistent
	    type.

        changes in sbcl-1.0.20 relative to 1.0.19:

          + minor incompatible change: OPTIMIZE qualities
	    SB-C::STACK-ALLOCATE-DYNAMIC-EXTENT,
	    SB-C::STACK-ALLOCATE-VECTOR, and
	    SB-C::STACK-ALLOCATE-VALUE-CELLS no longer exist. See
	    documentation and SB-EXT:*STACK-ALLOCATE-DYNAMIC-EXTENT* for
	    details.
          + documentation: some slot access efficiency guidelines have
	    been added to the user manual.
          + optimization: ASSOC-IF, ASSOC-IF-NOT, MEMBER-IF,
	    MEMBER-IF-NOT, RASSOC, RASSOC-IF, and RASSOC-IF-NOT are now
	    equally efficient as ASSOC and MEMEBER.
          + optimization: calls to ASSOC, MEMBER, and RASSOC can be
	    transformed to more efficient EQ-comparison versions more
	    often.
          + optimization: enhanced derivation of DOLIST iteration variable
	    type for constant lists.
          + optimization: constant folding of simple (LIST ...) forms as
	    DOLIST arguments.
          + optimization: runtime lookup of function definitions can be
	    elided in more cases, eg: (let ((x 'foo)) (funcall foo)).
          + optimization: compiler is able to derive the return type of
	    (AREF (THE STRING X) Y) as being CHARACTER.
          + optimization: CLRHASH on empty hash-tables no longer does
	    pointless work. (thanks to Alec Berryman)
          + optimization: REPLACE deftransforms don't punt when :START1 or
	    :START2 is given
          + bug fix: compiling DESTRUCTURING-BIND on constant list
	    arguments no longer emits a code deletion note. (reported by
	    Andrew Gasparovic)
          + bug fix: bogus odd-number-of-keywords STYLE-WARNINGs from
	    calls to functions with an odd number of &OPTIONAL arguments,
	    a &REST argument, and one or more &KEY arguments at the call
	    site.
          + bug fix: STYLE-WARNINGs for functions with both &OPTIONAL and
	    &KEY arguments appeared at call sites as well.
          + bug fix: fixed #425; CLOSE drops input buffers from streams,
	    so READ-LINE &co can no longer read from them
	    afterwards. (reported by Damien Cassou)
          + bug fix: fixed #427: unused local aliens no longer cause
	    compiler breakage. (reported by Stelian Ionescu, Andy Hefner
	    and Stanislaw Halik)
          + bug fix: non-local exit from a WITH-ALIEN form no longer
	    causes alien-stack leakage. (reported by Andy Hefner)
          + bug fix: PROGV signals an error when an attempt to violate
	    declared type of a variable or bind a constant is made.
          + bug fix: SET signals an error when an attempt to violate
	    declared type of a variable is made.
          + bug fix: restart computation during the execution of a restart
	    test function no longer causes infinite recursion. (reported
	    by Michael Weber)
          + bug fix: calling SB-COVER:REPORT with a non-directory pathname
	    now signals an error. (thanks to Pierre Mai)
          + bug fix: EXPORT left symbol unexported in conflict situations.
	    (thanks to Michael Weber)
          + bug fix: correctly handle name conflicts involving CL:NIL.
	    (thanks to Michael Weber)
          + bug fix: RESOLVE-CONFLICT restart for name conflicts handles
	    conflicts arising from USEing package with conflicting symbols
	    correctly. (thanks to Michael Weber)

        changes in sbcl-1.0.19 relative to 1.0.18:

          + new feature: user-customizable variable
	    SB-EXT:*MUFFLED-WARNINGS*; warnings that go otherwise
	    unhandled will be muffled if they are of the type that's the
	    value of this variable.
          + optimization: stack allocation is slightly more efficient on
	    x86 and x86-64.
          + bug fix: DEFSTRUCT forms with user-specified :CONSTRUCTOR
	    options, where a raw slot always is initialized using the
	    initform whose type is not know sufficiently well a
	    compile-time are now compiled correctly. (reported by John
	    Morrison)
          + bug fix: compiler no longer makes erronous assumptions in the
	    presence of non-foldable SATISFIES types.
          + bug fix: stack analysis missed cleanups of dynamic-extent
	    arguments in non-let-converted calls to local functions.
          + improvements to the Windows port: ++ adjusted address spaces
	    for building on both Win32 and Win64. (thanks for John
	    Connors)
          + fixed some bugs revealed by Paul Dietz' test suite: ++
	    interval arithmetic during type derivation used inexact
	    integer to single-float coercions.

            ++ arithmetic operations involving large integers and single
	       floats give the same results in compiled and interpreted
	       code.
            ++ deriving the result type of COERCE no longer signals an
	       error if the derived type of the second argument is a
	       MEMBER type containing invalid type specifiers.
            ++ ADJOIN with constant NIL as second argument works
	       correctly.
            ++ FUNCTION-KEYWORDS was called
	       SB-PCL::FUNCTION-KEYWORD-PARAMETERS.
  * reindented changelog debian/changelog

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 16 Feb 2009 13:55:49 +0100

sbcl (1:1.0.18.0-2) unstable; urgency=low

  * Fix cffi NULL pointer dereferencing. (Closes: #503255)

 -- Thiemo Seufer <ths@debian.org>  Sat, 25 Oct 2008 01:06:48 +0100

sbcl (1:1.0.18.0-1) unstable; urgency=low

  * New upstream release. Major changes:
     + minor incompatible change: SB-SPROF:WITH-PROFILING now by default
       profiles only the current thread.
     + minor incompatible change: changes to SYMBOL-VALUE of constants
       defined with DEFCONSTANT now signal an error.
     + enhancement: SB-SPROF now has support for wallclock profiling,
       and is also able to profile specific threads. REPORT output
       has also additional sorting options.
     + enhancement: better pretty-printing of DEFPACKAGE forms.  (Thanks
       to Michael Weber)
     + optimization: structure allocation has been improved
       ** constructors created by non-toplevel DEFSTRUCTs are ~40% faster.
       ** out of line constructors are ~10% faster.
       ** inline constructors are ~15% faster.
       ** inline constructors are capable of dynamic extent allocation
          (generally on x86 and x86-64, in some cases on other platforms
          as well.)
     + optimization: simple uses of HANDLER-CASE and HANDLER-BIND no
       longer cons.
     + optimization: file compiler is now able to coalesce non-circular
       lists, non-base strings, and bit-vectors. Additionally, constants
       are never referenced through SYMBOL-VALUE at runtime.
     + optimization: code defining methods on PRINT-OBJECT (and other
       generic functions in the COMMON-LISP package) now loads faster.
     + bug fix: EAI_NODATA is deprecated since RFC 3493. Stop using it
       in sb-bsd-sockets.
     + bug fix: if COMPILE-FILE aborts due to an unwind, the partial
       fasl is now deleted. (reported by Attila Lendvai)
     + bug fix: READ-LINE always returned NIL for the last line in files.
       (reported by Yoshinori Tahara)
     + bug fix: more accurate disassembly annotations of foreign function
       calls.  (thanks to Andy Hefner)
     + bug fix: trimming non-simple strings and non-string string
       designators when the there is nothing to trim works properly.
       (thanks to James Knight)
     + new feature: SB-POSIX bindings for mlockall, munlockall, and setsid.
       (thanks to Travis Cross)
     + fixed some bugs revealed by Paul Dietz' test suite:
       ** NIL is a valid function name (regression at 1.0.13.38)
       ** FILL on lists was missing its return value (regression at 1.0.12.27)
       ** STRING-TRIM, STRING-LEFT-TRIM, and STRING-RIGHT-TRIM did not respect
          fill pointers properly (regression at 1.0.12.23)
       ** STRING-TRIM, STRING-LEFT-TRIM, and STRING-RIGHT-TRIM did not respect
          displacement indices properly (regression at 1.0.12.23)

 -- Thiemo Seufer <ths@debian.org>  Fri, 04 Jul 2008 23:00:48 +0100

sbcl (1:1.0.17.0-1) unstable; urgency=low

  * New upstream release. Major changes:
     + temporary regression: user code can no longer allocate closure
       variable storage on stack, due to bug 419 without explicitly
       requesting it. Please consult sbcl-devel for advice if you need to
       use this feature in the meanwhile.
     + new feature: runtime argument --control-stack-size can be used to
       adjust thread default control stack size.
     + enhancement: improved TIME output
       ** all times are reported using the measured accuracy (milliseconds
          for real and GC times, microseconds for everything else.)
       ** processor cycle counts on x86 and x86-64.
       ** interpreted forms are counted for both evaluator modes.
       ** number of lambdas converted by the compiler is reported.
       ** CPU percentage report (computed from real and total run time.)
       ** more comprehensive run time reporting, using a condenced format
       ** interperted form, lambda, and page fault counts are omitted
          when zero.
     + optimization: ADJOIN and PUSHNEW are upto ~70% faster in normal
       SPEED policies.
     + optimization: APPEND is upto ~10% faster in normal SPEED policies.
     + optimization: two argument forms of LAST are upto ~10% faster
       in normal SPEED policies.
     + optimization: NCONC no longer needs to heap cons its &REST list
       in normal SPEED policies.
     + bug fix: SB-FLUID build feature no longer breaks the build. (thanks
       to Sidney Markowitz)
     + bug fix: UNION and NUNION work with :TEST-NOT once more,
       regression since 1.0.9.1. (thanks to Eric Marsden)
     + bug fix: result of MAKE-ARRAY can be stack allocated - regression
       since 1.0.15.36. (thanks to Paul Khuong)
     + bug fix: LAST when always returned the whole list when given a bignum
       as the second argument.
     + bug fix: dynamic extent allocation of nested lists and vectors
       could leak to otherwise accessible parts.
     + bug fix: invalid optimization of heap-allocated alien variable
       reference.
     + bug fix: fasl header checking is less vulnerable to different
       platform word lengths.
     + bug fix: more correct assembler syntax for GNU binutils
       2.18.50.0.4 support.  (thanks to Marijn Schouten)
     + bug fix: fix ECASE warnings from CMUCL-as-xc-host.  (reported by
       Andreas Franke)
     + bug fix: the fopcompiler can handle LOCALLY forms (with no
       declarations) successfully.  (reported by Attila Lendvai)

 -- Thiemo Seufer <ths@debian.org>  Sun, 01 Jun 2008 03:27:19 +0100

sbcl (1:1.0.16.0-2) unstable; urgency=low

  * Fix alpha build failure.

 -- Thiemo Seufer <ths@debian.org>  Sat, 03 May 2008 08:28:53 +0100

sbcl (1:1.0.16.0-1) unstable; urgency=low

  * Re-allow builds for alpha and sparc.
  * New upstream release. Major changes:
     + minor incompatible change: revert the changes to sb-posix's error
       signaling added in 1.0.14.
     + minor incompatible change: change PROBE-FILE back to returning
       NIL whenever we can't get a truename, as was the case before 1.0.14.
     + minor incompatible change: SB-BSD-SOCKETS:NAME-SERVICE-ERROR now
       inherits from ERROR instead of just CONDITION.
     + new feature: SB-INTROSPECT can provide source locations for instances
       as well. (thanks to Tobian Ritterweiler)
     + optimization: binding special variables now generates smaller code
       on threaded platforms.
     + optimization: MEMBER and ASSOC are over 50% faster for :TEST #'EQ
       and cases where no :TEST is given but the compiler can infer that
       the element to search is of type (OR FIXNUM (NOT NUMBER)).
     + optimization: better LOGNOT on fixnums.
     + optimization: modular arithmetic for a particular requested width
       is implemented using a tagged representation unless a better
       representation is available.
     + fixed bug 423: TRULY-THE and *CHECK-CONSISTENCY* interaction.
     + bug fix: SB-BSD-SOCKETS:MAKE-INET-ADDRESS checks the input string
       for wellformedness and returns a specialized vector. (reported by
       Francois-Rene Rideau)
     + bug fix: FIND-CLASS was not thread-safe. (reported by Attila Lendvai)
     + bug fix: ~R was broken for vigtillions. (thanks to Luis Oliveira)
     + bug fix: attempt to obtain *SCHEDULER-LOCK* recursively when
       unscheduling timer at the same time as another timer fires.
     + bug fix: don't reschedule timers for dead threads.
     + bug fix: periodic polling was broken. (thanks to Espen S Johnsen)
     + bug fix: copying output from RUN-PROGRAM to a stream signalled
       bogus errors if select() was interrupted.
     + enhancement: add support for fcntl's struct flock to SB-POSIX.

 -- Thiemo Seufer <ths@debian.org>  Thu, 01 May 2008 13:34:28 +0100

sbcl (1:1.0.15.0-2) unstable; urgency=low

  * Re-allow builds for mips and mipsel (Closes: #463569)

 -- Thiemo Seufer <ths@debian.org>  Fri, 28 Mar 2008 15:37:57 +0000

sbcl (1:1.0.15.0-1) unstable; urgency=low

  * Better watch file, thanks to Raphael Geissert (Closes: #449735)
  * New upstream. Major changes:
     + enhancement: cleaner backtraces for interactive interrupts, as
       well as other cases where the interesting frames used to be
       obscured by interrupt handling frames.
     + enhancement: untracing a whole package using (UNTRACE "FOO") is
       now supported, and tracing a whole package using (TRACE "FOO") now
       traces SETF-functions as well.
     + enhancement: implement SB-POSIX:MKTEMP and SB-POSIX:MKDTEMP.
     + SB-DEBUG:PRINT-FRAME-CALL now prints the entry-point kind even
       when SB-DEBUG:*SHOW-ENTRY-POINT-DETAILS* is NIL.
     + unreadably printed representation of hash-tables now includes
       weakness if any.
     + bug fix: partially fixed #188: type propagation from assignments
       is now more efficient.
     + bug fix: fixed #407: (COERCE X 'SINGLE-FLOAT) and (COERCE X
       'DOUBLE-FLOAT) are not flushable.
     + bug fix: on x86 and x86-64 pointer based EQ-hashing now uses the
       full address of the object, and none of the tag bits.
     + bug fix: readably printing hash-tables now respects other printer
       control variables.  (reported by Cedric St-Jean)
     + bug fix: compiler gave a bogus STYLE-WARNING for the :SYNCHRONIZED
       keyword with MAKE-HASH-TABLE.
     + bug fix: export SB-POSIX:MKSTEMP.
     + bug fix: SORT was not interrupt safe.
     + bug fix: XREF accounts for the last node of each basic-block as
       well.
     + bug fix: MAKE-INSTANCE optimizations interacted badly with
       non-keyword :DEFAULT-INITARGS in the presence of :BEFORE/:AFTER
       methods on SHARED-INITIALIZE.  (thanks to Matt Marjanovic)
     + bug fix: the CTOR optimization for MAKE-INSTANCE should no longer
       create obsolete instances in the case of redefinition or
       obsoletion of a superclass.  (thanks to Andy Hefner)
     + bug fix: Support for the Alpha architecture has been revived; it had
       suffered somewhat from lack of maintenance since sbcl-1.0.
     + improvements to the Windows port:
        ** The system detects the codepage to use at startup, instead of
           using the value from the saved core. (thanks to Kei Suzuki)

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 14 Mar 2008 23:42:40 +0100

sbcl (1:1.0.14.0-1) unstable; urgency=low

  * New upstream release. Major changes:
     + new feature: SB-EXT:*EXIT-HOOKS* are called when the process exits
       (see documentation for details.)
     + partially fixed bug #108: ROOM no longer suffers from occasional
       (AVER (SAP= CURRENT END)) failures .
     + fixed bug #402: proclaimed non-standard declarations in DEFMETHOD
       bodies no longer cause a WARNING to be signalled. (reported by
       Vincent Arkesteijn)
     + bug fix: (TRUNCATE X 0) when X is a bignum now correctly signals
       DIVISION-BY-ZERO. Similarly for MOD and REM (which suffered due to
       the bug in TRUNCATE.) (reported by Michael Weber)
     + bug fix: SB-SPROF:REPORT no longer signals an error if there are
       no samples. (reported by Andy Hefner)
     + bug fix: functions compiled using (COMPILE NIL '(LAMBDA ...))
       no longer appear as (NIL ...) frames in backtraces.
     + bug fix: RESOLVE-CONFLICT (and the other name conflict machinery)
       is now actually exported from SB-EXT as documented.  (reported by
       Maciej Katafiasz)
     + bug fix: sb-aclrepl now correctly understands how to inspect
       single-floats on 64-bit platforms where single-floats are not boxed.
     + bug fix: SB-MOP:CLASS-SLOTS now signals an error if the class has not
       yet been finalized. (reported by Levente Meszaros)
     + bug fix: CLOSE :ABORT T behaves more correctly on Windows.
     + DESCRIBE and (DOCUMENTATION ... 'OPTIMIZE) describe meaning of
       SBCL-specific optimize qualities.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 30 Jan 2008 21:19:30 +0100

sbcl (1:1.0.13.0-1) unstable; urgency=low

  * updated standard version no real changes
  * Changed to group maintenance
  * New upstream. Major changes:
     + minor incompatible change: RUN-PROGRAM now uses execvp(3) to find
       an executable in the search path, and does so in the child
       process's PATH.  The function FIND-EXECUTABLE-IN-SEARCH-PATH has
       been removed; it can be found in the CVS history, for somebody who
       needs that search behavior (see the manual).
     + minor incompatible change: compiler policy re. weakening type
       checks has changed: now type checks are weakened on if SAFETY < 2
       and SAFETY < SPEED.
     + SB-EXT:NATIVE-NAMESTRING takes a new keyword AS-FILE, forcing
       unparsing of directory pathnames as files. Analogously,
       SB-EXT:PARSE-NATIVE-NAMESTRING takes an AS-DIRECTORY, forcing a
       filename to parse into a directory pathname.
     + enhancement: implicit generic function creation now signals a
       specific style-warning IMPLICIT-GENERIC-FUNCTION-WARNING, which
       users can bind handlers for and muffle around calls to LOAD.
     + enhancement: RUN-PROGRAM allows unicode arguments and environments
       to be used (using the default stream external format), and allows
       non-simple strings to be used. (thanks to Harald Hanche-Olsen)
     + optimization: COPY-SEQ, FILL, and SUBSEQ are 30-80% faster for
       strings and vectors whose element-type or simplicity is not fully
       known at compile-time.
     + optimization: STRING-TRIM and related functions no longer allocate
       a new string when no trimming needs to be performed. These functions
       are also faster than before when the input string has been declared
       as a simple-string.
     + optimization: READ-SEQUENCE on simple-strings is up to 80% faster.
     + optimization: READ-LINE is significantly faster for files containing
       long lines.
     + optimization: non-open coded uses of character comparison operators
       (e.g. char=) no longer cons when called with more than one parameter
       on platforms supporting dynamic-extent allocation.
     + bug fix: READ-SEQUENCE on composite stream wrapping a Gray stream
       with STREAM-ELEMENT-TYPE (UNSIGNED-BYTE 8) signalled an error.
     + bug fix: COPY-SEQ on lists did not signal a type-error on improper
       lists in safe code.
     + bug fix: some sequence functions elided bounds checking when
       SPEED > SAFETY.
     + bug fix: too liberal weakening of union-type checks when SPEED >
       SAFETY.
     + bug fix: more bogus fixnum declarations in ROOM implementation
       have been fixed.
  * We lost the ChangeLog when moving away from CVS
  * Make source files not executable
  * Prepare for release

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 14 Jan 2008 07:58:16 +0100

sbcl (1:1.0.12.0-1) unstable; urgency=low

  * New upstream version. Major changes:
     + new feature: MAKE-HASH-TABLE now experimentally accepts a
       :SYNCHRONIZED argument, which makes the hash-table safe for
       concurrent accesses (but not iteration.) See also:
       SB-EXT:WITH-LOCKED-HASH-TABLE, and
       SB-EXT:HASH-TABLE-SYNCHRONIZED-P.
     + optimization: CONCATENATE on strings is an order of magnitue faster
       in code compiled with (> SPEED SPACE).
     + optimization: SUBSEQ is ~50% faster on lists.
     + bug fix: bug 417 fixed -- source location reporting is now more robust.
     + bug fix: SUBSEQ on a list will now correctly signal an error if if
       END is smaller then START.
     + bug fix: SB-PROFILE will no longer report extra consing for nested
       calls to profiled functions.
     + bug fix: ROOM implementation had bogus fixnum declarations which
       could cause type-errors when calling ROOM on large images.
     + bug fix: if file compilation is aborted, the partial fasl is now
       deleted, and COMPILE-FILE returns NIL as the primary value.
     + bug fix: number of thread safety issues relating to SBCL's internal
       hash-table usage have been fixed.
     + bug fix: SB-SYS:WITH-PINNED-OBJECTS could cause garbage values to
       be returned from its body when the values were being returned
       using unknown-values return convection and the W-P-O was wrapped
       inside an UNWIND-PROTECT.
  * Moved Homepage: field

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 12 Dec 2007 05:49:07 +0100

sbcl (1:1.0.11.0-1) unstable; urgency=low

  * Use Vcs-Bzr in control file
  * New upstream release. Major changes:
     + incompatible change: hash-table accessor functions are no longer
       automatically protected by locks. Concurrent accesses on the same hash-table
       from multiple threads can give inconsistent results or even corrupt the
       hash-table completely. Multi-threaded applications should do their own
       locking at the correct granularity. In the current implementation it is
       still safe to have multiple readers access the same table, but it's not
       guaranteed that this property will be maintained in future releases.
     + minor incompatible change: (SETF MUTEX-VALUE) is not longer supported,
       and will signal an error at runtime.
     + enhancement: SB-THREAD package now exports a semaphore interface.
     + enhancement: CONS can now stack-allocate on x86 and
       x86-64. (Earlier LIST and LIST* supported stack-allocation, but
       CONS did not.)
     + enhancement: nested lists can now be stack allocated on
       platforms providing stack allocation support.
     + enhancement: dynamic-extent support has been extended to support
       cases where there are multiple possible sources for the stack
       allocated value.
     + optimization: RELEASE-MUTEX no longer needs to perform a syscall
       if the mutex is uncontested on Linux.
     + bug fix: symbol-macro expansion now uses the *MACROEXPAND-HOOK*
       as specified by the CLHS. (thanks to Tobias Rittweiler)
     + bug fix: NaN comparison now works on x86-64.
     + bug fix: CLOSE :ABORT T on a stream with pending output now
       works.
     + bug fix: instances of non-standard metaclasses using standard
       instance structure protocol sometimes missed the slot type checks
       in safe code.
     + bug fix: known functions can be inlined in high-debug code.

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 26 Oct 2007 23:38:00 +0200

sbcl (1:1.0.10.0-1) unstable; urgency=low

  * New upstream version. Major changes:
     + new feature: SB-CLTL2 contrib module now implements
       FUNCTION-INFORMATION. (thanks to Larry D'Anna)
     + optimization: scavenging weak pointers is now more efficient,
       requiring O(1) instead of O(N) per weak pointer to identify
       scanvenged vs. unscavenged pointers. (thanks to Paul Khuong)
     + optimization: typechecking (SETF SLOT-VALUE) is now ~5x faster in
       method bodies using constant slot-names when the first argument is
       a specializer parameter for the method.
     + optimization: SLOT-VALUE &co are now ~50% faster for variable slot
       names, when the class of the instance is a direct instance
       STANDARD-CLASS or FUNCALLABLE-STANDARD-CLASS (making them only 3x
       as slow as the constant slot-name case.)
     + optimization: member type construction is now O(N) instead
       of O(N^2).
     + optimization: UNION and NUNION are now O(N+M) for large
       inputs as long as the :TEST function is one of EQ, EQL, EQUAL, or
       EQUALP.
     + enhancement: DEFINE-MODIFY-MACRO lambda-list information is
       now more readable in environments like Slime which display it.
       (thanks to Tobias C. Rittweiler)
     + bug fix: SB-EXT:COMPARE-AND-SWAP was non-atomic unless the compiler
       was able to infer the correct argument type for the object on which
       the CAS operation was being performed.
     + bug fix: copy propagation interfered with parallel assignment
       semantics in local calls. (reported by Paul Khuong)
     + bug fix: the signed modular fixnum shift compiled to wrong code on
       x86 and x86-64.  (spotted by a slight modification to some of
       PFD's random tests)

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 27 Sep 2007 22:32:05 +0200

sbcl (1:1.0.9.0-1) unstable; urgency=low

  * New upstream version. Major changes:
     + minor incompatible change: SB-SYS:OUTPUT-RAW-BYTES is deprecated.
     + enhancement: SB-EXT:FINALIZE accepts a :DONT-SAVE keyword argument,
       indicating the finalizer should be cancelled when SAVE-LISP-AND-DIE
       is called.
     + enhancement: default PRINT-OBJECT methods for classes, slot-definitions,
       and generic function now print the object identity for anonymous
       instances. (thanks to Attila Lendvai)
     + enhancement: as an extension to MOP, SBCL now supports SETF of
       STANDARD-INSTANCE-ACCESS and FUNCALLABLE-STANDARD-INSTANCE-ACCESS.
       (thanks to Attila Lendvai)
     + enhancement: sb-cover has an alternate annotation mode which puts
       the form annotations at the car of the form, instead of annotating
       it completely. The benefit of this mode is that it shows better
       which forms were instrumented by the compiler.
     + bug fix: new compiler transforms for MEMBER and ASSOC were affected
       by printer control variables. (reported by Dan Corkill)
     + bug fix: system leaked memory when delayed output was performed by
       the OS in smaller chunks then expected. (thanks to David Smith)
     + bug fix: system leaked memory when file streams were not closed
       properly.
     + bug fix: large objects written to slow streams that were modified
       after the write could end up with the modified state written to
       the underlying file descriptor.
     + bug fix: multiple threads operating in parallel on the same stream
       could cause buffer-overflows.
     + bug fix: source location information is stored correctly
       (broken since 1.0.6). This bug would generally show up as the
       Slime debugger higlighting the wrong form when the sldb-show-source
       command was used.
     + bug fix: Branch forms are again annotated as branches in the sb-cover
       annotations.
     + bug fix: GCD on MOST-NEGATIVE-FIXNUM no longer causes an infinite loop
       on x86-64. (reported by Gregory Vanuxem)
     + bug fix: EQUALP could return wrong results for structures with raw
       slots (slots with a :TYPE of SINGLE-FLOAT, DOUBLE-FLOAT, or a machine
       word). (reported by Vjacheslav Fyodorov)
     + bug fix: sb-sprof sampling didn't work on non-x86oid platforms. (patch
       by Pierre Mai)
  * Removed sparc, alpha, mips and mipsel ports as they did not build for
    quite some time and there are more important things in life then trying
    to get them to work again and again and again.
  * This fixes the sparc64 install by removing it. (Closes: #394775)
  * This also fixes the gcc-3.4/g++-3.4 dependency. (Closes: #440431)

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 14 Sep 2007 05:38:35 +0200

sbcl (1:1.0.8.0-1) unstable; urgency=low

  * added .debian to the lisp version, as requested by upstream.
  * New upstream version. Major changes:
      + enhancement: experimental macro SB-EXT:COMPARE-AND-SWAP provides
        atomic compare-and-swap operations on threaded platforms.
      + enhancement: experimental function SB-EXT:RESTRICT-COMPILER-POLICY
        allows assining a global minimum value to optimization qualities
        (overriding proclamations and declarations).
      + enhancement: closed over variables can be stack-allocated on x86
        and x86-64.
      + performance bug fix: GETHASH and (SETF GETHASH) are once again
        non-consing.
      + optimization: slot definition lookup is now O(1). This speeds up
        eg. SLOT-VALUE and (SETF SLOT-VALUE) with variable slot names.
      + optimization: STRING-TO-OCTETS is now up to 60% faster for UTF-8.
      + optimization: ASSOC and MEMBER can now be open-coded for all
        combinations of keyword arguments when second argument is constant
        and SPEED >= SPACE. In other cases a specialized version is
        selected.
      + bug fix: using obsoleted structure instances with TYPEP and
        generic functions now signals a sensible error.
      + bug fix: threads waiting on GET-FOREGROUND can be interrupted.
        (reported by Kristoffer Kvello)
      + bug fix: backtrace construction is now more careful when making
        lisp-objects from pointers on the stack, to avoid creating bogus
        objects that can be seen by the GC.
      + bug fix: defaulting of values in contexts expecting more than 7
        variables now works on x86-64.  (reported by Christopher Laux)
      + bug fix: modifications to packages (INTERN, EXPORT, etc) are now
        thread safe.
      + bug fix: (SETF SYMBOL-PLIST) no longer allows assigning a non-list
        as the property-list of a symbol.
      + bug fix: DEFMETHOD forms with CALL-NEXT-METHOD in the method body,
        in EVAL-WHEN forms with both :COMPILE-TOPLEVEL and :LOAD-TOPLEVEL
        situations requested, are once again file-compileable.  (reported
        by Sascha Wilde)

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 15 Aug 2007 10:40:01 +0200

sbcl (1:1.0.7.0-1) unstable; urgency=low

  * New upstream version. Major changes:
     + MOP improvement: support for user-defined subclasses of
       SB-MOP:SPECIALIZER has been enhanced.  The experimental interface
       function SB-PCL:MAKE-METHOD-SPECIALIZERS-FORM, called as part of
       the expansion of DEFMETHOD, is responsible for generating a form
       which creates a list of specializers when evaluated.  Additional
       functions SB-PCL:[UN]PARSE-SPECIALIZER-USING-CLASS provide
       debugging and introspective support.
     + minor incompatible change: the (unsupported) spinlock interface
       has changed: free spinlock now has the value NIL, and a held spinlock
       has the owning thread as its value.
     + enhancement: WITHOUT-INTERRUPTS now binds ALLOW-WITH-INTERRUPTS and
       WITH-LOCAL-INTERRUPTS as local macros. Refer to documentation string
       for details.
     + enhancement: name of a socket-stream is now "a socket" instead of
       "a constant string".
     + enhancement: SB-POSIX now supports lockf(). (Thanks to Zach Beane.)
     + enhancement: SB-POSIX now supports getcwd(). (Thanks to Tassilo Horn.)
     + enhancement: SB-INTROSPECT:FUNCTION-ARGLIST shows nicer argument lists
       for generic functions. (Thanks to Tobias C. Rittweiler)
     + optimization: bignum printing speed has been improved by 20-40%
       (depending on the bignum size.)
     + bug fix: WITH-MUTEX and WITH-RECURSIVE-LOCK are now interrupt safe
       on Linux.
     + bug fix: the cache used by the CLOS to store precomputed effective
       methods, slot offsets, and constant return values is now thread and
       interrupt safe.
     + bug fix: generic function dispatch function updating is now thread
       and interrupt safe (in the sense that the known issues have been
       fixed.)
     + bug fix: ADD/REMOVE-METHOD is now thread and interrupt safe.
     + bug fix: interning EQL-specializers is now thread and interrupt safe.
     + bug fix: asdf systems with dependencies to the SB-POSIX or
       SB-BSD-SOCKETS contribs can be loaded with :FORCE T.
     + bug fix: interrupt safety of applicable method computation has been
       improved.
  * Also remove .fontconfig on make clean.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 10 Jul 2007 21:19:56 +0200

sbcl (1:1.0.6.0-1) unstable; urgency=low

  * New upstream. Major changes:
     + new contrib: sb-cover, an experimental code coverage tool, is included
       as a contrib module.
     + optimization: STRING-TO-OCTETS for unibyte encodings and UTF-8 is
       significantly faster.
     + optimization: calls of the form (AREF FOO (+ INDEX <constant>)) now
       produce more efficient code on x86-64 if the compiler can determine
       that (+ INDEX <constant>) does not require a bounds check and FOO
       has an element type at least 8 bits wide.
     + enhancement: a new, experimental synchronous timeout facility is
       provided. Refer to SB-SYS:WITH-DEADLINE for details.
     + enhancement: when a symbol name conflict error arises, the
       conflicting symbols are always printed with a package prefix.
       (thanks to Kevin Reid)
     + enhancement: stepping is now once again supported on the SPARC and
       MIPS platforms.  (It is also now more likely to work on CheneyGC
       builds on the PPC.)
     + enhancement: sb-sprof can now also track and report accurate call
       counts.
     + bug fixes: the treatment of non-standard subclasses of
       SB-MOP:SPECIALIZER is more correct.
     + incompatible change: PURIFY no longer copies the data from the
       dynamic space into the static and read-only spaces on platforms
       that use the generational garbage collector
     + bug fix: GETHASH, (SETF GETHASH), CLRHASH and REMHASH are now
       interrupt safe.
     + bug fix: GC race condition occasionally resulting in crashes with
       the error message "SIG_STOP_FOR_GC blocked at a bad place" has been
       fixed.
     + bug fix: &ENVIRONMENT variables in macro lambda lists can now be
       declared ignored.
     + bug fix: DEFSETF lambda lists without &ENVIRONMENT no longer cause
       a STYLE-WARNING to be signalled (regression from 1.0.4.)
     + bug fix: an asynchronous interrupt could previously leave the
       system running with GC inhibited.
     + bug fix: a DECLARE form evaluated at top-level now causes an error
       rather than silently (or verbosely) returning NIL.
     + bug fix: trying to dissassemble functions compiled at high DEBUG could
       result in a error being signalled due to source form lookup errors.
       (reported by Peter Graves)

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 31 May 2007 22:32:33 +0200

sbcl (1:1.0.5.0-2) unstable; urgency=low

  * Fixed XS-Vcs-Bzr line in control file.
  * Now build-depends on texlive,
    texlive-extra-utils and texlive-generic-recommended
    (Closes: #422046)

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 04 May 2007 22:20:42 +0200

sbcl (1:1.0.5.0-1) unstable; urgency=low

  * New upstream major changes:

     + incompatible change: removed writer methods for host-ent-name,
       host-ent-addresses -- changing the values did not update the DNS
       information anyway.
     + minor incompatible change: changed experimental JOIN-THREAD interface
     + documentation: the manual now lists reader and writer methods
       in class slot documentation sections. (thanks to Richard M Kreuter)
     + documentation: unwinding from asyncronous events has been
       documented as unsafe.
     + documentation: SB-SYS:WITHOUT-GCING has been documented as unsafe
       in multithreaded application code.
     + optimization: GET-INTERNAL-REAL-TIME has been optimized on POSIX
       platforms. (thanks to James Anderson for the optimization hint)
     + optimization: REPLACE, SUBSEQ, and COPY-SEQ are now optimized in
       more cases.
     + optimization: STRING-{EQUAL,LESSP,GREATER-P} and their NOT-
       variants no longer cons.
     + optimization: Direct calls to CHAR-{EQUAL,LESSP,GREATERP} and
       their NOT- variants no longer cons.
     + optimization: EQUAL hash tables no longer use SXHASH for objects
       of all data types, but instead use an EQL hash for types for which
       EQUAL is the same as EQL.
     + optimization: the non-inlined generic versions of AREF and (SETF AREF)
       are significantly faster.
     + optimization: new STRING-OUTPUT-STREAM implementation is much
       faster for large outputs and conses 30% less on average.
     + enhancement: XREF information is now collected for references made
       to global variables using SYMBOL-VALUE and a constant argument.
     + enhancement: SIGINT now causes a specific condition
       SB-SYS:INTERACTIVE-INTERRUPT to be signalled.
     + bug fix: FILE-POSITION used to signal an error in some cases where
       ANSI requires it to return NIL.
     + bug fix: ADJUST-ARRAY is now interrupt-safe.
     + bug fix: adding and removing fd-handlers is now interrupt-safe.
     + bug fix: bad type declaration in the CLOS implementation has
       been fixed. (reported by James Anderson)
     + bug fix: incorrect ROOM reporting on x86-64 has been fixed.
       (thanks to Lutz Euler)
     + bug fix: DEFSETF now allows &ENVIRONMENT and disallows &AUX as
       required by the CLHS. (reported by Samium Gromoff)
     + bug fix: dead unbound variable references now signal an error.
       (reported by Marco Monteiro)
     + bug fix: / with an unused value was being deleted in safe code.
       (thanks to Marco Monteiro and Kevin Reid)
     + bug fix: number of characters that can be written onto a single
       line in a file is unlimited.
     + bug fix: some GC deadlocks caused by asynchronous interrupts have
       been fixed by inhibiting interrupts for when GC is disbled.
     + bug fix: some interrupt safety issues with GETHASH, (SETF
       GETHASH), CLRHASH and REMHASH have been fixed.
     + bug fix: binding *BREAK-ON-SIGNALS* to a value that is not a type
       specifier no longer causes infinite recursion.
     + bug fix: SB-EXT:MUFFLE-CONDITIONS declarations no longer trigger a
       bogus warning in DEFMETHOD bodies. (reported by Kevin Reid)
     + bug fix: an &environment argument with the correct variable information
       is passed to macros that are expanded during byte compilation.
       (reported by Samium Gromoff)
     + bug fix: a logic error was causing the hash function for bignums to
       have excessive amounts of collisions. (reported by Faré Rideau)
     + bug fix: modifying the contents of an array could change the return
       value of SXHASH on that array, which is only allowed for strings
       and bit vectors. (bug introduced in 0.9.16)
     + improvement: a style-warning is signaled for CASE (etc) clauses with
       duplicate keys. (thanks to Kevin Reid)

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 29 Apr 2007 01:04:47 +0200

sbcl (1:1.0.4.0-2) unstable; urgency=low

  * Upload to unstable

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 09 Apr 2007 01:42:32 +0200

sbcl (1:1.0.4.0-1) experimental; urgency=low

  * make.sh actually needs bash, or at least not dash because
    of the "time <foo>" statements.
  * New upstream major changes:
     + incompatible change: the thread-safe (on most platforms) getaddrinfo
       and getnameinfo sockets functions are used instead of gethostbyaddr
       and gethostbyname, on platforms where the newer functions are available.
       As a result, the ALIASES field of HOST-ENT will always be NIL on these
       platforms.
     + change: runtimes with embedded cores (i.e. saved with :EXECUTABLE T)
       don't print the startup banner, but behave as if --noinform was passed
       as a command line argument. (thanks to Kevin Reid)
     + new experimental feature: added JOIN-THREAD (by NIIMI Satoshi)
     + optimization: code using alien values with undeclared types is much faster.
     + optimization: the compiler is now able to open code SEARCH in more cases.
     + optimization: more compact typechecks on x86-64 (thanks to Lutz Euler)
     + bug fix: using standardized COMMON-LISP special variables as loop
       variables no longer signals bogus package lock violations. (reported
       by Eric Marsden)
     + bug fix: declaring local loop variables to be of a range-limited type
       such as (SINGLE-FLOAT 1.0 2.0) no longer causes a compile-time error.
       (reported by Andras Simon)
     + bug fix: >= and <= gave wrong results when used with NaNs. (Some NaN
       bugs remain on x86-64.)
     + bug fix: the #= and ## reader macros now interact reasonably with
       funcallable instances.
     + bug fix: type-checks for function arguments were compiled using the
       compiler policy settings of the wrong lexical environment (in 1.0.2
       and 1.0.3).
     + bug fix: SHADOW accepts characters as string designators, as required
       by the spec (thanks to Eric Marsden)
     + bug fix: fixed GC safety issues when foreign functions are called with
       non-base strings as arguments
     + bug fix: more consistent error output for fatal-compiler-warnings, like
       reader errors
     + bug fix: functions with proper names were showing up as NIL in
       backtraces (reported by Edi Weitz, regression in 1.0.2)

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 27 Mar 2007 06:57:11 +0200

sbcl (1:1.0.3.35-1) experimental; urgency=low

  * New intermediate upstream as 1.0.3.0 causes type
    related problems with the new inlined sort. This causes
    a full warning in swank (part of slime) for example.

    Notable changes:
     + new platform: experimental support for x86-64/darwin (MacOS).
     + incompatible change: the thread-safe (on most platforms) getaddrinfo
       and getnameinfo sockets functions are used instead of gethostbyaddr
       and gethostbyname, on platforms where the newer functions are available.
       As a result, the ALIASES field of HOST-ENT will always be NIL on these
       platforms.
     + optimization: code using alien values with undeclared types is much faster.
     + optimization: the compiler is now able to open code SEARCH in more cases.
     + optimization: more compact typechecks on x86-64 (thanks to Lutz Euler)
     + bug fix: >= and <= gave wrong results when used with NaNs.
     + bug fix: the #= and ## reader macros now interact reasonably with
       funcallable instances.
     + bug fix: type-checks for function arguments were compiled using the
       compiler policy settings of the wrong lexical environment (in 1.0.2
       and 1.0.3).
     + bug fix: SHADOW accepts characters as string designators, as required
       by the spec (thanks to Eric Marsden)
     + bug fix: fixed GC safety issues when foreign functions are called with
       non-base strings as arguments
     + bug fix: more consistent error output for fatal-compiler-warnings, like
       reader errors
     + bug fix: functions with proper names were showing up as NIL in
       backtraces (reported by Edi Weitz, regression in 1.0.2)

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  7 Mar 2007 20:37:44 +0100

sbcl (1:1.0.3.0-1) experimental; urgency=low

  * New upstream. Major changes:
    + optimization: calls of the form (AREF FOO (+ INDEX <constant>)) now
      produce more efficient code on the x86 if the compiler can determine
      that (+ INDEX <constant>) does not require a bounds check and FOO
      has an element type at least 8 bits wide.
    + bug fix: references to undefined variables are handled the same way
      in toplevel forms as in the normal compiler
    + bug fix: the build scripts again work with non-bash /bin/sh (thanks
      to Magnus Henoch)
    + improvement: faster compilation times for complex functions
    + improvement: added readlink support to SB-POSIX (thanks to Richard
      M Kreuter)

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 28 Feb 2007 23:08:25 +0100

sbcl (1:1.0.2.0-1) experimental; urgency=low

  * New upstream release. major changes:
    in 1.0.2:
     + improvement: experimental support for mach exception handling on
       x86/macos. requires building with :MACH-EXCEPTION-HANDLER feature
       to use.
     + improvement: support for GBK external format.
       (thanks to Chun Tian (binghe))
     + improvement: the debugger now displays variables that have been closed
       over, in code compiled with (DEBUG 2) or higher
     + new feature: added a RESTART-FRAME debugger command
     + new feature: new generic function SB-GRAY:STREAM-FILE-POSITION can
       be used to provide an implementation for FILE-POSITION on Gray streams
       (thanks to Eric Marsden)
     + new feature: add syslog, openlog and closelog support to SB-POSIX
       (thanks to Richard Kreuter)
     + optimization: the function call overhead in code compiled with
       a high DEBUG optimization setting is significantly
     + bug fix: an error is signaled for attempts to use READ-SEQUENCE
       for a (SIGNED-BYTE 8) stream and (UNSIGNED-BYTE 8) vector, or vice versa.
       (thanks to Tony Martinez)
     + bug fix: the initforms for DEFMETHOD &AUX parameters are only
       evaluated once (reported by Kevin Reid)
     + bug fix: the :SHOW-PROGRESS keyword parameter to SB-SPROF:WITH-PROFILING
       works again (thanks to Kilian Sprotte)
     + bug fix: an error is signaled for tagbodies with duplicate tags
       (thanks to Stephen Wilson)
     + bug fix: NIL can be used as a tagbody tag (thanks to Stephen Wilson)
     + bug fix: SBCL works on Linux/ppc systems with a kernel configured to use
       65k pages (thanks to David Woodhouse)
     + bug fix: fix SB-POSIX dirent and socket on NetBSD (thanks to Richard Kreuter)

   in 1.0.1:
     + new feature: the compiler stores cross-referencing information
       abount function calls (who-calls), macroexpansion (who-macroexpands)
       and special variables (who-binds, who-sets, who-references) for code
       compiled with (< SPACE 3). This information is available through the
       sb-introspect contrib.
     + new feature: users may subclass SEQUENCE, and have instances of
       these classes interoperate with standard Common Lisp functions if
       a number of methods are defined.  (This feature is experimental
       and the interface subject to change based on feedback from SBCL
       users and the general community)
     + improvement: sb-sprof traces call stacks to an arbitrary depth on
       x86/x86-64, rather than the previous fixed depth of 8
     + improvement: another pthread back-end of mutex "pthread-futex".
     + bug fix: non-ascii command-line arguments are processed correctly
       (thanks to Yaroslav Kavenchuk)
     + bug fix: non-required arguments were not passed correctly when a method
       defined using DEFMETHOD was called from a mop-generated method using
       CALL-NEXT-METHOD (reported by Pascal Costanza)
     + bug fix: recursion is now permitted in accessors through
       SLOT-UNBOUND.  (reported by Pascal Costanza)
     + bug fix: an error was signaled at startup if the HOME environment
       variable was defined, but had an empty value (reported by Peter Van Eynde)
     + bug fix: non ordinary lambda-list keyword in ordinary lambda lists
       signal a PROGRAM-ERROR, not a BUG.
     + bug fix: SB-POSIX:READDIR works when built with large file support.
     + bug fix: ENOUGH-NAMESTRING works relative to #p"/" as well. (thanks
       to Marco Monteiro)
     + enhancement: DESTRUCTURING-BIND lambda-list uses &BODY instead of &REST
       for better automatic indentation support. (thanks to Matt Pillsbury)
     + optimization: loading generic functions no longer takes O(n^2) time,
       proportional to the amount of methods in the generic function
       (reported by Todd Sabin and Jeremy Brown)
     + optimization: the FIND and POSITION family of sequence functions
       are significantly faster on arrays whose element types have been
       declared.
  * upload to experimental during the freeze

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  6 Feb 2007 11:11:27 +0100

sbcl (1:1.0.0.0-1) unstable; urgency=low

  * New upstream version. Major changes:

    + improvement: runtime option --dynamic-space-size can be used
      to set the size of the dynamic space reserved on startup.
    + improvement: floating point modes in effect are now saved in
      core, and restored on startup.
    + improvement: GET-INTERNAL-REAL-TIME now reports the time since
      startup, not time since first call to GET-INTERNAL-REAL-TIME.
    + improvement: SAVE-LISP-AND-DIE explicitly checks that multiple
      threads are not running after *SAVE-HOOKS* have run.
    + improvement: writes to CLOS instance slots are type-checked in code
      compiled with (SAFETY 3)
    + improvement: SB-POSIX supports time(2), utime(2) and utimes(2)
      (thanks to Zach Beane)
    + improvement: support for files larger than 2GB for CL streams and SB-POSIX
      on Linux/x86
    + improvement: added support for the Shift-JIS external format.
      (contributed by NIIMI Satoshi)
    + improvement: callbacks are supported on Linux/PPC.  (thanks to
      Joshua Ross)
    + bug fix: compiler bug triggered by a (non-standard) VALUES
      declaration in a LET* was fixed. (reported by Kaersten Poeck)
    + bug fix: file compiler no longer confuses validated and already
      dumped structurres. (reported by Kaersten Poeck)
    + bug fix: ADJUST-ARRAY :FILL-POINTER T on an array without a
      fill-pointer signals a type-error as required. (thanks to
      Lars Brinkhoff)
    + bug fix: disassemly of funcallable instances works.
    + bug fix: single stepping on PPC.
    + bug fix: fix thread-safety problems in the type system (generally
      manifesting as nonsensical errors like "STRING is a bad type specifier
      for sequences" or "The value 1 is not of type FIXNUM")
    + bug fix: version components are handled correctly in TRANSLATE-PATHNAME
      (reported by Josip Gracin)
    + bug fix: an error is signaled for attempts to displace arrays with
      incompatible element types (thanks to Mario Mommer)
    + bug fix: more correct handling of wide characters in debug info
      (bug reported by Attila Lendvai and fixed by Juho Snellman)
    + optimization: method calls with &OPTIONAL or &KEY arguments are faster
      and don't cause extra consing
    + optimization: MAP and MAP-INTO are significantly faster on vectors
      whose elements types have been declared.
    + Improvements to SB-SPROF:
      ** Support for allocation profiling
      ** Reduced profiling overhead, especially for long profiling runs

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 30 Nov 2006 22:18:48 +0100

sbcl (1:0.9.18.0-3) UNRELEASED; urgency=low

  * token new version

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 12 Nov 2006 23:15:23 +0100

sbcl (1:0.9.18.0-2) unstable; urgency=high

  * make $HOME the build directory. Should (Closes: #397987)
    and fix the FTBFS
  * Fix for FTBFS on mips/mipsel because of changed kernel
    headers. (Closes: #398233)

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 12 Nov 2006 20:53:57 +0100

sbcl (1:0.9.18.0-1) unstable; urgency=low

  * New upstream version. Major changes:
    + enhancement: SB-POSIX now supports cfsetispeed(3), cfsetospeed(3),
      cfgetispeed(3), cfgetospeed(3), and related constants. (thanks to
      Max-Gerd Retzlaff)
    + bug fix: two potential GC deadlocks affecting threaded builds.
    + bug fix: (TYPEP #\A '(NOT (MEMBER #\" #\{ #\:))) now correctly
      returns T (reported by Anton Kazennikov)
    + bug fix: the STORE-VALUE restart of CHECK-TYPE works correctly
      with non-variable places
    + bug fix: remove a race condition in the setting of
      funcallable-instance functions, this should make threaded CLOS
      code more stable against memory faults.
    + bug fix: corruption of specials when unbinding is interrupted by an
      asynchronous unwind (reported by Hannu Koivisto)
    + improvement: the debugger will now also display local variables that
      are only used once, for code compiled with a DEBUG optimization quality
      of 2 or higher.
  * Add lintian overrides because the licence isn't GPL it just uses the
    wrong words that trigger the lintian warning it seems.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  8 Nov 2006 07:25:40 +0100

sbcl (1:0.9.17.0-2) UNRELEASED; urgency=low

  * added XS-Vcs-Svn field to control file
  * Try to fix mipsel build problems.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 18 Oct 2006 06:02:12 +0200

sbcl (1:0.9.17.0-1) unstable; urgency=low

  * New upstream version, major changes:
      - feature: weak hash tables, see MAKE-HASH-TABLE documentation
      - incompatible change: External-format support for FFI calls changed.
      - incompatible change: SB-EXT package no longer contains the
        following unused symbols: *GC-NOTIFY-AFTER*, *GC-NOTIFY-BEFORE*,
        *GC-NOTIFY-STREAM*, *ERROR-PRINT-LENGTH*, *ERROR-PRINT-LEVEL*,
        *ERROR-PRINT-LINES*
      - incompatible change: the single-stepper is no longer available
        on Alpha, Mips and Sparc platforms.
      - minor incompatible change: the direct superclasses of
        SB-MOP:FUNCALLABLE-STANDARD-OBJECT are (FUNCTION STANDARD-OBJECT),
        not (STANDARD-OBJECT FUNCTION).  This makes the
        class-precedence-lists of GENERIC-FUNCTION and
        STANDARD-GENERIC-FUNCTION comply with the requirement of ANSI
        1.4.4.5.
      - minor incompatible change: the default stream external format on
        non-unicode SBCL is no longer detected from the locale, but is always
        ISO-8859-1
      - new feature: Add a version of evaluator that uses an interpreter instead
        of the compiler. EVAL still uses the compiler by default, to switch it
        to use the interpreter, set the value of the variable
        SB-EXT:*EVALUATOR-MODE* to :INTERPRET.
      - minor incompatible change: the single-stepper REPL has been merged
        with the normal debugger (see the "Stepping" heading of the debugger help
        for more details). The debugger command STEP will no longer switch
        to the single-stepper REPL.
      - bug fix: ENOUGH-NAMESTRING on pathnames with no name and a pattern
        for a type now works.
      - bug fix: loading of default sysinit file works. (thanks to Leonid
        Slobodov)
      - bug fix: better detection of circularities in the file-compiler.
        (reported by Marco Monteiro)
      - bug fix: the CL pathname functions now work with files that have
        non-ASCII characters in their names (thanks to Yaroslav Kavenchuk)
      - bug fix: The :PTY argument for RUN-PROGRAM will now work on
        systems with Unix98 pty semantics.
      - bug fix: ASDF-INSTALL will now work with bsd tar.
      - bug fix: ASDF-INSTALL uses GNU tar on Solaris (thanks to Josip
        Gracin).
      - bug fix: timers expiring in dead threads no longer cause a
        type-error (reported by Paul "Nonny Mouse").
      - bug fix: thanks to more lightweight single-stepper instrumentation,
        code compiled with (DEBUG 3) will compile and execute significantly faster,
        and will have more accurate type-inferencing than before
      - bug fix: SLOT-VALUE optimizations are no longer done on method parameters
        whose bindings are modified

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 27 Sep 2006 07:24:18 +0200

sbcl (1:0.9.16.0-1) unstable; urgency=low

  * New upstream version. Major changes:
    + feature: implemented the READER-METHOD-CLASS and
      WRITER-METHOD-CLASS portion of the Class Initialization Protocol
      as specified by AMOP.
    + incompatible change: variable SB-EXT:*USE-IMPLEMENTATION-TYPES*
      no longer exists.
    + optimization: faster LOGCOUNT implementation on x86 and x86-64
      (thanks to Lutz Euler)
    + optimization: hashing of general arrays and vectors has been
      improved. (reported by Any Fingerhut)
    + enhancement: SB-INTROSPECT is now able to find definitions of
      profiled functions. (thanks to Troels Henriksen)
    + enhancement: compiler-macro expansion applies now to FUNCALL forms
      as well, allowing compiler-macros for SETF-functions to expand.
    + enhancement: step-instrumentation no longer wraps known
      single-value functions with multiple-value context, allowing
      better type inference.
    + fixed bug #337: use of MAKE-METHOD in method combination now works
      even in the presence of user-defined method classes.  (reported by
      Bruno Haible and Pascal Costanza)
    + fixed bug #339(c): if there are applicable methods not part of any
      long-form method-combination group, call INVALID-METHOD-ERROR.
      (reported by Bruno Haible)
    + fixed bug #361: the :FUNCTION initarg in the protocol for
      initialization of methods can now be used to override
      internally-produced optimized functions.  (reported by Bruno
      Haible)
    + bug fix: extensions of MAKE-METHOD-LAMBDA which wrap the
      system-provided lambda expression no longer cause warnings about
      unbound #:|pv-table| symbols.
    + bug fix: improved the handling of type declarations and the
      detection of violations for keyword arguments with non-constant
      defaults.
    + bug fix: potentially erronous calls to PATHNAME and
      MERGE-PATHNAMES were being flushed in some cases.
      (reported by Richard Kreuter)
    + bug fix: compiled calls to TYPEP were mishandling obsolete
      instances.  (reported by James Bielman and Attila Lendvai)
    + bug fix: format strings with ~> without matching ~< no longer
      trigger an AVER, but signal an understandable error instead.
      (reported by Antonio Martinez)
    + bug fix: specifying an output-file without a pathname-type for
      COMPILE-FILE or COMPILE-FILE-PATHNAME resulted in using the type
      of input-file instead of "fasl". (reported by Robert Dodier)
    + bug fix: compiler-macro lambda-list parsing of FUNCALL forms.
      (reported by James Y Knight).
    + bug fix: compiler-macros-function did not consider the environment
      argument for shadowing by local functions.
    + bug fix: compiler-macros expansion was inhibited by local INLINE
      declarations.
    + bug fix: inline expansions of known functions were subject to
      step-instrumentation in high debug policies, leading to problems
      with type-inference.
    + bug fix: compiler failed to differentiate between different CONS
      types in some cases.
    + bug fix: fixed input, output and error redirection in RUN-PROGRAM
      for win32. (thanks to Mike Thomas and Yaroslav Kavenchuk)
    + bug fix: #368: incorrect use of expressed vs. upgraded array
      element type.
    + bug fix: #306a: more precise unions of array types.
    + thread-safety improvements:
      ** CONDITION-WAIT could return early on Linux, if the thread was
         interrupted and subsequently continued with SIGCONT.
      ** STABLE-SORT and ADJUST-ARRAY were not reentrant.
  * Make sbcl.info file one file. Fixes the 'cannot find Top' error.
    (Closes: #382770)

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  5 Sep 2006 14:56:30 +0200

sbcl (1:0.9.15.0-1) unstable; urgency=low

  [ René van Bevern ]

  * manually bootstrapped the previous SBCL version on Sparc, so that SBCL
    should autobuild again there

  * Build SBCL on Sparc and Alpha with GCC 4.1
    + fixed src/runtime/{sparc,alpha}-arch.c for compilation with GCC 4.1
    + debian/control: do not depend on gcc-3.4 for sparc, alpha
    + debian/rules: use gcc (default 4.1) for sparc and alpha

  * debian/ld-script.alpha-linux: document the purpose of this ld script

  * Minor cleanup of our diff.gz: reverted Debian's changes on files:
    + src/runtime/ld-script.alpha-linux: overwritten by
      debian/ld-script.alpha-linux at build-time
    + src/runtime/Config.alpha-linux, src/code/toplevel.lisp: they had no
      effect

  [ Peter Van Eynde ]
  * Move to bzr
  * New upstream, changes:
    - added support for the ucs-2 external format.  (contributed by Ivan
      Boldyrev)
    - minor incompatible change: pretty printing of objects of type
      (cons symbol) is, in the default pprint-dispatch-table, now
      sensitive to whether the symbol satisfies FBOUNDP.  (thanks to
      Marcus Pearce)
    - minor incompatible change: SB-MOP:FINALIZE-INHERITANCE is now
      called later in a class's lifetime, possibly as late as when the
      first instance of the class is created.  Previously,
      SB-MOP:FINALIZE-INHERITANCE was called by the system as soon as a
      class became finalizeable.
    - fixed bug: FILE-POSITION sometimes returned inconsistent results
      for multibyte external-format streams.  (thanks to "vbzoli")
    - fixed bug: CHANGE-CLASS would fail to preserve the values of slots
      with :ALLOCATION :CLASS inherited from superclasses of the
      original class.
    - fixed bug: anonymous classes can now be created using the :NAME
      initarg and MAKE-INSTANCE / REINITIALIZE-INSTANCE, as specified by
      AMOP.  (reported by Leonid Slobodov on comp.lang.lisp)
    - fixed bug: core-files saved with :EXECUTABLE T can again be
      executed when SBCL_HOME isn't set. (reported by James Knight)
    - fixed bug: toplevel LOCALLY forms with declarations could
      occasionally get miscompiled. (reported by Yaroslav Kavenchuk)
    - fixed bug: printing from several different threads using different
      values of *print-case* could cause invalid output, due to
      some internal special variables of the printer not being bound
      thread-locally (reported by Max Mikhanosha)
    - fixed bug: SPECIALIZER metaobjects (including anonymous classes
      and EQL-SPECIALIZERs) can be used as specializers to DEFMETHOD.
      (reported by Pascal Costanza)
    - fixed bug: FINALIZE-INHERITANCE is called from
      REINITIALIZE-INSTANCE on classes when the class has previously
      been finalized, as required by AMOP.
    - minor code generation optimizations:
      ** better register allocation in CLOS dispatching functions
      ** overflow detection when coercing signed bytes to fixnums on x86-64
      ** is now implemented with one IMUL instruction instead of three shifts
      ** more efficient bit-vector access on x86 and x86-64
      ** more efficient access to raw structure slots on x86 and x86-64
    - fixed some bugs revealed by Paul Dietz' test suite:
      ** ENSURE-DIRECTORIES-EXIST.8: ENSURE-DIRECTORIES-EXIST must
         return its argument.

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  5 Aug 2006 23:15:03 +0200

sbcl (1:0.9.14.0-2) unstable; urgency=low

  [ René van Bevern ]
  * debian/prerm: replace another reference to /usr/bin/sbcl-run by
    /usr/lib/sbcl/sbcl-run

  [ Peter Van Eynde ]
  * Prepare for release.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  5 Jul 2006 22:34:49 +0200

sbcl (1:0.9.14.0-1) unstable; urgency=low

  [René van Bevern]

  * debian/install-clc.lisp: unify logical pathname translations for
    "SYS:SRC;**;*.*.*" and "SYS:CONTRIB;**;*.*.*" to "SYS:**;*.*.*" and
    fix with that the missing "contrib/" part in the SYS:CONTRIB
    translation. All source definitions are accessible now, this Closes: #323274

  * Split the package sbcl-common to sbcl-doc and sbcl-source, so that the
    rather big source code does not need to be installed with the small
    documentation. Also make sbcl-doc include the "SBCL Internals" book

    + debian/control:
      - build-depend on graphviz and gs-gpl, because the
        SBCL Internals documentation wants to draw graphs with "dot" and
        convert them with Ghostscript

      - declare sbcl-source and sbcl-doc packages, make SBCL description
        point at them

    + debian/sbcl-common.doc-base split to debian/sbcl-doc.doc-base.sbcl,
      debian/sbcl-doc.doc-base.sbcl-internals, debian/sbcl-doc.doc-base.asdf

    + debian/rules
      - install source to sbcl-source and documentation to sbcl-doc
      - build, install and make clean "SBCL Internals" documentation

    + debian/sbcl-common.dirs split into sbcl-doc.dirs and sbcl-source.dirs

    + debian/sbcl-common.postinst, debian/sbcl-common.prerm: removed,
      handled by dh_installdocs

    + debian/control: build-depend on graphviz and gs-gpl, because the
      SBCL Internals documentation wants to draw graphs with "dot" and
      convert them with Ghostscript

  * sbcl-run is not intented for usage by end-users. It is used by the
    SBCL package to execute SBCL binary files with binfmt-misc only and
    pollutes the $PATH namespace

    + debian/rules: do not install manual-page for sbcl-run, install
      sbcl-run to /usr/lib/sbcl instead of /usr/bin

    + debian/binfmt: point to /usr/lib/sbcl/sbcl-run as interpreter

  [ Peter Van Eynde ]
  * Move asdf.info and .pdf to cl-asdf package
  * New upstream
  * also clean up ./doc/internals/sbcl-internals.cps
  * move -doc and -source package to doc section

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  1 Jul 2006 00:07:41 +0200

sbcl (1:0.9.13.0-2) unstable; urgency=low

  * Also copy sbcl-info-1 file.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  6 Jun 2006 13:21:33 +0200

sbcl (1:0.9.13.0-1) unstable; urgency=low

  * New upstream. Major chances include:
       + new feature: source path information is generated for macro-expansion
         errors for use in IDE's like Slime (thanks to Helmut Eller)
       + bug fix: calls to the compiler no longer modify *RANDOM-STATE*
       + bug fix: compiler does not loop forever on an invalid type in TYPEP.
       + improvement: compilation of most CLOS applications is significantly
         faster
       + optimization: added a limited bytecode compiler for simple toplevel
         forms, speeding up compilation and FASL loading

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 31 May 2006 16:28:28 +0200

sbcl (1:0.9.12.0-1) unstable; urgency=low

  * Ignore /etc/sbcl.rc loading errors. (Closes: #360458)
  * New upstream release.
  * Updated standard version without real changes.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 15 May 2006 00:58:42 +0200

sbcl (1:0.9.11.0-1) unstable; urgency=low

  * Also build with threading on AMD64.
  * New upstream release, skipped the 0.9.10 series.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 27 Mar 2006 09:35:59 +0200

sbcl (1:0.9.9.0-2) unstable; urgency=low

  * ROOM now prints correct values
    (Closes: #352181)

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat, 11 Feb 2006 08:56:35 +0100

sbcl (1:0.9.9.0-1) unstable; urgency=low

  * New upstream
  * Improved short description on a suggestion
    of Matt R Hall

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat, 28 Jan 2006 10:46:42 +0100

sbcl (1:0.9.8.0-1) unstable; urgency=low

  * Added conflicts with older versions of cl-clx-sbcl.
    Noted by Humberto Ortiz Zuazaga on the Lisp Gardners
    ML.
  * New upstream release

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat, 31 Dec 2005 17:15:50 +0100

sbcl (1:0.9.7.1-3) unstable; urgency=low

  * Found stupid bug: run dh_lisp in binary-arch
    target, NOT in binary-indep (!).
    (Closes: #343406, #341784)

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 15 Dec 2005 07:35:39 +0100

sbcl (1:0.9.7.1-2) unstable; urgency=low

  * Added gcc-3.4 dependency for alpha and mips
  * Use correct 'use this corefile' syntax in buildscript
    Closes: #341856

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  3 Dec 2005 09:58:44 +0100

sbcl (1:0.9.7.1-1) unstable; urgency=low

  * Added build-depndency on dh-lisp (Closes: #341500)

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu,  1 Dec 2005 05:51:26 +0100

sbcl (1:0.9.6.55-1) unstable; urgency=low

  * Now use dh-lisp correctly.  (Closes: #338393)
  * Removed :purify t in save-lisp-and-die on advice of upstream. (Closes: #340104)
  * New upstream solves infinite loop in kernel < 2.6.11

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 23 Nov 2005 21:55:25 +0100

sbcl (1:0.9.6.0-12) unstable; urgency=low

  * use gcc-3.4 on selected platforms again

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 10 Nov 2005 23:06:25 +0100

sbcl (1:0.9.6.0-11) unstable; urgency=low

  * Give up on the clisp cross-compiling,
    manualy recompile everywhere with sbcl.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  8 Nov 2005 21:18:05 +0100

sbcl (1:0.9.6.0-10) unstable; urgency=low

  * Dropped bash from build-dependecies
  * Check if clisp is installed
  * Use 128MB of clisp memory
  * Use unmodified clisp mem file from newer package.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon,  7 Nov 2005 06:55:25 +0100

sbcl (1:0.9.6.0-9) unstable; urgency=low

  * Detect better what memfile to use as clisp host.

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  5 Nov 2005 16:50:43 +0100

sbcl (1:0.9.6.0-8) unstable; urgency=low

  * Added patches to allow cross-building from clisp.
    This seems to work on my machine at least.
    It also fixes the FTBFS on sparc.
    (Closes: #337594)
  * So dropped the Build-Dependency on sbcl, and we use clisp
  * corrected the problem in pre-rm script that
    prevents removal (Closes: #337365)

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  5 Nov 2005 11:25:52 +0100

sbcl (1:0.9.6.0-7) unstable; urgency=low

  * Last try at the buildd problem
  * Suggest slime, not ilisp anymore
  * No more Pre-Depends on common-lisp-controller

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  2 Nov 2005 22:45:49 +0100

sbcl (1:0.9.6.0-6) unstable; urgency=low

  * Use gcc-3.4 on sparc
  * Still trying to get out of the buildd swamp.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  2 Nov 2005 05:16:35 +0100

sbcl (1:0.9.6.0-4) unstable; urgency=low

  * Try to force to use the testing version without the dependency hell.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  1 Nov 2005 19:22:53 +0100

sbcl (1:0.9.6.0-3) unstable; urgency=low

  * Fixed the sbcl, sbcl-common dependency:
    sbcl does not need sbcl-common, but suggests it
    it does conflict with an older version.

    This should fix all the FTBS problems at the
    moment.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 31 Oct 2005 23:45:06 +0100

sbcl (1:0.9.6.0-2) unstable; urgency=low

  * move locale stuff later in the debian/rules file, as to avoid
    perl warnings.
  * use the current gcc for compilation, it should 'just work'

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 31 Oct 2005 07:51:51 +0100

sbcl (1:0.9.6.0-1) unstable; urgency=low

  * Updated watch file
  * New upstream
  * Also use luca's (= ${Source-Version}) trick to
    link sbcl to sbcl-common

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 27 Oct 2005 22:03:52 +0200

sbcl (1:0.9.5.50-1) unstable; urgency=low

  * tools-for-build/where-is-mcontext.c: added exit(0)
    (Closes: #331252)
  * Added mipsel architecture, actual work was done by
    Thiemo Seufer
  * New upstream

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 12 Oct 2005 23:09:35 +0200

sbcl (1:0.9.5.9-1) unstable; urgency=low

  * New upstream
  * Now based on a mixed cvs/darcs buildsystem

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 13 Sep 2005 20:57:06 +0200

sbcl (1:0.9.4.65-1) unstable; urgency=low

  * Peter Van Eynde
    + New upstream version
    + Improved saving of stage1, should be root-resistant.
      Closes: #327311
      I prefer not to modify the upstream clean.sh script, so I
      hide the stage1 files in a tar file
    + Improved 2.4 kernel detection to always fail.
      Closes: #327818

  * René van Bevern:
    + integration with binfmt-support: if binfmt-support is installed,
      FASL objects are now executable like normal programs (if the kernel
      supports it, like the Default one in Debian)
      - debian/sbcl-run (new): script to run lisp program given at the
        command line and quit
      - debian/binfmt (new): binary format description
      - debian/rules: install /usr/bin/sbcl-run and
                      /usr/share/binfmts/sbcl
      - debian/control: Recommend binfmt-support
      - debian/postinst: register binary format description
      - debian/prerm: unregister binary format description
      - README.Debian: mention binfmt-support integration

    + provide sbcl-XX, XX being the FASL version number, so that packages
      can depend on this if they include SBCL FASL files
      - debian/control: add ${sbcl:fasl-version} to Provides
      - debian/fasl-version.lisp (new): append current FASL version to
        debian/sbcl.substvars
      - debian/rules: run fasl-version.lisp in stage1 after it is built

    + allow she-bang (e.g. #!/usr/bin/sbcl-run) in lisp source
      - debian/install-clc.lisp: set up reader macro to discard #!-lines

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 12 Sep 2005 21:06:15 +0200

sbcl (1:0.9.3.72-1) unstable; urgency=low

  * Updated alpha linker script
  * Updated upstream: fixed alpha compiler bug
  * Fix another buglet in alpha compiler
  * New upstream, should work with alpha again

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 21 Aug 2005 15:34:31 +0200

sbcl (1:0.9.3.51-1) unstable; urgency=low

  * New upstream

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat, 13 Aug 2005 21:33:52 +0200

sbcl (1:0.9.3.36-1) unstable; urgency=low

  * Correct /etc/sbclrc /etc/sbcl\.rc load order in manual page.
  * Correct syntax error in changelog
  * Corrected bash-ism in postinst
  * New upstream.
  * Drop threading support for sarge and hoary '24' distributions
  * Drop dead if running on 2.4 or without NTPL
  * Show stderr during building a core
  * sbcl-common replaces a file in sbcl

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 12 Aug 2005 20:36:27 +0200

sbcl (1:0.9.3.15-1) experimental; urgency=low

  * Try newer upstream with the experimental buildds
  * Clean better

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  2 Aug 2005 21:31:49 +0200

sbcl (1:0.9.3.0-2) unstable; urgency=low

  * make scripts required for building executable.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  2 Aug 2005 14:40:09 +0200

sbcl (1:0.9.3.0-1) unstable; urgency=low

  * New upstream, kept the patches from Satoshi to have a fall-back
    encoding.
  * Added generated ChangeLog

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 29 Jul 2005 12:36:30 +0200

sbcl (1:0.9.2.0-3) unstable; urgency=medium

  * Force a source upload as the -1 version was native by accident.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  5 Jul 2005 13:43:54 +0200

sbcl (1:0.9.2.0-2) unstable; urgency=medium

  * Removed CVS build script
  * Updated policy version
  * Added watch file
  * Removed the gcc-4.0 depends as it seems to cause major problems. Keep
    using gcc-3.4 for the moment. I will try to upload newer version of sbcl
    to experimental to iron out further gcc-4 problems.
  * As this correct rather important problem it has urgency medium

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  5 Jul 2005 10:37:09 +0200

sbcl (1:0.9.2.0-1) unstable; urgency=low

  * New upstream.
  * Now with gcc-4.0 to provoke problems

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed, 22 Jun 2005 21:20:10 +0200

sbcl (1:0.9.1.41-2) unstable; urgency=low

  * Include mips patch from Thiemo Seufer.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 20 Jun 2005 08:23:25 +0200

sbcl (1:0.9.1.41-1) unstable; urgency=low

  * Added patch from NIIMI Satoshi to default to latin-1 enconding if the
    default external-format of the locale is not known. Closes: #312826
  * Added patch to disable :sb-thread is the system is not capable of starting
    threads. Based on the patch of Ingvar. Closes: #311818
  * New upstream does not allow reading from a closed file handle.
    Closes: #286334
  * Remove menu file as the intented form of interaction is via slime.
  * Improve debian/rules clean target

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 13 Jun 2005 18:28:31 +0200

sbcl (1:0.9.1.28-1) unstable; urgency=low

  * New upstream.
  * Relaxed build dependencies.
  * Stop doing the tests at all because  the interrupt test hangs.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  7 Jun 2005 05:36:11 +0200

sbcl (1:0.9.1.1-1) unstable; urgency=low

  * Added locales to the Build-Depends. Closes: #310927
  * New upstream.

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 27 May 2005 09:42:57 +0200

sbcl (1:0.9.0.39-1) unstable; urgency=low

  * New upstream to fix unicode related problems.

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri, 20 May 2005 18:59:02 +0200

sbcl (1:0.9.0.19-2) unstable; urgency=low

  * Fixed the --noprogrammer flag to the correct --disable-debugger.
  * Follow the package maintainters manual in enforcing a certain
    locale.
    Both fixes from RalfD

 -- Peter Van Eynde <pvaneynd@debian.org>  Sat,  7 May 2005 22:16:30 +0200

sbcl (1:0.9.0.19-1) unstable; urgency=low

  * Upstream bugfix for 0.9.0.0 release.
  * Now build with all build-time checks disabled! But rebuild sbcl
    with itself, thus testing the newly build sbcl
    Closes: #306711, #302355
  * Now loads /etc/sbcl.rc also. Found by Fare'.

 -- Peter Van Eynde <pvaneynd@debian.org>  Fri,  6 May 2005 07:15:31 +0200

sbcl (1:0.9.0.0-1) unstable; urgency=low

  * New upstream release. Added 0 to version number to indicate patchlevel.

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon, 25 Apr 2005 06:52:14 +0200

sbcl (1:0.8.21.16-2) unstable; urgency=low

  * Changes to build scripts make the autobuilders fail. Fixed scripts.

 -- Peter Van Eynde <pvaneynd@debian.org>  Wed,  6 Apr 2005 05:31:00 +0200

sbcl (1:0.8.21.16-1) unstable; urgency=low

  * Updated upstream release.
  * Improved scripts to build package.
  * Improved doc-base file to list correct location of html files
    and added top level html index file. Closes: #303229
  * Corrected build-depends, sb-bsd-sockets should now work. Closes: #290661
    Closes: #303250

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  5 Apr 2005 19:42:43 +0200

sbcl (1:0.8.21.7-1) unstable; urgency=low

  * New upstream version.

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue, 29 Mar 2005 20:32:37 +0200

sbcl (1:0.8.20.5-3) unstable; urgency=low

  * Add LANG=en_US.UTF-8 to the build environment.
  * Move sbcl-common stuff out of sbcl directories to avoid overwriting
    the sbcl files on upgrades.

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun, 13 Mar 2005 22:52:41 +0100

sbcl (1:0.8.20.5-2) unstable; urgency=low

  * Cleaned up better, avoiding a FTBFS reported by RalfD.
  * Split into indep and arch parts.

 -- Peter Van Eynde <pvaneynd@debian.org>  Thu, 10 Mar 2005 06:45:59 +0100

sbcl (1:0.8.20.5-1) unstable; urgency=low

  * New upstream.
  * Corrected menu file
  * Converted - in to \- in manual pages
  * Included patch from Andreas Jochens that
    gives gcc-4 support. Closes: #298430

 -- Peter Van Eynde <pvaneynd@debian.org>  Mon,  7 Mar 2005 16:51:56 +0100

sbcl (1:0.8.19.39-2) unstable; urgency=low

  * New maintainer. (Closes: #297445: O: sbcl -- A development
    environment for Common Lisp)
  * Adopted by Peter Van Eynde

 -- Peter Van Eynde <pvaneynd@debian.org>  Tue,  1 Mar 2005 10:20:00 +0100

sbcl (1:0.8.19.39-1) unstable; urgency=low

  * New upstream (closes:296824)

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 25 Feb 2005 00:50:33 -0700

sbcl (1:0.8.19.29-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 17 Feb 2005 05:40:22 -0700

sbcl (1:0.8.19.22-1) unstable; urgency=low

  * New upstream
  * Hard code sbcl path in debian/rules

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 10 Feb 2005 08:52:15 -0700

sbcl (1:0.8.19.21-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed,  9 Feb 2005 17:27:19 -0700

sbcl (1:0.8.19.15-1) unstable; urgency=low

  * New upstream
  * Removed mips/mipsel from Architectures since upstream has been broken
  on these for 6 months and no fix is planned.

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri,  4 Feb 2005 15:04:09 -0700

sbcl (1:0.8.19.10-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 31 Jan 2005 20:55:15 -0700
sbcl (1:0.8.19-1) unstable; urgency=low

  * New upstream
  * Add amd64 to supported architectures

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 25 Jan 2005 17:47:21 -0700

sbcl (1:0.8.18.38-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 22 Jan 2005 18:04:48 -0700

sbcl (1:0.8.18.30-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 13 Jan 2005 15:30:43 -0700

sbcl (1:0.8.18.23-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun,  9 Jan 2005 23:39:17 -0700

sbcl (1:0.8.18-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 28 Dec 2004 16:52:38 -0700

sbcl (1:0.8.17.23-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue,  7 Dec 2004 08:38:10 -0700

sbcl (1:0.8.17.21-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun,  5 Dec 2004 13:06:59 -0700

sbcl (1:0.8.17.20-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri,  3 Dec 2004 18:16:43 -0700

sbcl (1:0.8.17.28-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  9 Dec 2004 14:17:27 -0700

sbcl (1:0.8.17.4-1) unstable; urgency=low

  * New upstream
  * Use absolute path for sbcl in sbcl.sh (closes:280153)

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed,  1 Dec 2004 02:03:19 -0700

sbcl (1:0.8.17-2) unstable; urgency=low

  * Add patch for compilation on mips

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 29 Nov 2004 12:09:09 -0700

sbcl (1:0.8.17-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 28 Nov 2004 17:12:59 -0700

sbcl (1:0.8.16.27-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue,  2 Nov 2004 10:21:18 -0700

sbcl (1:0.8.16-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 25 Oct 2004 14:32:20 -0600

sbcl (1:0.8.15.7-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat,  2 Oct 2004 19:25:23 -0600

sbcl (1:0.8.15.6-1) unstable; urgency=low

  * New upstream (closes:273606)

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat,  2 Oct 2004 08:50:17 -0600

sbcl (1:0.8.15-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 29 Sep 2004 14:11:43 -0600

sbcl (1:0.8.14.28-2) unstable; urgency=low

  * Rebuild on i386 for sb-bsd-sockets inclusion (closes:273493)

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 26 Sep 2004 09:38:43 -0600

sbcl (1:0.8.14.28-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 23 Sep 2004 13:31:42 -0600

sbcl (1:0.8.14.24-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 14 Sep 2004 12:21:36 -0600

sbcl (1:0.8.14.21-1) unstable; urgency=low

  * New upstream
  * Add -finline-functions to CFLAGS for powerpc

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 13 Sep 2004 15:13:42 -0600

sbcl (1:0.8.14.17-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 13 Sep 2004 10:33:45 -0600

sbcl (1:0.8.14.9-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 10 Sep 2004 03:04:42 -0600

sbcl (1:0.8.14-2) unstable; urgency=high

  * Fix the setting of incorrect upstream file permissions

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 31 Aug 2004 10:27:41 -0600

sbcl (1:0.8.14-1) unstable; urgency=high

  * New upstream
  * Urgency high to migrate to sarge

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 30 Aug 2004 16:41:49 -0600

sbcl (0.8.21+truly.0.8.13.79-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 25 Aug 2004 13:45:15 -0600

sbcl (0.8.21+truly.0.8.13.78-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 25 Aug 2004 09:28:58 -0600

sbcl (0.8.21+truly.0.8.13.68-2) unstable; urgency=low

  * Include source and set logical pathname translation to more neutral value (closes:267456)

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 24 Aug 2004 02:02:38 -0600

sbcl (0.8.21+truly.0.8.13.68-1) unstable; urgency=low

  * New upstream

 -- root <kmr@debian.org>  Mon, 16 Aug 2004 19:33:34 -0600

sbcl (0.8.21+truly.0.8.13.62-1) unstable; urgency=low

  * New upstream (closes:265644)

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 14 Aug 2004 12:54:09 -0600

sbcl (0.8.21+truly.0.8.13.60-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 13 Aug 2004 17:31:09 -0600

sbcl (0.8.21+truly.0.8.13.56-1) unstable; urgency=low

  * New upstream
  * Add time to build-depends (closes:264255)

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 11 Aug 2004 02:10:59 -0600

sbcl (0.8.21+truly.0.8.13.26-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  5 Aug 2004 01:44:39 -0600

sbcl (0.8.21+truly.0.8.13.19-1) unstable; urgency=low

  * New upstream
  * More common-lisp-controller 4 changes

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue,  3 Aug 2004 08:37:03 -0600

sbcl (0.8.21+truly.0.8.13.13-1) unstable; urgency=low

  * New upstream
  * Switch to common-lisp-controller 4

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 31 Jul 2004 22:38:53 -0600

sbcl (0.8.21+truly.0.8.13.11-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 29 Jul 2004 17:00:23 -0600

sbcl (0.8.21+truly.0.8.13-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 25 Jul 2004 15:33:31 -0600

sbcl (0.8.21+truly.0.8.12.34-1) unstable; urgency=low

  * New upstream (closes: 256764)
  * Re-add alpha architecure with Debian unstable specific linker script
  (debian/ld-script.alpha-linux)

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 12 Jul 2004 23:23:10 -0600

sbcl (0.8.21+truly.0.8.12-3) unstable; urgency=low

  * Re-add mips and mipsel to Architectures since sbcl built fine on
  tbm's mips system. Will upload manually built packages if autobuilding
  fails again.

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 28 Jun 2004 15:52:18 -0600

sbcl (0.8.21+truly.0.8.12-2) unstable; urgency=low

  * Remove mips and mipsel from architectures since they are not building
  correctly on Debian sid.

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 25 Jun 2004 22:30:15 -0600

sbcl (0.8.21+truly.0.8.12-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 25 Jun 2004 17:52:38 -0600

sbcl (0.8.21+truly.0.8.11.20-1) unstable; urgency=low

  * New upstream
  * Enable sb-threads and sb-futex on i386

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 24 Jun 2004 07:39:23 -0600

sbcl (0.8.21+truly.0.8.11-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon,  7 Jun 2004 17:14:38 -0600

sbcl (0.8.21+truly.0.8.10.48-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 22 May 2004 23:48:06 -0600

sbcl (0.8.21+truly.0.8.10.33-1) unstable; urgency=low

  * New upstream
  * Add missing depends (closes:249556)

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 18 May 2004 05:57:16 -0600

sbcl (0.8.21+truly.0.8.10.21-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 12 May 2004 15:51:38 -0600

sbcl (0.8.21+truly.0.8.10.14-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat,  8 May 2004 10:44:27 -0600

sbcl (0.8.21+really.0.8.13-1) unstable; urgency=low

  * New upstream
  * Provide info documentation files (closes: 247683)

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  6 May 2004 09:29:03 -0600

sbcl (0.8.21+really.0.8.10.9-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon,  3 May 2004 19:34:43 -0600

sbcl (0.8.21+really.0.8.10-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 26 Apr 2004 17:24:26 -0600

sbcl (0.8.21+really.0.8.9.56-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 22 Apr 2004 12:10:35 -0600

sbcl (0.8.21+really.0.8.9.35-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 12 Apr 2004 20:38:34 -0600

sbcl (0.8.21+really.0.8.9.29-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  8 Apr 2004 09:01:17 -0600

sbcl (0.8.21+really.0.8.9.27-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed,  7 Apr 2004 16:07:49 -0600

sbcl (0.8.21+really.0.8.9.14-1) unstable; urgency=low

  * New upstream
  * Remove alpha from Architecutres

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  1 Apr 2004 18:22:44 -0700

sbcl (0.8.21+really.0.8.9-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 24 Mar 2004 09:11:43 -0700

sbcl (0.8.21+really.0.8.8.30-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 17 Mar 2004 14:28:50 -0700

sbcl (0.8.21+really.0.8.8.27-1) unstable; urgency=low

  * New upstream
  * Add --force-connect to call to clc-send-command

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 16 Mar 2004 10:36:40 -0700

sbcl (0.8.21+really.0.8.8.23-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 10 Mar 2004 21:28:30 -0700

sbcl (0.8.21+really.0.8.8-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 24 Feb 2004 17:06:53 -0700

sbcl (0.8.21+really.0.8.7.27-1) unstable; urgency=low

  * New upstream
  * Hack around incorrect version number

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 28 Jan 2004 10:40:57 -0700

sbcl (0.8.21-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 26 Jan 2004 01:22:41 -0700

sbcl (0.8.7-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 28 Dec 2003 16:43:15 -0700

sbcl (0.8.6.34-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue,  9 Dec 2003 14:36:07 -0700

sbcl (0.8.5.44-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 16 Nov 2003 18:11:39 -0700

sbcl (0.8.5.30-1) unstable; urgency=low

  * New upstream
  * debian/rules: handle new location of sbcl-asdf-install (closes:220115)

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 10 Nov 2003 17:56:24 -0700

sbcl (0.8.5.28-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 10 Nov 2003 12:07:45 -0700

sbcl (0.8.5-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 25 Oct 2003 11:35:45 -0600

sbcl (0.8.4.20-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 12 Oct 2003 00:07:00 -0600

sbcl (0.8.4-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu,  2 Oct 2003 14:57:29 -0600

sbcl (0.8.3.95-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 20 Sep 2003 14:04:20 -0600

sbcl (0.8.3.83-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 20 Sep 2003 03:36:53 -0600

sbcl (0.8.3.68-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 15 Sep 2003 09:56:50 -0600

sbcl (0.8.3.61+kmr-1) unstable; urgency=low

  * New upstream
  * Patch describe function (closes: 210871)

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri, 12 Sep 2003 12:30:20 -0600

sbcl (0.8.3.42-1) unstable; urgency=low

  * Add Dutch translation from Tim Vandermeersch (closes: 209113)
  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun,  7 Sep 2003 14:30:57 -0600

sbcl (0.8.3.39-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat,  6 Sep 2003 22:17:27 -0600

sbcl (0.8.3-2) unstable; urgency=low

  * Ensure sbcl.sh is executable

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 25 Aug 2003 21:33:27 -0600

sbcl (0.8.3-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 25 Aug 2003 10:13:45 -0600

sbcl (0.8.2.53-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 21 Aug 2003 10:00:20 -0600

sbcl (0.8.2.49-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sun, 17 Aug 2003 18:51:20 -0600

sbcl (0.8.2.27-1) unstable; urgency=low

  * New upstream
  * Install new sbcl-asdf-install executable
  * Rename sbcl-clean.core to sbcl-dist.core
  * Use dh_install rather than install in rules file

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 11 Aug 2003 22:10:07 -0600

sbcl (0.8.2.18-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed,  6 Aug 2003 08:51:58 -0600

sbcl (0.8.2.15-1) unstable; urgency=low

  * New upstream
  * Work around broken autobuilder from common-lisp-controller
  bug (close:202644)

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue,  5 Aug 2003 12:48:53 -0600

sbcl (0.8.2.13-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat,  2 Aug 2003 16:16:49 -0600

sbcl (0.8.2.12-3) unstable; urgency=low

  * Add check for existence of /usr/bin/clc-autobuild-impl
  before calling it in postinst since autobuilders are reporting
  a failure to execute that script.

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri,  1 Aug 2003 19:21:15 -0600

sbcl (0.8.2.12-2) unstable; urgency=low

  * Re-add common-lisp-controller to build-depends

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri,  1 Aug 2003 15:52:34 -0600

sbcl (0.8.2.12-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Fri,  1 Aug 2003 12:58:44 -0600

sbcl (0.8.2.11-1) unstable; urgency=low

  * New upstream
  * Use gettext for language support (closes: 203667)
  * Add French translation (closes:203668)

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 31 Jul 2003 15:10:20 -0600

sbcl (0.8.1.53.1-3) unstable; urgency=low

  * Hard code paths to common-lisp-controller binaries to hopefully
  help autobuilders regarding bug # 202644

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 28 Jul 2003 21:43:06 -0600

sbcl (0.8.1.53.1-2) unstable; urgency=low

  * Add common-lisp-controller to build-depends since autobuilder is
  not adding the Pre-depends on common-lisp-controller when installing
  sbcl to build sbcl (closes:202644)

 -- Kevin M. Rosenberg <kmr@debian.org>  Thu, 24 Jul 2003 09:21:11 -0600

sbcl (0.8.1.53.1-1) unstable; urgency=low

  * New upstream
  * Patch for nil rank arrays (closes:202502)

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 25 Jun 2003 15:58:58 -0600

sbcl (0.8.1-1) unstable; urgency=low

  * New upstream

 -- Kevin M. Rosenberg <kmr@debian.org>  Sat, 21 Jun 2003 09:58:44 -0600

sbcl (0.8.0-1) unstable; urgency=low

  * New upstream
  * Don't look for /usr/local/lib/sbcl.core (closes: 193239)

 -- Kevin M. Rosenberg <kmr@debian.org>  Wed, 30 Apr 2003 13:56:05 -0600

sbcl (0.8alpha.0-1) unstable; urgency=low

  * New upstream
  * Rename /etc/sbclrc to /etc/sbcl.rc
  * Load /etc/sbcl.rc when installing CLC core
  * Rework rules file to use SBCL's make files for installing contribs
  * Remove unnecessary DH_COMPAT export from rules file

 -- Kevin M. Rosenberg <kmr@debian.org>  Mon, 21 Apr 2003 17:24:46 -0600

sbcl (0.7.14-1) unstable; urgency=low

  * New maintainer
  * New upstream (closes: 169735)
  * Rework sbcl-clean.core handling (closes: 180291)
  * Ensure CVS metadata is not installed in binary (closes: 184916)
  * Upgrade to debhelper 4 and use debian/compat file
  * Update standards-version to 3.5.9.0 [no changes required]
  * Update to correct required common-lisp-controller version
  * Add version checking to debconf requirement
  * Rework config and remove bashism
  * Rework templates to use new inherit auto-building feature
  * Rework postinst to use clc-autobuild-impl function
  * Add debhelper cleaning to rules file
  * Remove duplicate conffile's

 -- Kevin M. Rosenberg <kmr@debian.org>  Tue, 25 Mar 2003 12:40:37 -0700

sbcl (0.7.13-2) unstable; urgency=low

  * Kevin M. Rosenberg's fixes:
  * Add upstream contrib packages
  * symlink contrib .asd files in /usr/lib/sbcl/systems

 -- Jonathan Hseu <vomjom@debian.org>  Sun,  2 Mar 2003 15:29:52 -0500

sbcl (0.7.13-1) unstable; urgency=low

  * New upstream
  * Exclude sbcl.core from sbcl.md5sums (closes: Bug#181121)

 -- Jonathan Hseu <vomjom@debian.org>  Wed, 26 Feb 2003 23:02:39 -0600

sbcl (0.7.11-1) unstable; urgency=low

  * New upstream

 -- Jonathan Hseu <vomjom@debian.org>  Tue, 21 Jan 2003 21:14:47 -0600

sbcl (0.7.10-1) unstable; urgency=low

  * New upstream
  * Add mips and mipsel archs.

 -- Jonathan Hseu <vomjom@debian.org>  Mon, 02 Dec 2002 03:25:25 -0600

sbcl (0.7.9-1) unstable; urgency=low

  * New upstream
  * Add Kevin Rosenberg's sbcl.sh fixes to return an error code if packages
    fail to build and to add the make-user-image option.

 -- Jonathan Hseu <vomjom@debian.org>  Tue, 29 Oct 2002 03:43:05 -0600

sbcl (0.7.8-1) unstable; urgency=low

  * Rename install-defsystem.lisp to install-clc.lisp
  * Change sbcl.sh so that:
  * Change reference from defsystem.lisp to common-lisp-controller.lisp
  * Make install-clc and remove-clc synonyms for install-defsystem and
    remove-defsystem.
  * Change reference from install-defsystem.lisp to install-clc.lisp
  * Change all "defsystem" to "clc" in echo's
  * Add mips and mipsel to archs

 -- Jonathan Hseu <vomjom@debian.org>  Mon, 30 Sep 2002 22:35:32 -0500

sbcl (0.7.7-1) unstable; urgency=low

  * New upstream

 -- Jonathan Hseu <vomjom@debian.org>  Sun, 25 Aug 2002 14:36:14 -0500

sbcl (0.7.6-6) unstable; urgency=low

  * Report build failures in sbcl.sh (closes: Bug#155603)
  * Show output on rebuild in sbcl.sh for errors (closes: Bug#155666)

 -- Jonathan Hseu <vomjom@debian.org>  Wed,  7 Aug 2002 01:20:11 -0500

sbcl (0.7.6-5) unstable; urgency=low

  * Take out --disable-debugger in install-defsystem, because its effects
    are permanent

 -- Jonathan Hseu <vomjom@debian.org>  Thu,  1 Aug 2002 18:33:43 -0500

sbcl (0.7.6-4) unstable; urgency=low

  * Add "etc/common-lisp/sbcl" to dirs (closes: Bug#154900)

 -- Jonathan Hseu <vomjom@debian.org>  Tue, 30 Jul 2002 23:49:36 -0500

sbcl (0.7.6-3) unstable; urgency=low

  * Depend on debconf

 -- Jonathan Hseu <vomjom@debian.org>  Sat, 27 Jul 2002 17:39:38 -0500

sbcl (0.7.6-2) unstable; urgency=low

  * Add support for common-lisp-controller v3 install-defsystem
  * Reduce short description length
  * Load /etc/lisp-config.lisp every invocation of sbcl
  * Offer the user an autobuild option for CL libraries

 -- Jonathan Hseu <vomjom@debian.org>  Sat, 27 Jul 2002 01:13:42 -0500

sbcl (0.7.6-1) unstable; urgency=low

  * New upstream

 -- Jonathan Hseu <vomjom@debian.org>  Thu, 25 Jul 2002 02:57:07 -0500

sbcl (0.7.5-2) unstable; urgency=low

  * Applied Christophe's fix for alphas

 -- Jonathan Hseu <vomjom@debian.org>  Tue, 25 Jun 2002 15:59:22 +0200

sbcl (0.7.5-1) unstable; urgency=low

  * New upstream

 -- Jonathan Hseu <vomjom@debian.org>  Sun, 23 Jun 2002 20:14:30 -0500

sbcl (0.7.4-2) unstable; urgency=low

  * Fix redirects in sbcl.sh

 -- Jonathan Hseu <vomjom@debian.org>  Sat,  1 Jun 2002 00:51:21 -0500

sbcl (0.7.4-1) unstable; urgency=low

  * Fix faulty linker flag (closes: Bug#146900)
  * Fix doc-base file (closes: Bug#146976)
  * Fix defsystem (closes: Bug#146508)
  * Quiet compilation (closes: Bug#148252)
  * New description (closes: Bug#148660)

 -- Jonathan Hseu <vomjom@debian.org>  Thu, 16 May 2002 17:12:42 -0500

sbcl (0.7.3-2) unstable; urgency=low

  * Patch from Daniel Barlow so that it builds on newer alphas

 -- Jonathan Hseu <vomjom@debian.org>  Sun,  5 May 2002 23:27:37 -0500

sbcl (0.7.3-1) unstable; urgency=low

  * New upstream
  * Change build-deps to read docbook-dsssl rather than docbook-stylesheets

 -- Jonathan Hseu <vomjom@debian.org>  Fri,  3 May 2002 01:47:27 -0500

sbcl (0.7.2-1) unstable; urgency=low

  * New upstream
  * Add html user manual
  * Add powerpc build

 -- Jonathan Hseu <vomjom@debian.org>  Sun, 24 Mar 2002 16:56:35 -0500

sbcl (0.7.1.22-1) unstable; urgency=low

  * Add sparc to architecture list
  * Fix missing symlink (closes: Bug#129258)
  * Move sbcl.core to /usr/lib/sbcl/
  * Make sbcl.sh work on machines that don't do bash -> sh
  * Add menu item

 -- Jonathan Hseu <vomjom@debian.org>  Wed,  6 Mar 2002 01:56:00 -0600

sbcl (0.7.1-2) unstable; urgency=low

  * Add alpha to architecture list

 -- Jonathan Hseu <vomjom@debian.org>  Sun, 03 Mar 2002 15:03:50 -0600

sbcl (0.7.1-1) unstable; urgency=low

  * New upstream

 -- Jonathan Hseu <vomjom@debian.org>  Mon, 28 Jan 2002 01:34:52 -0600

sbcl (0.6.13-6) unstable; urgency=low

  * Fix sbcl.sh once again (closes: Bug#126270)

 -- Jonathan Hseu <vomjom@debian.org>  Tue, 25 Dec 2001 07:14:18 -0600

sbcl (0.6.13-5) unstable; urgency=low

  * Fix install-defsystem in sbcl.sh (closes: Bug#126024)
  * Change Build-Depends to depend on sbcl instead of lisp-compiler

 -- Jonathan Hseu <vomjom@debian.org>  Thu, 20 Dec 2001 23:39:50 -0600

sbcl (0.6.13-4) unstable; urgency=low

  * New maintainer
  * Initial upload (closes: Bug#110729)
  * Added posix and defsystem fixes from Christophe Rhodes's patch

 -- Jonathan Hseu <vomjom@debian.org>  Mon, 10 Dec 2001 18:04:44 -0600

sbcl (0.6.13-3) unstable; urgency=low

  * Fixed common-lisp-controller integration.

 -- Peter Van Eynde <pvaneynd@debian.org>  Sun,  9 Dec 2001 08:49:14 +0100

sbcl (0.6.13-2) unstable; urgency=low

  * TRACE on Alpha works
  * icache flushing on Alpha is no longer a NOP
  * Deleted some dead code
  * "environ" bug may be fixed
  * compiles on Alpha

 -- Daniel Barlow <dan@glodfish.telent.net>  Fri, 10 Aug 2001 16:34:16 +0100

sbcl (0.6.13-1) unstable; urgency=low

  * New upstream.

 -- Daniel Barlow <dan@glodfish.telent.net>  Fri, 10 Aug 2001 16:19:36 +0100

sbcl (0.6.12.65-1) unstable; urgency=low

  * New upstream. INSPECT now works again
  * Added workaround for (posix-environ) to /etc/sbclrc
  * Made sbcl.sh a little quieter

 -- Christophe Rhodes <csr21@cam.ac.uk>  Mon,  6 Aug 2001 11:27:52 +0100

sbcl (0.6.12.43-1) unstable; urgency=low

  * New upstream

 -- Christophe Rhodes <csr21@cam.ac.uk>  Sun,  1 Jul 2001 11:55:16 +0100

sbcl (0.6.12.4-1) unstable; urgency=low

  * NMU (well, maybe) acknowledged.
  * We have multiarchitecture builds. Next step, the world.
  * Multiple fixes (thanks, Dan) to the sbclrc logic for defsystem.

 -- Christophe Rhodes <csr21@cam.ac.uk>  Tue,  8 May 2001 23:42:02 +0100

sbcl (0.6.12.3-1) unstable; urgency=low

  * NMU (Is that what you call it?)
  * New upstream version
  * Now builds on Alpha architecture too

 -- Daniel Barlow <dan@telent.net>  Tue, 8 May 2001 14:45:37 +0100

sbcl (0.6.11.41-2) unstable; urgency=low

  * Aaargh. We need to remove the compiled defsystem on uninstall

 -- Christophe Rhodes <csr21@cam.ac.uk>  Sun, 22 Apr 2001 23:44:14 +0100

sbcl (0.6.11.41-1) unstable; urgency=low

  * Slight fixups in build process;
  * We're probably stable enough to release to sourceforge.

 -- Christophe Rhodes <csr21@cam.ac.uk>  Sun, 22 Apr 2001 21:21:19 +0100

sbcl (0.6.11.36-1) unstable; urgency=low

  * Update to latest cvs
  * Use the --noprogrammer switch in the common-lisp-controller script

 -- Christophe Rhodes <csr21@cam.ac.uk>  Sun, 15 Apr 2001 10:23:17 +0100

sbcl (0.6.11.32-1) unstable; urgency=low

  * Initial Release.

 -- Christophe Rhodes <csr21@cam.ac.uk>  Fri,  6 Apr 2001 17:55:32 +0100
